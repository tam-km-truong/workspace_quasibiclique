----------------------------------------
 Input Data in csv files : data/data4.csv
Number Rows Data : 55
Number Cols Data : 274
Number Edges_1 : 11122
Number Edges_0 : 3948
----------------------------------------

Task with matrix 1 with size (55,274) and density 0.7380225613802256 and number of ones 11122  and number of zeros 3948 has been added to the queue.

----------------------------------------------------------------------

End of tasks generation stage. Last generated task from matrix 1 with winning node 1 and global time 0.0000000
----------------------------------------------------------------------
 Size of the queue: 1
 Matrix: 1, Size: 11122, Number Rows: 55,  Number Cols: 274,  Number Edges: 11122, obj None

----------------------------------------------------------------------


***QUEUE Processing of task number 1 with (edges 11122) selected_model max_e_c dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 1 in  data/data4.csv at level 0 and with model:  max_e_c***
Size of current matrix :  55 * 274 = 15070 ; dec_conq: 0
number input zeros :  3948 ; number input ones :  11122
rho =  0.1 ; delta :  0.0
Input density : 0.738 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.738 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.7380225613802256 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  143.23636363636365
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 143.23636363636365 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01017 - (Local CPU) 0.01017 - (Global CPU) 0.01017

 Solve status: Optimal Objective value: 143.23636363636365 nb_rows 53 nb_cols 274
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (53, 274) and density : 0.7558187577468668 and number of remaining ones : 10976
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 30), (1, 38), (2, 44), (3, 42), (4, 42), (5, 39), (6, 39), (7, 37), (8, 39), (9, 41), (10, 41), (11, 49), (12, 51), (13, 39), (14, 39), (15, 51), (16, 46), (17, 44), (18, 44), (19, 41), (20, 52), (21, 41), (22, 40), (23, 43), (24, 43), (25, 39), (26, 43), (27, 41), (28, 37), (29, 41), (30, 39), (31, 37), (32, 40), (33, 38), (34, 41), (35, 41), (36, 41), (37, 42), (38, 41), (39, 37), (40, 38), (41, 40), (42, 47), (43, 36), (44, 41), (45, 40), (46, 38), (47, 38), (48, 46), (49, 48), (50, 32), (51, 41), (52, 41), (53, 38), (54, 25), (55, 40), (56, 36), (57, 40), (58, 41), (59, 41), (60, 40), (61, 35), (62, 43), (63, 37), (64, 33), (65, 39), (66, 39), (67, 43), (68, 45), (69, 39), (70, 36), (71, 35), (72, 39), (73, 42), (74, 37), (75, 41), (76, 35), (77, 46), (78, 42), (79, 43), (80, 41), (81, 41), (82, 38), (83, 45), (84, 42), (85, 45), (86, 39), (87, 47), (88, 45), (89, 48), (90, 40), (91, 40), (92, 41), (93, 43), (94, 36), (95, 39), (96, 32), (97, 51), (98, 39), (99, 35), (100, 36), (101, 47), (102, 37), (103, 43), (104, 42), (105, 39), (106, 42), (107, 44), (108, 36), (109, 41), (110, 40), (111, 39), (112, 44), (113, 34), (114, 40), (115, 41), (116, 37), (117, 41), (118, 39), (119, 46), (120, 39), (121, 40), (122, 38), (123, 39), (124, 38), (125, 38), (126, 33), (127, 40), (128, 33), (129, 13), (130, 39), (131, 43), (132, 48), (133, 39), (134, 41), (135, 45), (136, 37), (137, 41), (138, 45), (139, 39), (140, 42), (141, 42), (142, 40), (143, 43), (144, 38), (145, 41), (146, 41), (147, 42), (148, 38), (149, 41), (150, 41), (151, 41), (152, 42), (153, 37), (154, 44), (155, 41), (156, 34), (157, 45), (158, 46), (159, 42), (160, 21), (161, 43), (162, 37), (163, 38), (164, 38), (165, 41), (166, 43), (167, 41), (168, 41), (169, 34), (170, 40), (171, 35), (172, 41), (173, 40), (174, 37), (175, 40), (176, 36), (177, 44), (178, 45), (179, 37), (180, 38), (181, 45), (182, 50), (183, 41), (184, 42), (185, 40), (186, 41), (187, 36), (188, 42), (189, 46), (190, 46), (191, 46), (192, 44), (193, 36), (194, 36), (195, 34), (196, 36), (197, 40), (198, 37), (199, 38), (200, 33), (201, 44), (202, 27), (203, 10), (204, 10), (205, 42), (206, 25), (207, 40), (208, 40), (209, 38), (210, 45), (211, 38), (212, 51), (213, 38), (214, 41), (215, 41), (216, 46), (217, 40), (218, 41), (219, 42), (220, 40), (221, 46), (222, 38), (223, 42), (224, 40), (225, 31), (226, 41), (227, 46), (228, 41), (229, 34), (230, 41), (231, 31), (232, 37), (233, 44), (234, 41), (235, 43), (236, 41), (237, 52), (238, 37), (239, 33), (240, 39), (241, 40), (242, 39), (243, 41), (244, 40), (245, 43), (246, 39), (247, 39), (248, 41), (249, 41), (250, 41), (251, 45), (252, 40), (253, 41), (254, 42), (255, 40), (256, 42), (257, 41), (258, 42), (259, 41), (260, 42), (261, 42), (262, 35), (263, 49), (264, 41), (265, 45), (266, 41), (267, 47), (268, 41), (269, 43), (270, 45), (271, 41), (272, 41), (273, 36)]
nb_edges_0 = 3546 rho= 0.1 # of rows = 53 # of columns= 274 total_degree_0= 3546 RHS= 354.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 143.23636363636365 KP time = 0.010173207963816822 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00694 - (Local CPU) 0.00694 - (Global CPU) 0.01711

 Solve status: Optimal Objective value: 296.24 nb_rows 53 nb_cols 261
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (53, 261) and density : 0.7703318152244633 and number of remaining ones : 10976
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.770 > 0.77
            It took me : 0.017 time
            Found matrix of size : (53, 261) and density : 0.770
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 11552.0
Model status: Optimal
Solution saved to Experiments/data4/results_h_0_M_1.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.21876 - (Local CPU) 0.21876 - (Global CPU) 0.21876

 Solve status: Optimal Objective value: 11552.0 nb_rows 38 nb_cols 58
----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 38
Number of Remaining number Columns : 58
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 2204 Density : 1.0 current obj value 11552.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 38  and cols_res of lenght = 58
 A lower_bound = 2204 has been found by max_e_h 
 !!!!!!!!!!!!!!!!!! I got a lower bound  2204
----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 2650.0
----------------------------------------------------------------------
Model status: Optimal

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 490.54387 - (Local CPU) 490.51815 - (Global CPU) 490.73691

 Solve status: Optimal Objective value: 2650.0 nb_rows 25 nb_cols 106
----------------------------------------
*****Model in warm start is feasible. Improving the solution!!!*** 
model status = 1, LPstatus Optimal
Solution saved to Experiments/data4/results_wstart_0_M_1.csv


-- Debugging Step: checking extracted solution after solving model**** -- max_e_wr
len_rows_res= 25
row_res= [12, 18, 19, 2, 20, 21, 22, 25, 26, 28, 3, 31, 32, 4, 42, 43, 44, 48, 49, 5, 51, 6, 7, 8, 9]
len_cols_res= 106
cols_res= [10, 106, 11, 110, 112, 117, 12, 123, 124, 131, 132, 133, 136, 137, 140, 141, 142, 143, 145, 146, 147, 149, 15, 150, 151, 154, 157, 161, 165, 166, 167, 170, 172, 177, 184, 185, 186, 188, 189, 19, 190, 191, 192, 20, 207, 21, 212, 216, 217, 219, 22, 224, 226, 230, 234, 235, 236, 24, 242, 244, 245, 247, 249, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 266, 27, 270, 272, 29, 3, 32, 34, 36, 37, 38, 4, 41, 44, 45, 47, 48, 5, 51, 57, 58, 65, 75, 82, 83, 84, 88, 90, 91, 93, 97, 98]
nb row_names_res, = 25
row_names_res = ['r13', 'r19', 'r20', 'r3', 'r21', 'r22', 'r23', 'r26', 'r27', 'r29', 'r4', 'r32', 'r33', 'r5', 'r43', 'r44', 'r45', 'r49', 'r50', 'r6', 'r52', 'r7', 'r8', 'r9', 'r10']
col_names_res = ['3750', '9376', '3751', '9622', '9693', '10407', '3762', '10716', '10717', '10854', '10864', '10972', '10984', '11020', '11194', '11274', '11275', '11290', '11438', '11664', '11694', '11899', '3946', '11905', '12025', '12236', '12393', '12744', '13028', '13100', '13112', '13340', '13511', '14231', '14871', '14874', '14877', '15000', '15047', '4200', '15048', '15171', '15173', '4335', '16886', '4380', '17084', '17280', '17307', '17322', '4386', '17384', '17568', '17787', '18063', '18126', '18141', '4584', '18651', '18764', '18779', '18809', '18911', '18944', '18950', '18971', '19024', '19037', '19052', '19058', '19061', '19067', '19178', '19253', '19271', '4944', '19334', '19376', '5020', '3417', '5094', '5293', '5358', '5361', '5376', '3418', '5715', '5850', '6105', '6174', '6226', '3423', '6306', '6587', '6678', '7113', '7452', '7710', '8072', '8078', '8458', '8551', '8602', '8686', '8959', '8962']
 nb col_names_res, = 106

----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_wr  delta =   0.0
Number of Remaining  Rows  : 25
Number of Remaining number Columns : 106
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 2650 Density : 1.0
----------------------------------------

----------------------------------------

Exit from the exact  approach  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 25  and cols_res of lenght = 106 and density = 1.0
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 1
        with delta =  0.0
        Found matrix of size : (25, 106)
        and density : 1.0
        and # of ones : 2650
        and Heuristic QBC time   : 0.21876
        and Global QBC  time  : 490.73691
        
 Remaining Rows  : [(2, 106), (3, 106), (4, 106), (5, 106), (6, 106), (7, 106), (8, 106), (9, 106), (12, 106), (18, 106), (19, 106), (20, 106), (21, 106), (22, 106), (25, 106), (26, 106), (28, 106), (31, 106), (32, 106), (42, 106), (43, 106), (44, 106), (48, 106), (49, 106), (51, 106)]
 Remaining  Cols  : [(3, 25), (4, 25), (5, 25), (10, 25), (11, 25), (12, 25), (15, 25), (19, 25), (20, 25), (21, 25), (22, 25), (24, 25), (27, 25), (29, 25), (32, 25), (34, 25), (36, 25), (37, 25), (38, 25), (41, 25), (44, 25), (45, 25), (47, 25), (48, 25), (51, 25), (57, 25), (58, 25), (65, 25), (75, 25), (82, 25), (83, 25), (84, 25), (88, 25), (90, 25), (91, 25), (93, 25), (97, 25), (98, 25), (106, 25), (110, 25), (112, 25), (117, 25), (123, 25), (124, 25), (131, 25), (132, 25), (133, 25), (136, 25), (137, 25), (140, 25), (141, 25), (142, 25), (143, 25), (145, 25), (146, 25), (147, 25), (149, 25), (150, 25), (151, 25), (154, 25), (157, 25), (161, 25), (165, 25), (166, 25), (167, 25), (170, 25), (172, 25), (177, 25), (184, 25), (185, 25), (186, 25), (188, 25), (189, 25), (190, 25), (191, 25), (192, 25), (207, 25), (212, 25), (216, 25), (217, 25), (219, 25), (224, 25), (226, 25), (230, 25), (234, 25), (235, 25), (236, 25), (242, 25), (244, 25), (245, 25), (247, 25), (249, 25), (252, 25), (253, 25), (254, 25), (255, 25), (256, 25), (257, 25), (259, 25), (260, 25), (261, 25), (263, 25), (264, 25), (266, 25), (270, 25), (272, 25)]

----------------------------------------------------------------------
 
    End of computations for matrix 1 in  data/data4.csv at level 0 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (25,106), with  density : 1.0 and number of ones: 2650
    Global Time (in sec): 490.754
    Total Time in QBC approaches: 490.737
    Time in greedy approach: 0.017,  size of matrix found by greedy : (53,261) 
    With density : 0.770 and # ones : 10656 
    Time in heuristic only : 0.219 
    Time in warm start only : 490.518
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 0.00% 
    Percentage of heuristic run time in QBC run time : 0.04%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

PROCESSED TASK NUMBER 1 with (edges 11122) -> obj = 2650  with solving TIME : 491.8946 sec

Best task: 1, Best objective: 2650 with # rows 25 and # cols 106
 Number of fathomed tasks : 0

----------------------------------------------------------------------

Evaluated Queue:
----------------------------------------------------------------------
 Size of the evaluated  queue: 1
 Matrix: 1, # Rows: 55,  # Cols: 274,  # Edges: 11122, size max clique  2650, # rows: 25 # columns: 106

----------------------------------------------------------------------

----------------------------------------------------------------------
Size of the COPY_QUEUE: 1
Matrix: 1, Size: 11122, Number Rows: 55, Number Cols: 274, Number Edges: 11122

----------------------------------------------------------------------
***End of computations !!!

----------------------------------------------------------------------
----------------------------------------------------------------------
 
    End of computations for matrix  data/data4.csv with rows: 55 and columns 274
    with  input density : 0.738 and number of ones: 11122
    time limit has been set to 3600
    using  model: max_e_c  with quasi-biclique error: 0.0 
    nd density_threshold: 0.770 and zero deletion rate (rho): 0.1 and debug: 2
    Decrease and conquer levels:  0, # ext task: 1, int task : 0 
    The solution has been found in matrix : 1  with 
    size max clique  2650, # rows: 25 # columns: 106,
    # solved  tasks : 1, # skipped  tasks : 0  # fathomed tasks : 0
    
----------------------------------------------------------------------

Best task: 1, Best objective: 2650 with # rows 25 and # cols 106

----------------------------------------------------------------------
 Model building and solving global time: 492.8615 sec
 Tasks_generation time: 0.0000 sec
 Tasks_pure_solving time: 491.8947 sec

size egdes_1: 11122

row_set: {2, 3, 4, 5, 6, 7, 8, 9, 12, 18, 19, 20, 21, 22, 25, 26, 28, 31, 32, 42, 43, 44, 48, 49, 51}
col_set: {3, 4, 5, 10, 11, 12, 15, 19, 20, 21, 22, 24, 27, 29, 32, 34, 36, 37, 38, 41, 44, 45, 47, 48, 51, 57, 58, 65, 75, 82, 83, 84, 88, 90, 91, 93, 97, 98, 106, 110, 112, 117, 123, 124, 131, 132, 133, 136, 137, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 154, 157, 161, 165, 166, 167, 170, 172, 177, 184, 185, 186, 188, 189, 190, 191, 192, 207, 212, 216, 217, 219, 224, 226, 230, 234, 235, 236, 242, 244, 245, 247, 249, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 266, 270, 272}
Number of ones in the best submatrix : 2650
