----------------------------------------
 Input Data in csv files : data/data1.csv
Number Rows Data : 10
Number Cols Data : 10
Number Edges_1 : 36
Number Edges_0 : 64
----------------------------------------

----------------------------------------------------------------------
***Stats Current Input for matrix 1 in  data/data1.csv at level 2 and with model:  max_e_c***
Size of current matrix :  10 * 10 = 100 ; dec_conq: 2
number input zeros :  36 ; number input ones :  64
rho =  0.1 ; delta :  0.0
Input density : 0.640 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.640 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.64 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  4.266666666666667
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 4.266666666666667 KP time = 0.0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.02023 - (Local CPU) 0.02023 - (Global CPU) 0.02023

 Solve status: Optimal Objective value: 4.266666666666667 nb_rows 8 nb_cols 10
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (8, 10) and density : 0.7 and number of remaining ones : 56
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 8), (1, 5), (2, 4), (3, 3), (4, 6), (5, 7), (6, 4), (7, 7), (8, 7), (9, 5)]
nb_edges_0 = 24 rho= 0.1 # of rows = 8 # of columns= 10 total_degree_0= 24 RHS= 2.4000000000000004
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 4.266666666666667 KP time = 0.020232333976309747 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00555 - (Local CPU) 0.00555 - (Global CPU) 0.02578

 Solve status: Optimal Objective value: 1.44 nb_rows 8 nb_cols 9
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (8, 9) and density : 0.7361111111111112 and number of remaining ones : 56
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.736 density  and density_threshold= 0.770


I am in the while loop with i= 2 density= 0.7361111111111112 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  1.52
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 1.52 KP time = 0.02578275097766891 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00511 - (Local CPU) 0.00511 - (Global CPU) 0.03089

 Solve status: Optimal Objective value: 1.52 nb_rows 7 nb_cols 9
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (7, 9) and density : 0.7777777777777778 and number of remaining ones : 49
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 7), (1, 5), (2, 4), (4, 6), (5, 6), (6, 4), (7, 6), (8, 6), (9, 5)]
nb_edges_0 = 14 rho= 0.1 # of rows = 7 # of columns= 9 total_degree_0= 14 RHS= 1.4000000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 1.52 KP time = 0.030893416958861053 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00500 - (Local CPU) 0.00500 - (Global CPU) 0.03589

 Solve status: Optimal Objective value: 1.8666666666666665 nb_rows 7 nb_cols 8
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (7, 8) and density : 0.8035714285714286 and number of remaining ones : 49
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 2 iterations
            Density : 0.804 > 0.77
            It took me : 0.036 time
            Found matrix of size : (7, 8) and density : 0.804
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 63.0
Model status: Optimal
Solution saved to Experiments/data1/results_h_2_M_1.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.01085 - (Local CPU) 0.01085 - (Global CPU) 0.01085

 Solve status: Optimal Objective value: 63.0 nb_rows 3 nb_cols 7
----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 3
Number of Remaining number Columns : 7
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 21 Density : 1.0 current obj value 63.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 3  and cols_res of lenght = 7
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 1
        with delta =  0.0
        Found matrix of size : (3, 7)
        and density : 1.0
        and # of ones : 21
        and Heuristic QBC time   : 0.01085
        and Global QBC  time  : 0.01085
        
 Remaining Rows  : [2, 3, 8]
 Remaining  Cols  : [0, 1, 2, 4, 5, 7, 8]

----------------------------------------------------------------------
 
    End of computations for matrix 1 in  data/data1.csv at level 2 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (3,7), with  density : 1.0 and number of ones: 21
    Global Time (in sec): 0.047
    Total Time in QBC approaches: 0.011
    Time in greedy approach: 0.036,  size of matrix found by greedy : (7,8) 
    With density : 0.804 and # ones : 45 
    Time in heuristic only : 0.011 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 2
    Percentage of greedy approach run time in global run time : 76.79% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

rows = [(0, 3), (1, 5), (2, 0), (3, 1), (4, 6), (5, 5), (6, 6), (7, 6), (8, 1), (9, 3)]
cols = [(0, 0), (1, 5), (2, 6), (3, 7), (4, 4), (5, 1), (6, 6), (7, 1), (8, 1), (9, 5)]
edges_1 = [(0, 6), (0, 7), (0, 8), (1, 2), (1, 3), (1, 4), (1, 6), (1, 9), (3, 9), (4, 1), (4, 2), (4, 3), (4, 4), (4, 6), (4, 9), (5, 1), (5, 2), (5, 3), (5, 5), (5, 6), (6, 1), (6, 2), (6, 3), (6, 4), (6, 6), (6, 9), (7, 1), (7, 2), (7, 3), (7, 4), (7, 6), (7, 9), (8, 3), (9, 1), (9, 2), (9, 3)]
rows_res = [2, 3, 8]
cols_res = [0, 1, 2, 4, 5, 7, 8]
dec_conq= 2

 Level 1, Matrix 2:
Size Rows: 7
Size Cols: 10

 Level 1 Matrix  3:
Size Rows: 10
Size Cols: 3

 Level 1  Matrix 2 Rows: [(0, 3), (1, 5), (4, 6), (5, 5), (6, 6), (7, 6), (9, 3)]
Level  1  Matrix 2 Cols: [(0, 0), (1, 5), (2, 6), (3, 6), (4, 4), (5, 1), (6, 6), (7, 1), (8, 1), (9, 4)]
Level  1  Matrix 2 Edges : [(0, 6), (0, 7), (0, 8), (1, 2), (1, 3), (1, 4), (1, 6), (1, 9), (4, 1), (4, 2), (4, 3), (4, 4), (4, 6), (4, 9), (5, 1), (5, 2), (5, 3), (5, 5), (5, 6), (6, 1), (6, 2), (6, 3), (6, 4), (6, 6), (6, 9), (7, 1), (7, 2), (7, 3), (7, 4), (7, 6), (7, 9), (9, 1), (9, 2), (9, 3)]

 Level  1  Matrix 3 Rows: [(0, 1), (1, 3), (2, 0), (3, 1), (4, 3), (5, 2), (6, 3), (7, 3), (8, 1), (9, 1)]
Level 1  Matrix 3 Cols: [(3, 7), (6, 6), (9, 5)]
Level 1  Matrix 3 Edges : [(0, 6), (1, 3), (1, 6), (1, 9), (3, 9), (4, 3), (4, 6), (4, 9), (5, 3), (5, 6), (6, 3), (6, 6), (6, 9), (7, 3), (7, 6), (7, 9), (8, 3), (9, 3)]

----------------------------------------------------------------------
***Stats Current Input for matrix 2 in  data/data1.csv at level 1 and with model:  max_e_c***
Size of current matrix :  7 * 10 = 70 ; dec_conq: 1
number input zeros :  34 ; number input ones :  36
rho =  0.1 ; delta :  0.0
Input density : 0.514 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.514 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.5142857142857142 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  4.266666666666667
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 4.266666666666667 KP time = 0.035893999971449375 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00531 - (Local CPU) 0.00532 - (Global CPU) 0.04121

 Solve status: Optimal Objective value: 4.266666666666667 nb_rows 5 nb_cols 10
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (5, 10) and density : 0.56 and number of remaining ones : 28
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 5), (1, 2), (2, 1), (3, 1), (4, 3), (5, 4), (6, 1), (7, 4), (8, 4), (9, 3)]
nb_edges_0 = 22 rho= 0.1 # of rows = 5 # of columns= 10 total_degree_0= 22 RHS= 2.2
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 4.266666666666667 KP time = 0.04120954097015783 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00494 - (Local CPU) 0.00494 - (Global CPU) 0.04615

 Solve status: Optimal Objective value: 0.55 nb_rows 5 nb_cols 9
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (5, 9) and density : 0.6 and number of remaining ones : 28
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.600 density  and density_threshold= 0.770


I am in the while loop with i= 2 density= 0.6 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  1.44
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 1.44 KP time = 0.046152915921993554 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00486 - (Local CPU) 0.00486 - (Global CPU) 0.05101

 Solve status: Optimal Objective value: 1.44 nb_rows 4 nb_cols 9
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (4, 9) and density : 0.6388888888888888 and number of remaining ones : 23
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 4), (1, 2), (3, 1), (4, 3), (5, 3), (6, 1), (7, 3), (8, 3), (9, 3)]
nb_edges_0 = 13 rho= 0.1 # of rows = 4 # of columns= 9 total_degree_0= 13 RHS= 1.3
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 1.44 KP time = 0.0510134989162907 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00476 - (Local CPU) 0.00476 - (Global CPU) 0.05578

 Solve status: Optimal Objective value: 0.43333333333333335 nb_rows 4 nb_cols 8
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (4, 8) and density : 0.6875 and number of remaining ones : 23
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.688 density  and density_threshold= 0.770


I am in the while loop with i= 3 density= 0.6875 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  1.6666666666666665
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 1.6666666666666665 KP time = 0.05577766592614353 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00478 - (Local CPU) 0.00478 - (Global CPU) 0.06056

 Solve status: Optimal Objective value: 1.6666666666666665 nb_rows 3 nb_cols 8
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (3, 8) and density : 0.7083333333333334 and number of remaining ones : 17
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 3), (1, 2), (3, 1), (4, 2), (5, 3), (7, 2), (8, 2), (9, 2)]
nb_edges_0 = 7 rho= 0.1 # of rows = 3 # of columns= 8 total_degree_0= 7 RHS= 0.7000000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 1.6666666666666665 KP time = 0.060561831924133 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00474 - (Local CPU) 0.00474 - (Global CPU) 0.06530

 Solve status: Optimal Objective value: 0.35 nb_rows 3 nb_cols 7
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (3, 7) and density : 0.7619047619047619 and number of remaining ones : 17
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.762 density  and density_threshold= 0.770


I am in the while loop with i= 4 density= 0.7619047619047619 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  1.25
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 1.25 KP time = 0.065297998895403 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00463 - (Local CPU) 0.00463 - (Global CPU) 0.06993

 Solve status: Optimal Objective value: 1.25 nb_rows 2 nb_cols 7
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (2, 7) and density : 0.7857142857142857 and number of remaining ones : 11
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 2), (1, 1), (4, 1), (5, 2), (7, 2), (8, 2), (9, 1)]
nb_edges_0 = 3 rho= 0.1 # of rows = 2 # of columns= 7 total_degree_0= 3 RHS= 0.30000000000000004
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 1.25 KP time = 0.06993128987960517 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00516 - (Local CPU) 0.00516 - (Global CPU) 0.07509

 Solve status: Optimal Objective value: 0.3 nb_rows 2 nb_cols 6
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (2, 6) and density : 0.8333333333333334 and number of remaining ones : 11
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 4 iterations
            Density : 0.833 > 0.77
            It took me : 0.075 time
            Found matrix of size : (2, 6) and density : 0.833
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 18.0
Model status: Optimal
Solution saved to Experiments/data1/results_h_1_M_2.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.00581 - (Local CPU) 0.00581 - (Global CPU) 0.00581

 Solve status: Optimal Objective value: 18.0 nb_rows 2 nb_cols 4
----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 2
Number of Remaining number Columns : 4
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 8 Density : 1.0 current obj value 18.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 2  and cols_res of lenght = 4
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 2
        with delta =  0.0
        Found matrix of size : (2, 4)
        and density : 1.0
        and # of ones : 8
        and Heuristic QBC time   : 0.00581
        and Global QBC  time  : 0.00581
        
 Remaining Rows  : [1, 9]
 Remaining  Cols  : [0, 5, 7, 8]

----------------------------------------------------------------------
 
    End of computations for matrix 2 in  data/data1.csv at level 1 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (2,4), with  density : 1.0 and number of ones: 8
    Global Time (in sec): 0.081
    Total Time in QBC approaches: 0.006
    Time in greedy approach: 0.075,  size of matrix found by greedy : (2,6) 
    With density : 0.833 and # ones : 10 
    Time in heuristic only : 0.006 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 4
    Percentage of greedy approach run time in global run time : 92.81% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

rows = [(0, 3), (1, 5), (4, 6), (5, 5), (6, 6), (7, 6), (9, 3)]
cols = [(0, 0), (1, 5), (2, 6), (3, 6), (4, 4), (5, 1), (6, 6), (7, 1), (8, 1), (9, 4)]
edges_1 = [(0, 6), (0, 7), (0, 8), (1, 2), (1, 3), (1, 4), (1, 6), (1, 9), (4, 1), (4, 2), (4, 3), (4, 4), (4, 6), (4, 9), (5, 1), (5, 2), (5, 3), (5, 5), (5, 6), (6, 1), (6, 2), (6, 3), (6, 4), (6, 6), (6, 9), (7, 1), (7, 2), (7, 3), (7, 4), (7, 6), (7, 9), (9, 1), (9, 2), (9, 3)]
rows_res = [1, 9]
cols_res = [0, 5, 7, 8]
dec_conq= 1

 Level 0, Matrix 4:
Size Rows: 5
Size Cols: 10

 Level 0 Matrix  5:
Size Rows: 7
Size Cols: 6

 Level 0  Matrix 4 Rows: [(0, 3), (4, 6), (5, 5), (6, 6), (7, 6)]
Level  0  Matrix 4 Cols: [(0, 0), (1, 4), (2, 4), (3, 4), (4, 3), (5, 1), (6, 5), (7, 1), (8, 1), (9, 3)]
Level  0  Matrix 4 Edges : [(0, 6), (0, 7), (0, 8), (4, 1), (4, 2), (4, 3), (4, 4), (4, 6), (4, 9), (5, 1), (5, 2), (5, 3), (5, 5), (5, 6), (6, 1), (6, 2), (6, 3), (6, 4), (6, 6), (6, 9), (7, 1), (7, 2), (7, 3), (7, 4), (7, 6), (7, 9)]

 Level  0  Matrix 5 Rows: [(0, 1), (1, 5), (4, 6), (5, 4), (6, 6), (7, 6), (9, 3)]
Level 0  Matrix 5 Cols: [(1, 5), (2, 6), (3, 6), (4, 4), (6, 6), (9, 4)]
Level 0  Matrix 5 Edges : [(0, 6), (1, 2), (1, 3), (1, 4), (1, 6), (1, 9), (4, 1), (4, 2), (4, 3), (4, 4), (4, 6), (4, 9), (5, 1), (5, 2), (5, 3), (5, 6), (6, 1), (6, 2), (6, 3), (6, 4), (6, 6), (6, 9), (7, 1), (7, 2), (7, 3), (7, 4), (7, 6), (7, 9), (9, 1), (9, 2), (9, 3)]

Task with matrix 4 with size (5,10) and density 0.52 and number of ones 26  and number of zeros 24 has been added to the queue.

 Return from 4 with winning node = 4

calling decrease_and_conquer for node 5

Task with matrix 5 with size (7,6) and density 0.7380952380952381 and number of ones 31  and number of zeros 11 has been added to the queue.

return in decrease_and_conquer from 5 with winning node = 5

return in decrease_and_conquer from 2 with winning node = 5

 Return from 2 with winning node = 5

 Node 2 has been fathomed because of min number rows = 3 or min number columns = 3 


return in decrease_and_conquer from 1 with winning node = 5

----------------------------------------------------------------------

End of tasks generation stage. Last generated task from matrix 1 with winning node 5 and global time 0.0000000,
rows = [(0, 1), (1, 5), (4, 6), (5, 4), (6, 6), (7, 6), (9, 3)], 
cols = [(1, 5), (2, 6), (3, 6), (4, 4), (6, 6), (9, 4)], 
density = 0.7380952380952381, nb_ones = 31

----------------------------------------------------------------------

 Size of the queue: 2
 Matrix: 4, Size: 50, Number Rows: 5,  Number Cols: 10,  Number Edges: 26
 Matrix: 5, Size: 42, Number Rows: 7,  Number Cols: 6,  Number Edges: 31

----------------------------------------------------------------------

----------------------------------------------------------------------


***QUEUE Processing of task number 4 with (size 50) selected_model max_e_c dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 4 in  data/data1.csv at level 0 and with model:  max_e_c***
Size of current matrix :  5 * 10 = 50 ; dec_conq: 0
number input zeros :  24 ; number input ones :  26
rho =  0.1 ; delta :  0.0
Input density : 0.520 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.520 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.52 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  2.742857142857143
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 2.742857142857143 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00504 - (Local CPU) 0.00504 - (Global CPU) 0.00504

 Solve status: Optimal Objective value: 2.742857142857143 nb_rows 4 nb_cols 10
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (4, 7) and density : 0.8214285714285714 and number of remaining ones : 23
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(1, 4), (2, 4), (3, 4), (4, 3), (5, 1), (6, 4), (9, 3)]
nb_edges_0 = 5 rho= 0.1 # of rows = 4 # of columns= 7 total_degree_0= 5 RHS= 0.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 2.742857142857143 KP time = 0.005036667047534138 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00474 - (Local CPU) 0.00475 - (Global CPU) 0.00978

 Solve status: Optimal Objective value: 0.16666666666666666 nb_rows 4 nb_cols 6
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (4, 6) and density : 0.9166666666666666 and number of remaining ones : 23
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.917 > 0.77
            It took me : 0.010 time
            Found matrix of size : (4, 6) and density : 0.917
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 40.0
Model status: Optimal
Solution saved to Experiments/data1/results_h_0_M_4.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.00526 - (Local CPU) 0.00526 - (Global CPU) 0.00526

 Solve status: Optimal Objective value: 40.0 nb_rows 3 nb_cols 6
----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 3
Number of Remaining number Columns : 6
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 18 Density : 1.0 current obj value 40.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 3  and cols_res of lenght = 6
 !!!!!!!!!!!!!!!!!! I got a lower bound  18
----------------------------------------------------------------------
Model status: Not Solved
----------------------------------------------------------------------
Model status: Not Solved

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 0.00508 - (Local CPU) 0.00508 - (Global CPU) 0.01034

 Solve status: Not Solved Objective value: 22 nb_rows 3 nb_cols 6
----------------------------------------
*****Model in warm start is infeasible.!!!*** 
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 4
        with delta =  0.0
        Found matrix of size : (3, 6)
        and density : 1.0
        and # of ones : 18
        and Heuristic QBC time   : 0.00526
        and Global QBC  time  : 0.01034
        
 Remaining Rows  : [(4, 6), (6, 6), (7, 6)]
 Remaining  Cols  : [(1, 3), (2, 3), (3, 3), (4, 3), (6, 3), (9, 3)]

----------------------------------------------------------------------
 
    End of computations for matrix 4 in  data/data1.csv at level 0 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (3,6), with  density : 1.0 and number of ones: 18
    Global Time (in sec): 0.020
    Total Time in QBC approaches: 0.010
    Time in greedy approach: 0.010,  size of matrix found by greedy : (4,6) 
    With density : 0.917 and # ones : 22 
    Time in heuristic only : 0.005 
    Time in warm start only : 0.005
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 48.60% 
    Percentage of heuristic run time in QBC run time : 50.88%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

Processed task number 4 with  (size 50) -> obj = 18

***QUEUE Processing of task number 5 with (size 42) selected_model max_e_c dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 5 in  data/data1.csv at level 0 and with model:  max_e_c***
Size of current matrix :  7 * 6 = 42 ; dec_conq: 0
number input zeros :  11 ; number input ones :  31
rho =  0.1 ; delta :  0.0
Input density : 0.738 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.738 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.7380952380952381 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  2.4000000000000004
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 2.4000000000000004 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00491 - (Local CPU) 0.00491 - (Global CPU) 0.00491

 Solve status: Optimal Objective value: 2.4000000000000004 nb_rows 5 nb_cols 6
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (5, 6) and density : 0.9 and number of remaining ones : 27
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(1, 4), (2, 5), (3, 5), (4, 4), (6, 5), (9, 4)]
nb_edges_0 = 3 rho= 0.1 # of rows = 5 # of columns= 6 total_degree_0= 3 RHS= 0.30000000000000004
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 2.4000000000000004 KP time = 0.004912625008728355 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00477 - (Local CPU) 0.00477 - (Global CPU) 0.00968

 Solve status: Optimal Objective value: 1.2 nb_rows 5 nb_cols 5
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (5, 5) and density : 0.92 and number of remaining ones : 27
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.920 > 0.77
            It took me : 0.010 time
            Found matrix of size : (5, 5) and density : 0.920
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 43.0
Model status: Optimal
Solution saved to Experiments/data1/results_h_0_M_5.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.00515 - (Local CPU) 0.00515 - (Global CPU) 0.00515

 Solve status: Optimal Objective value: 43.0 nb_rows 4 nb_cols 5
----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 4
Number of Remaining number Columns : 5
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 20 Density : 1.0 current obj value 43.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 4  and cols_res of lenght = 5
 !!!!!!!!!!!!!!!!!! I got a lower bound  20
----------------------------------------------------------------------
Model status: Not Solved
----------------------------------------------------------------------
Model status: Not Solved

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 0.00508 - (Local CPU) 0.00508 - (Global CPU) 0.01023

 Solve status: Not Solved Objective value: 23 nb_rows 4 nb_cols 5
----------------------------------------
*****Model in warm start is infeasible.!!!*** 
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 5
        with delta =  0.0
        Found matrix of size : (4, 5)
        and density : 1.0
        and # of ones : 20
        and Heuristic QBC time   : 0.00515
        and Global QBC  time  : 0.01023
        
 Remaining Rows  : [(1, 5), (4, 5), (6, 5), (7, 5)]
 Remaining  Cols  : [(2, 4), (3, 4), (4, 4), (6, 4), (9, 4)]

----------------------------------------------------------------------
 
    End of computations for matrix 5 in  data/data1.csv at level 0 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (4,5), with  density : 1.0 and number of ones: 20
    Global Time (in sec): 0.020
    Total Time in QBC approaches: 0.010
    Time in greedy approach: 0.010,  size of matrix found by greedy : (5,5) 
    With density : 0.920 and # ones : 23 
    Time in heuristic only : 0.005 
    Time in warm start only : 0.005
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 48.64% 
    Percentage of heuristic run time in QBC run time : 50.32%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

Processed task number 5 with  (size 42) -> obj = 20

***End of computations !!!

 Model building and solving global time: 0.1529 sec
 Tasks_generation  time: 0.1085 sec
 Process tasks pure solving time: 0.0443 sec
