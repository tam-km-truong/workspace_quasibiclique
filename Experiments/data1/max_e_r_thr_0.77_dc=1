----------------------------------------
 Input Data in csv files : data/data1.csv
Number Rows Data : 10
Number Cols Data : 10
Number Edges_1 : 36
Number Edges_0 : 64
----------------------------------------

----------------------------------------------------------------------
***Stats Current Input for matrix 1 in  data/data1.csv at level 1 and with model:  max_e_r***
Size of current matrix :  10 * 10 = 100 ; dec_conq: 1
number input zeros :  36 ; number input ones :  64
rho =  0.1 ; delta :  0.0
Input density : 0.640 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.640 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.64 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  4.266666666666667
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 4.266666666666667 KP time = 0.0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00798 - (Local CPU) 0.00798 - (Global CPU) 0.00798

 Solve status: Optimal Objective value: 4.266666666666667 nb_rows 8 nb_cols 10
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (8, 10) and density : 0.7 and number of remaining ones : 56
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 8), (1, 5), (2, 4), (3, 3), (4, 6), (5, 7), (6, 4), (7, 7), (8, 7), (9, 5)]
nb_edges_0 = 24 rho= 0.1 # of rows = 8 # of columns= 10 total_degree_0= 24 RHS= 2.4000000000000004
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 4.266666666666667 KP time = 0.00798241700977087 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00557 - (Local CPU) 0.00557 - (Global CPU) 0.01356

 Solve status: Optimal Objective value: 1.44 nb_rows 8 nb_cols 9
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (8, 9) and density : 0.7361111111111112 and number of remaining ones : 56
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.736 density  and density_threshold= 0.770


I am in the while loop with i= 2 density= 0.7361111111111112 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  1.52
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 1.52 KP time = 0.013555374986026436 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00543 - (Local CPU) 0.00543 - (Global CPU) 0.01899

 Solve status: Optimal Objective value: 1.52 nb_rows 7 nb_cols 9
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (7, 9) and density : 0.7777777777777778 and number of remaining ones : 49
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 7), (1, 5), (2, 4), (4, 6), (5, 6), (6, 4), (7, 6), (8, 6), (9, 5)]
nb_edges_0 = 14 rho= 0.1 # of rows = 7 # of columns= 9 total_degree_0= 14 RHS= 1.4000000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 1.52 KP time = 0.01898712496040389 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00506 - (Local CPU) 0.00506 - (Global CPU) 0.02404

 Solve status: Optimal Objective value: 1.8666666666666665 nb_rows 7 nb_cols 8
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (7, 8) and density : 0.8035714285714286 and number of remaining ones : 49
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 2 iterations
            Density : 0.804 > 0.77
            It took me : 0.024 time
            Found matrix of size : (7, 8) and density : 0.804
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 21.0
Model status: Optimal
Solution saved to Experiments/data1/results_1_M_1.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_r  Local Time:  - (real) 0.01163 - (Local CPU) 0.01163 - (Global CPU) 0.01163

 Solve status: Optimal Objective value: 21.0 nb_rows 3 nb_cols 7
----------------------------------------

----------------------------------------
Results from update_data after solving model = max_e_r  with delta =   0.0 and dec_conq=  1
Number of Remaining  Rows  : 3
Number of Remaining Columns : 7
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 21 Density : 1.0 current obj value 21.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 3  and cols_res of lenght = 7
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 1
        with delta =  0.0
        Found matrix of size : (3, 7)
        and density : 1.0
        and # of ones : 21
        and Heuristic QBC time   : 0.00000
        and Global QBC  time  : 0.01163
        
 Remaining Rows  : [(2, 7), (3, 7), (8, 7)]
 Remaining  Cols  : [(0, 3), (1, 3), (2, 3), (4, 3), (5, 3), (7, 3), (8, 3)]

----------------------------------------------------------------------
 
    End of computations for matrix 1 in  data/data1.csv at level 1 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (3,7), with  density : 1.0 and number of ones: 21
    Global Time (in sec): 0.036
    Total Time in QBC approaches: 0.012
    Time in greedy approach: 0.024,  size of matrix found by greedy : (7,8) 
    With density : 0.804 and # ones : 45 
    Time in heuristic only : 0.000 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 2
    Percentage of greedy approach run time in global run time : 67.40% 
    Percentage of heuristic run time in QBC run time : 0.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

rows = [(0, 3), (1, 5), (2, 0), (3, 1), (4, 6), (5, 5), (6, 6), (7, 6), (8, 1), (9, 3)]
cols = [(0, 0), (1, 5), (2, 6), (3, 7), (4, 4), (5, 1), (6, 6), (7, 1), (8, 1), (9, 5)]
edges_1 = [(0, 6), (0, 7), (0, 8), (1, 2), (1, 3), (1, 4), (1, 6), (1, 9), (3, 9), (4, 1), (4, 2), (4, 3), (4, 4), (4, 6), (4, 9), (5, 1), (5, 2), (5, 3), (5, 5), (5, 6), (6, 1), (6, 2), (6, 3), (6, 4), (6, 6), (6, 9), (7, 1), (7, 2), (7, 3), (7, 4), (7, 6), (7, 9), (8, 3), (9, 1), (9, 2), (9, 3)]
rows_res = [(2, 7), (3, 7), (8, 7)]
cols_res = [(0, 3), (1, 3), (2, 3), (4, 3), (5, 3), (7, 3), (8, 3)]
dec_conq= 1

 Level 0, Matrix 2:
Size Rows: 7
Size Cols: 10

 Level 0 Matrix  3:
Size Rows: 10
Size Cols: 3

 Level 0  Matrix 2 Rows: [(0, 3), (1, 5), (4, 6), (5, 5), (6, 6), (7, 6), (9, 3)]
Level  0  Matrix 2 Cols: [(0, 0), (1, 5), (2, 6), (3, 6), (4, 4), (5, 1), (6, 6), (7, 1), (8, 1), (9, 4)]
Level  0  Matrix 2 Edges : [(0, 6), (0, 7), (0, 8), (1, 2), (1, 3), (1, 4), (1, 6), (1, 9), (4, 1), (4, 2), (4, 3), (4, 4), (4, 6), (4, 9), (5, 1), (5, 2), (5, 3), (5, 5), (5, 6), (6, 1), (6, 2), (6, 3), (6, 4), (6, 6), (6, 9), (7, 1), (7, 2), (7, 3), (7, 4), (7, 6), (7, 9), (9, 1), (9, 2), (9, 3)]

 Level  0  Matrix 3 Rows: [(0, 1), (1, 3), (2, 0), (3, 1), (4, 3), (5, 2), (6, 3), (7, 3), (8, 1), (9, 1)]
Level 0  Matrix 3 Cols: [(3, 7), (6, 6), (9, 5)]
Level 0  Matrix 3 Edges : [(0, 6), (1, 3), (1, 6), (1, 9), (3, 9), (4, 3), (4, 6), (4, 9), (5, 3), (5, 6), (6, 3), (6, 6), (6, 9), (7, 3), (7, 6), (7, 9), (8, 3), (9, 3)]

Task with matrix 2 with size (7,10) and density 0.4857142857142857 and number of ones 34  and number of zeros 36 has been added to the queue.

 Return from 2 with winning node = 2

 Node 2 has been fathomed because of min number rows = 3 or min number columns = 3 


return in decrease_and_conquer from 1 with winning node = 2

----------------------------------------------------------------------

End of tasks generation stage. Last generated task from matrix 1 with winning node 2 and global time 0.0000000,
rows = [(0, 3), (1, 5), (4, 6), (5, 5), (6, 6), (7, 6), (9, 3)], 
cols = [(0, 0), (1, 5), (2, 6), (3, 6), (4, 4), (5, 1), (6, 6), (7, 1), (8, 1), (9, 4)], 
density = 0.4857142857142857, nb_ones = 34

----------------------------------------------------------------------

 Size of the queue: 1
 Matrix: 2, Size: 70, Number Rows: 7,  Number Cols: 10,  Number Edges: 34

----------------------------------------------------------------------

----------------------------------------------------------------------


***QUEUE Processing of task number 2 with (size 70) selected_model max_e_r dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 2 in  data/data1.csv at level 0 and with model:  max_e_r***
Size of current matrix :  7 * 10 = 70 ; dec_conq: 0
number input zeros :  36 ; number input ones :  34
rho =  0.1 ; delta :  0.0
Input density : 0.486 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.486 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.4857142857142857 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  2.742857142857143
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 2.742857142857143 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00518 - (Local CPU) 0.00518 - (Global CPU) 0.00518

 Solve status: Optimal Objective value: 2.742857142857143 nb_rows 6 nb_cols 10
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (6, 7) and density : 0.7380952380952381 and number of remaining ones : 31
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(1, 5), (2, 6), (3, 6), (4, 4), (5, 1), (6, 5), (9, 4)]
nb_edges_0 = 11 rho= 0.1 # of rows = 6 # of columns= 7 total_degree_0= 11 RHS= 1.1
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 2.742857142857143 KP time = 0.00517804198898375 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00500 - (Local CPU) 0.00500 - (Global CPU) 0.01017

 Solve status: Optimal Objective value: 0.22000000000000003 nb_rows 6 nb_cols 6
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (6, 6) and density : 0.8333333333333334 and number of remaining ones : 31
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.833 > 0.77
            It took me : 0.010 time
            Found matrix of size : (6, 6) and density : 0.833
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 20.0
Model status: Optimal
Solution saved to Experiments/data1/results_0_M_2.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_r  Local Time:  - (real) 0.00559 - (Local CPU) 0.00558 - (Global CPU) 0.00558

 Solve status: Optimal Objective value: 20.0 nb_rows 4 nb_cols 5
----------------------------------------

----------------------------------------
Results from update_data after solving model = max_e_r  with delta =   0.0 and dec_conq=  0
Number of Remaining  Rows  : 4
Number of Remaining Columns : 5
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 20 Density : 1.0 current obj value 20.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 4  and cols_res of lenght = 5
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 2
        with delta =  0.0
        Found matrix of size : (4, 5)
        and density : 1.0
        and # of ones : 20
        and Heuristic QBC time   : 0.00000
        and Global QBC  time  : 0.00558
        
 Remaining Rows  : [(1, 5), (4, 5), (6, 5), (7, 5)]
 Remaining  Cols  : [(2, 4), (3, 4), (4, 4), (6, 4), (9, 4)]

----------------------------------------------------------------------
 
    End of computations for matrix 2 in  data/data1.csv at level 0 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (4,5), with  density : 1.0 and number of ones: 20
    Global Time (in sec): 0.016
    Total Time in QBC approaches: 0.006
    Time in greedy approach: 0.010,  size of matrix found by greedy : (6,6) 
    With density : 0.833 and # ones : 30 
    Time in heuristic only : 0.000 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 64.56% 
    Percentage of heuristic run time in QBC run time : 0.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

Processed task number 2 with  (size 70) -> obj = 20

***End of computations !!!

 Model building and solving global time: 0.0666 sec
 Tasks_generation  time: 0.0487 sec
 Process tasks pure solving time: 0.0179 sec
