----------------------------------------
 Input Data in txt files : data/data0.txt
Number Rows Data : 3
Number Cols Data : 3
Number Edges_1 : 6
Number Edges_0 : 3
----------------------------------------

Task with matrix 1 with size (3,3) and density 0.6666666666666666 and number of ones 6  and number of zeros 3 has been added to the queue.

----------------------------------------------------------------------

End of tasks generation stage. Last generated task from matrix 1 with winning node 1 and global time 0.0000000

----------------------------------------------------------------------
 Size of the queue: 1
 Matrix: 1, Size: 6, Number Rows: 3,  Number Cols: 3,  Number Edges: 6, obj None

----------------------------------------------------------------------


***QUEUE Processing of task number 1 with (edges 6) selected_model max_e_r dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 1 in  data/data0.txt at level 0 and with model:  max_e_r***
Size of current matrix :  3 * 3 = 9 ; dec_conq: 0
number input zeros :  3 ; number input ones :  6
rho =  0.1 ; delta :  0.0
Input density : 0.667 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.667 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.6666666666666666 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  0.6
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 0.6 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01340 - (Local CPU) 0.01340 - (Global CPU) 0.01340

 Solve status: Optimal Objective value: 0.6 nb_rows 2 nb_cols 3
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (2, 3) and density : 0.6666666666666666 and number of remaining ones : 4
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 1), (1, 2), (2, 1)]
nb_edges_0 = 2 rho= 0.1 # of rows = 2 # of columns= 3 total_degree_0= 2 RHS= 0.2
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 0.6 KP time = 0.01340304099721834 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00570 - (Local CPU) 0.00570 - (Global CPU) 0.01910

 Solve status: Optimal Objective value: 0.2 nb_rows 2 nb_cols 2
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (2, 2) and density : 0.75 and number of remaining ones : 4
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.750 > 0.77
            It took me : 0.019 time
            Found matrix of size : (2, 2) and density : 0.750
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 2.0
Model status: Optimal
Solution saved to Experiments/data0/results_0_M_1.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_r  Local Time:  - (real) 0.00567 - (Local CPU) 0.00567 - (Global CPU) 0.00567

 Solve status: Optimal Objective value: 2.0 nb_rows 1 nb_cols 2
----------------------------------------

----------------------------------------
Results from update_data after solving model = max_e_r  with delta =   0.0 and dec_conq=  0
Number of Remaining  Rows  : 1
Number of Remaining Columns : 2
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 2 Density : 1.0 current obj value 2.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 1  and cols_res of lenght = 2
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 1
        with delta =  0.0
        Found matrix of size : (1, 2)
        and density : 1.0
        and # of ones : 2
        and Heuristic QBC time   : 0.00000
        and Global QBC  time  : 0.00567
        
 Remaining Rows  : [(2, 2)]
 Remaining  Cols  : [(1, 1), (2, 1)]

----------------------------------------------------------------------
 
    End of computations for matrix 1 in  data/data0.txt at level 0 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (1,2), with  density : 1.0 and number of ones: 2
    Global Time (in sec): 0.025
    Total Time in QBC approaches: 0.006
    Time in greedy approach: 0.019,  size of matrix found by greedy : (2,2) 
    With density : 0.750 and # ones : 3 
    Time in heuristic only : 0.000 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 77.12% 
    Percentage of heuristic run time in QBC run time : 0.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

PROCESSED TASK NUMBER 1 with (edges 6) -> obj = 2

Best task: 1, Best objective: 2 with # rows 1 and # cols 2
 Number of fathomed tasks : 0

----------------------------------------------------------------------

Evaluated Queue:
----------------------------------------------------------------------
 Size of the evaluated  queue: 1
 Matrix: 1, # Rows: 3,  # Cols: 3,  # Edges: 6, size max clique  2, # rows: 1 # columns: 2

----------------------------------------------------------------------

----------------------------------------------------------------------
Size of the COPY_QUEUE: 1
Matrix: 1, Size: 6, Number Rows: 3, Number Cols: 3, Number Edges: 6

----------------------------------------------------------------------
***End of computations !!!

----------------------------------------------------------------------
----------------------------------------------------------------------
 
    End of computations for matrix  data/data0.txt with rows: 3 and columns 3
    with  input density : 0.667 and number of ones: 6
    using  model: max_e_r  with quasi-biclique error: 0.0 and density_threshold: 0.770 
    and zero deletion rate (rho): 0.1 and debug: 2
    Decrease and conquer levels:  0, # ext task: 1, int task : 0 
    The solution has been found in matrix : 1  with 
    size max clique  2, # rows: 1 # columns: 2,
    # solved  tasks : 1, # skipped  tasks : 0  # fathomed tasks : 0
    
----------------------------------------------------------------------

Best task: 1, Best objective: 2 with # rows 1 and # cols 2

----------------------------------------------------------------------
 Model building and solving global time: 0.0281 sec
 Tasks_generation time: 0.0000 sec
 Tasks_pure_solving time: 0.0274 sec

egdes_1: [(0, 0), (0, 1), (1, 0), (1, 1), (2, 1), (2, 2)]
row_set: {2}
col_set: {1, 2}
Number of ones in submatrix B: 1
