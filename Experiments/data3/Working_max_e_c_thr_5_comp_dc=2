----------------------------------------
 Input Data in csv files : data/data3.csv
Number Rows Data : 50
Number Cols Data : 50
Number Edges_1 : 892
Number Edges_0 : 1608
 Rows Data : [(0, 0), (1, 4), (2, 2), (3, 37), (4, 3), (5, 4), (6, 31), (7, 1), (8, 2), (9, 5), (10, 31), (11, 4), (12, 32), (13, 4), (14, 33), (15, 0), (16, 32), (17, 34), (18, 35), (19, 33), (20, 4), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (26, 1), (27, 33), (28, 3), (29, 33), (30, 36), (31, 4), (32, 33), (33, 2), (34, 32), (35, 32), (36, 3), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (43, 2), (44, 31), (45, 1), (46, 2), (47, 32), (48, 3), (49, 2)]
 Cols Data : [(0, 0), (1, 5), (2, 0), (3, 26), (4, 25), (5, 2), (6, 28), (7, 26), (8, 26), (9, 2), (10, 25), (11, 27), (12, 23), (13, 25), (14, 26), (15, 26), (16, 3), (17, 25), (18, 28), (19, 27), (20, 25), (21, 27), (22, 28), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 5), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (37, 0), (38, 3), (39, 26), (40, 3), (41, 24), (42, 3), (43, 26), (44, 5), (45, 5), (46, 25), (47, 27), (48, 23), (49, 26)]
  row_names : Index(['r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 'r10', 'r11',
       'r12', 'r13', 'r14', 'r15', 'r16', 'r17', 'r18', 'r19', 'r20', 'r21',
       'r22', 'r23', 'r24', 'r25', 'r26', 'r27', 'r28', 'r29', 'r30', 'r31',
       'r32', 'r33', 'r34', 'r35', 'r36', 'r37', 'r38', 'r39', 'r40', 'r41',
       'r42', 'r43', 'r44', 'r45', 'r46', 'r47', 'r48', 'r49', 'r50'],
      dtype='object')
  col_names : Index(['c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'c10', 'c11',
       'c12', 'c13', 'c14', 'c15', 'c16', 'c17', 'c18', 'c19', 'c20', 'c21',
       'c22', 'c23', 'c24', 'c25', 'c26', 'c27', 'c28', 'c29', 'c30', 'c31',
       'c32', 'c33', 'c34', 'c35', 'c36', 'c37', 'c38', 'c39', 'c40', 'c41',
       'c42', 'c43', 'c44', 'c45', 'c46', 'c47', 'c48', 'c49', 'c50'],
      dtype='object')
 Edges_1 : [(1, 6), (1, 14), (1, 17), (1, 44), (2, 22), (2, 47), (3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 42), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (4, 9), (4, 18), (4, 40), (5, 34), (5, 36), (5, 44), (5, 45), (6, 3), (6, 4), (6, 6), (6, 7), (6, 8), (6, 10), (6, 11), (6, 12), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (6, 22), (6, 24), (6, 25), (6, 26), (6, 30), (6, 32), (6, 33), (6, 35), (6, 36), (6, 39), (6, 41), (6, 43), (6, 46), (6, 47), (6, 48), (6, 49), (7, 19), (8, 29), (8, 40), (9, 8), (9, 18), (9, 23), (9, 25), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 10), (10, 11), (10, 12), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 20), (10, 21), (10, 22), (10, 24), (10, 25), (10, 26), (10, 30), (10, 31), (10, 32), (10, 33), (10, 35), (10, 36), (10, 39), (10, 41), (10, 43), (10, 46), (10, 47), (10, 49), (11, 6), (11, 18), (11, 39), (11, 47), (12, 3), (12, 4), (12, 6), (12, 7), (12, 8), (12, 10), (12, 11), (12, 12), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 20), (12, 21), (12, 22), (12, 24), (12, 25), (12, 29), (12, 30), (12, 31), (12, 33), (12, 35), (12, 36), (12, 39), (12, 41), (12, 43), (12, 46), (12, 47), (12, 48), (12, 49), (13, 15), (13, 43), (13, 44), (13, 45), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 24), (14, 25), (14, 26), (14, 30), (14, 31), (14, 32), (14, 33), (14, 35), (14, 36), (14, 39), (14, 41), (14, 43), (14, 46), (14, 47), (14, 48), (14, 49), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 20), (16, 21), (16, 22), (16, 24), (16, 26), (16, 30), (16, 31), (16, 32), (16, 33), (16, 35), (16, 36), (16, 39), (16, 41), (16, 43), (16, 46), (16, 47), (16, 48), (16, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 27), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 42), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 1), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 16), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (19, 1), (19, 3), (19, 4), (19, 6), (19, 7), (19, 10), (19, 11), (19, 12), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 20), (19, 21), (19, 22), (19, 24), (19, 25), (19, 26), (19, 29), (19, 30), (19, 31), (19, 32), (19, 33), (19, 35), (19, 36), (19, 39), (19, 41), (19, 43), (19, 46), (19, 47), (19, 48), (19, 49), (20, 13), (20, 22), (20, 28), (20, 39), (21, 4), (21, 7), (21, 18), (21, 49), (22, 3), (22, 4), (22, 6), (22, 7), (22, 8), (22, 10), (22, 11), (22, 12), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 20), (22, 22), (22, 24), (22, 25), (22, 30), (22, 31), (22, 32), (22, 33), (22, 35), (22, 36), (22, 39), (22, 41), (22, 43), (22, 46), (22, 47), (22, 48), (22, 49), (23, 1), (23, 5), (23, 19), (23, 32), (24, 3), (24, 4), (24, 6), (24, 7), (24, 8), (24, 10), (24, 11), (24, 12), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 24), (24, 25), (24, 26), (24, 28), (24, 30), (24, 31), (24, 32), (24, 33), (24, 35), (24, 36), (24, 39), (24, 41), (24, 43), (24, 45), (24, 46), (24, 47), (24, 48), (24, 49), (25, 1), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (26, 44), (27, 3), (27, 4), (27, 6), (27, 7), (27, 8), (27, 10), (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 20), (27, 21), (27, 22), (27, 24), (27, 25), (27, 26), (27, 28), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 39), (27, 43), (27, 46), (27, 47), (27, 49), (28, 6), (28, 25), (28, 45), (29, 3), (29, 4), (29, 6), (29, 7), (29, 8), (29, 10), (29, 11), (29, 12), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 20), (29, 21), (29, 22), (29, 24), (29, 25), (29, 26), (29, 30), (29, 31), (29, 32), (29, 33), (29, 35), (29, 36), (29, 39), (29, 41), (29, 43), (29, 46), (29, 47), (29, 48), (29, 49), (30, 1), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (31, 12), (31, 20), (31, 29), (31, 36), (32, 3), (32, 4), (32, 6), (32, 7), (32, 8), (32, 10), (32, 11), (32, 12), (32, 13), (32, 14), (32, 15), (32, 16), (32, 17), (32, 18), (32, 19), (32, 20), (32, 21), (32, 22), (32, 24), (32, 25), (32, 28), (32, 30), (32, 31), (32, 32), (32, 35), (32, 36), (32, 39), (32, 41), (32, 43), (32, 46), (32, 47), (32, 48), (32, 49), (33, 6), (33, 28), (34, 3), (34, 4), (34, 6), (34, 7), (34, 8), (34, 10), (34, 11), (34, 12), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 20), (34, 21), (34, 22), (34, 24), (34, 25), (34, 26), (34, 30), (34, 31), (34, 32), (34, 33), (34, 35), (34, 39), (34, 41), (34, 43), (34, 46), (34, 47), (34, 48), (34, 49), (35, 3), (35, 4), (35, 6), (35, 7), (35, 8), (35, 10), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 20), (35, 21), (35, 22), (35, 24), (35, 25), (35, 26), (35, 30), (35, 31), (35, 32), (35, 33), (35, 35), (35, 36), (35, 39), (35, 41), (35, 43), (35, 46), (35, 47), (35, 48), (35, 49), (36, 3), (36, 21), (36, 22), (37, 3), (37, 4), (37, 6), (37, 7), (37, 8), (37, 10), (37, 11), (37, 12), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 20), (37, 21), (37, 22), (37, 24), (37, 25), (37, 26), (37, 30), (37, 32), (37, 33), (37, 35), (37, 36), (37, 39), (37, 40), (37, 41), (37, 43), (37, 46), (37, 47), (37, 48), (37, 49), (38, 7), (38, 15), (38, 29), (38, 34), (38, 38), (39, 3), (39, 4), (39, 6), (39, 8), (39, 10), (39, 11), (39, 12), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 20), (39, 21), (39, 22), (39, 24), (39, 25), (39, 26), (39, 30), (39, 31), (39, 32), (39, 33), (39, 35), (39, 36), (39, 38), (39, 39), (39, 41), (39, 43), (39, 46), (39, 47), (39, 48), (39, 49), (40, 3), (40, 4), (40, 6), (40, 7), (40, 8), (40, 9), (40, 10), (40, 11), (40, 12), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 20), (40, 21), (40, 22), (40, 23), (40, 25), (40, 26), (40, 30), (40, 31), (40, 32), (40, 33), (40, 35), (40, 36), (40, 39), (40, 41), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 3), (41, 4), (41, 6), (41, 7), (41, 8), (41, 10), (41, 11), (41, 12), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 20), (41, 21), (41, 22), (41, 24), (41, 25), (41, 26), (41, 30), (41, 31), (41, 32), (41, 33), (41, 35), (41, 36), (41, 39), (41, 41), (41, 43), (41, 46), (41, 47), (41, 48), (41, 49), (42, 3), (42, 4), (42, 5), (42, 6), (42, 7), (42, 8), (42, 10), (42, 11), (42, 12), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 20), (42, 21), (42, 22), (42, 24), (42, 25), (42, 26), (42, 30), (42, 31), (42, 32), (42, 33), (42, 35), (42, 36), (42, 41), (42, 43), (42, 46), (42, 47), (42, 48), (42, 49), (43, 11), (43, 27), (44, 3), (44, 4), (44, 6), (44, 7), (44, 8), (44, 10), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 20), (44, 21), (44, 22), (44, 24), (44, 25), (44, 26), (44, 30), (44, 31), (44, 33), (44, 35), (44, 36), (44, 39), (44, 41), (44, 43), (44, 46), (44, 47), (44, 48), (44, 49), (45, 21), (46, 16), (46, 21), (47, 3), (47, 4), (47, 7), (47, 8), (47, 10), (47, 11), (47, 12), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 20), (47, 21), (47, 22), (47, 24), (47, 25), (47, 26), (47, 30), (47, 31), (47, 32), (47, 33), (47, 35), (47, 36), (47, 39), (47, 41), (47, 43), (47, 46), (47, 47), (47, 48), (47, 49), (48, 11), (48, 19), (48, 38), (49, 8), (49, 42)]
 Edges_0 : [(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19), (0, 20), (0, 21), (0, 22), (0, 23), (0, 24), (0, 25), (0, 26), (0, 27), (0, 28), (0, 29), (0, 30), (0, 31), (0, 32), (0, 33), (0, 34), (0, 35), (0, 36), (0, 37), (0, 38), (0, 39), (0, 40), (0, 41), (0, 42), (0, 43), (0, 44), (0, 45), (0, 46), (0, 47), (0, 48), (0, 49), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 12), (1, 13), (1, 15), (1, 16), (1, 18), (1, 19), (1, 20), (1, 21), (1, 22), (1, 23), (1, 24), (1, 25), (1, 26), (1, 27), (1, 28), (1, 29), (1, 30), (1, 31), (1, 32), (1, 33), (1, 34), (1, 35), (1, 36), (1, 37), (1, 38), (1, 39), (1, 40), (1, 41), (1, 42), (1, 43), (1, 45), (1, 46), (1, 47), (1, 48), (1, 49), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10), (2, 11), (2, 12), (2, 13), (2, 14), (2, 15), (2, 16), (2, 17), (2, 18), (2, 19), (2, 20), (2, 21), (2, 23), (2, 24), (2, 25), (2, 26), (2, 27), (2, 28), (2, 29), (2, 30), (2, 31), (2, 32), (2, 33), (2, 34), (2, 35), (2, 36), (2, 37), (2, 38), (2, 39), (2, 40), (2, 41), (2, 42), (2, 43), (2, 44), (2, 45), (2, 46), (2, 48), (2, 49), (3, 0), (3, 1), (3, 2), (3, 5), (3, 9), (3, 16), (3, 27), (3, 28), (3, 29), (3, 37), (3, 38), (3, 40), (3, 44), (4, 0), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8), (4, 10), (4, 11), (4, 12), (4, 13), (4, 14), (4, 15), (4, 16), (4, 17), (4, 19), (4, 20), (4, 21), (4, 22), (4, 23), (4, 24), (4, 25), (4, 26), (4, 27), (4, 28), (4, 29), (4, 30), (4, 31), (4, 32), (4, 33), (4, 34), (4, 35), (4, 36), (4, 37), (4, 38), (4, 39), (4, 41), (4, 42), (4, 43), (4, 44), (4, 45), (4, 46), (4, 47), (4, 48), (4, 49), (5, 0), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7), (5, 8), (5, 9), (5, 10), (5, 11), (5, 12), (5, 13), (5, 14), (5, 15), (5, 16), (5, 17), (5, 18), (5, 19), (5, 20), (5, 21), (5, 22), (5, 23), (5, 24), (5, 25), (5, 26), (5, 27), (5, 28), (5, 29), (5, 30), (5, 31), (5, 32), (5, 33), (5, 35), (5, 37), (5, 38), (5, 39), (5, 40), (5, 41), (5, 42), (5, 43), (5, 46), (5, 47), (5, 48), (5, 49), (6, 0), (6, 1), (6, 2), (6, 5), (6, 9), (6, 13), (6, 16), (6, 23), (6, 27), (6, 28), (6, 29), (6, 31), (6, 34), (6, 37), (6, 38), (6, 40), (6, 42), (6, 44), (6, 45), (7, 0), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7), (7, 8), (7, 9), (7, 10), (7, 11), (7, 12), (7, 13), (7, 14), (7, 15), (7, 16), (7, 17), (7, 18), (7, 20), (7, 21), (7, 22), (7, 23), (7, 24), (7, 25), (7, 26), (7, 27), (7, 28), (7, 29), (7, 30), (7, 31), (7, 32), (7, 33), (7, 34), (7, 35), (7, 36), (7, 37), (7, 38), (7, 39), (7, 40), (7, 41), (7, 42), (7, 43), (7, 44), (7, 45), (7, 46), (7, 47), (7, 48), (7, 49), (8, 0), (8, 1), (8, 2), (8, 3), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9), (8, 10), (8, 11), (8, 12), (8, 13), (8, 14), (8, 15), (8, 16), (8, 17), (8, 18), (8, 19), (8, 20), (8, 21), (8, 22), (8, 23), (8, 24), (8, 25), (8, 26), (8, 27), (8, 28), (8, 30), (8, 31), (8, 32), (8, 33), (8, 34), (8, 35), (8, 36), (8, 37), (8, 38), (8, 39), (8, 41), (8, 42), (8, 43), (8, 44), (8, 45), (8, 46), (8, 47), (8, 48), (8, 49), (9, 0), (9, 1), (9, 2), (9, 3), (9, 4), (9, 5), (9, 6), (9, 7), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14), (9, 15), (9, 16), (9, 17), (9, 19), (9, 20), (9, 21), (9, 22), (9, 24), (9, 26), (9, 27), (9, 28), (9, 29), (9, 30), (9, 31), (9, 32), (9, 33), (9, 34), (9, 36), (9, 37), (9, 38), (9, 39), (9, 40), (9, 41), (9, 42), (9, 43), (9, 44), (9, 45), (9, 46), (9, 47), (9, 48), (9, 49), (10, 0), (10, 1), (10, 2), (10, 4), (10, 5), (10, 9), (10, 16), (10, 23), (10, 27), (10, 28), (10, 29), (10, 34), (10, 37), (10, 38), (10, 40), (10, 42), (10, 44), (10, 45), (10, 48), (11, 0), (11, 1), (11, 2), (11, 3), (11, 4), (11, 5), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16), (11, 17), (11, 19), (11, 20), (11, 21), (11, 22), (11, 23), (11, 24), (11, 25), (11, 26), (11, 27), (11, 28), (11, 29), (11, 30), (11, 31), (11, 32), (11, 33), (11, 34), (11, 35), (11, 36), (11, 37), (11, 38), (11, 40), (11, 41), (11, 42), (11, 43), (11, 44), (11, 45), (11, 46), (11, 48), (11, 49), (12, 0), (12, 1), (12, 2), (12, 5), (12, 9), (12, 16), (12, 23), (12, 26), (12, 27), (12, 28), (12, 32), (12, 34), (12, 37), (12, 38), (12, 40), (12, 42), (12, 44), (12, 45), (13, 0), (13, 1), (13, 2), (13, 3), (13, 4), (13, 5), (13, 6), (13, 7), (13, 8), (13, 9), (13, 10), (13, 11), (13, 12), (13, 13), (13, 14), (13, 16), (13, 17), (13, 18), (13, 19), (13, 20), (13, 21), (13, 22), (13, 23), (13, 24), (13, 25), (13, 26), (13, 27), (13, 28), (13, 29), (13, 30), (13, 31), (13, 32), (13, 33), (13, 34), (13, 35), (13, 36), (13, 37), (13, 38), (13, 39), (13, 40), (13, 41), (13, 42), (13, 46), (13, 47), (13, 48), (13, 49), (14, 0), (14, 1), (14, 2), (14, 5), (14, 9), (14, 16), (14, 23), (14, 27), (14, 28), (14, 29), (14, 34), (14, 37), (14, 38), (14, 40), (14, 42), (14, 44), (14, 45), (15, 0), (15, 1), (15, 2), (15, 3), (15, 4), (15, 5), (15, 6), (15, 7), (15, 8), (15, 9), (15, 10), (15, 11), (15, 12), (15, 13), (15, 14), (15, 15), (15, 16), (15, 17), (15, 18), (15, 19), (15, 20), (15, 21), (15, 22), (15, 23), (15, 24), (15, 25), (15, 26), (15, 27), (15, 28), (15, 29), (15, 30), (15, 31), (15, 32), (15, 33), (15, 34), (15, 35), (15, 36), (15, 37), (15, 38), (15, 39), (15, 40), (15, 41), (15, 42), (15, 43), (15, 44), (15, 45), (15, 46), (15, 47), (15, 48), (15, 49), (16, 0), (16, 1), (16, 2), (16, 5), (16, 9), (16, 16), (16, 23), (16, 25), (16, 27), (16, 28), (16, 29), (16, 34), (16, 37), (16, 38), (16, 40), (16, 42), (16, 44), (16, 45), (17, 0), (17, 1), (17, 2), (17, 5), (17, 9), (17, 12), (17, 16), (17, 23), (17, 28), (17, 29), (17, 34), (17, 37), (17, 38), (17, 40), (17, 44), (17, 45), (18, 0), (18, 2), (18, 5), (18, 9), (18, 23), (18, 27), (18, 28), (18, 29), (18, 34), (18, 37), (18, 38), (18, 40), (18, 42), (18, 44), (18, 45), (19, 0), (19, 2), (19, 5), (19, 8), (19, 9), (19, 16), (19, 18), (19, 23), (19, 27), (19, 28), (19, 34), (19, 37), (19, 38), (19, 40), (19, 42), (19, 44), (19, 45), (20, 0), (20, 1), (20, 2), (20, 3), (20, 4), (20, 5), (20, 6), (20, 7), (20, 8), (20, 9), (20, 10), (20, 11), (20, 12), (20, 14), (20, 15), (20, 16), (20, 17), (20, 18), (20, 19), (20, 20), (20, 21), (20, 23), (20, 24), (20, 25), (20, 26), (20, 27), (20, 29), (20, 30), (20, 31), (20, 32), (20, 33), (20, 34), (20, 35), (20, 36), (20, 37), (20, 38), (20, 40), (20, 41), (20, 42), (20, 43), (20, 44), (20, 45), (20, 46), (20, 47), (20, 48), (20, 49), (21, 0), (21, 1), (21, 2), (21, 3), (21, 5), (21, 6), (21, 8), (21, 9), (21, 10), (21, 11), (21, 12), (21, 13), (21, 14), (21, 15), (21, 16), (21, 17), (21, 19), (21, 20), (21, 21), (21, 22), (21, 23), (21, 24), (21, 25), (21, 26), (21, 27), (21, 28), (21, 29), (21, 30), (21, 31), (21, 32), (21, 33), (21, 34), (21, 35), (21, 36), (21, 37), (21, 38), (21, 39), (21, 40), (21, 41), (21, 42), (21, 43), (21, 44), (21, 45), (21, 46), (21, 47), (21, 48), (22, 0), (22, 1), (22, 2), (22, 5), (22, 9), (22, 16), (22, 21), (22, 23), (22, 26), (22, 27), (22, 28), (22, 29), (22, 34), (22, 37), (22, 38), (22, 40), (22, 42), (22, 44), (22, 45), (23, 0), (23, 2), (23, 3), (23, 4), (23, 6), (23, 7), (23, 8), (23, 9), (23, 10), (23, 11), (23, 12), (23, 13), (23, 14), (23, 15), (23, 16), (23, 17), (23, 18), (23, 20), (23, 21), (23, 22), (23, 23), (23, 24), (23, 25), (23, 26), (23, 27), (23, 28), (23, 29), (23, 30), (23, 31), (23, 33), (23, 34), (23, 35), (23, 36), (23, 37), (23, 38), (23, 39), (23, 40), (23, 41), (23, 42), (23, 43), (23, 44), (23, 45), (23, 46), (23, 47), (23, 48), (23, 49), (24, 0), (24, 1), (24, 2), (24, 5), (24, 9), (24, 16), (24, 17), (24, 19), (24, 20), (24, 23), (24, 27), (24, 29), (24, 34), (24, 37), (24, 38), (24, 40), (24, 42), (24, 44), (25, 0), (25, 2), (25, 5), (25, 9), (25, 16), (25, 23), (25, 27), (25, 28), (25, 29), (25, 34), (25, 37), (25, 38), (25, 40), (25, 42), (25, 44), (25, 45), (26, 0), (26, 1), (26, 2), (26, 3), (26, 4), (26, 5), (26, 6), (26, 7), (26, 8), (26, 9), (26, 10), (26, 11), (26, 12), (26, 13), (26, 14), (26, 15), (26, 16), (26, 17), (26, 18), (26, 19), (26, 20), (26, 21), (26, 22), (26, 23), (26, 24), (26, 25), (26, 26), (26, 27), (26, 28), (26, 29), (26, 30), (26, 31), (26, 32), (26, 33), (26, 34), (26, 35), (26, 36), (26, 37), (26, 38), (26, 39), (26, 40), (26, 41), (26, 42), (26, 43), (26, 45), (26, 46), (26, 47), (26, 48), (26, 49), (27, 0), (27, 1), (27, 2), (27, 5), (27, 9), (27, 16), (27, 23), (27, 27), (27, 29), (27, 37), (27, 38), (27, 40), (27, 41), (27, 42), (27, 44), (27, 45), (27, 48), (28, 0), (28, 1), (28, 2), (28, 3), (28, 4), (28, 5), (28, 7), (28, 8), (28, 9), (28, 10), (28, 11), (28, 12), (28, 13), (28, 14), (28, 15), (28, 16), (28, 17), (28, 18), (28, 19), (28, 20), (28, 21), (28, 22), (28, 23), (28, 24), (28, 26), (28, 27), (28, 28), (28, 29), (28, 30), (28, 31), (28, 32), (28, 33), (28, 34), (28, 35), (28, 36), (28, 37), (28, 38), (28, 39), (28, 40), (28, 41), (28, 42), (28, 43), (28, 44), (28, 46), (28, 47), (28, 48), (28, 49), (29, 0), (29, 1), (29, 2), (29, 5), (29, 9), (29, 16), (29, 23), (29, 27), (29, 28), (29, 29), (29, 34), (29, 37), (29, 38), (29, 40), (29, 42), (29, 44), (29, 45), (30, 0), (30, 2), (30, 5), (30, 9), (30, 16), (30, 27), (30, 28), (30, 34), (30, 37), (30, 38), (30, 40), (30, 42), (30, 44), (30, 45), (31, 0), (31, 1), (31, 2), (31, 3), (31, 4), (31, 5), (31, 6), (31, 7), (31, 8), (31, 9), (31, 10), (31, 11), (31, 13), (31, 14), (31, 15), (31, 16), (31, 17), (31, 18), (31, 19), (31, 21), (31, 22), (31, 23), (31, 24), (31, 25), (31, 26), (31, 27), (31, 28), (31, 30), (31, 31), (31, 32), (31, 33), (31, 34), (31, 35), (31, 37), (31, 38), (31, 39), (31, 40), (31, 41), (31, 42), (31, 43), (31, 44), (31, 45), (31, 46), (31, 47), (31, 48), (31, 49), (32, 0), (32, 1), (32, 2), (32, 5), (32, 9), (32, 23), (32, 26), (32, 27), (32, 29), (32, 33), (32, 34), (32, 37), (32, 38), (32, 40), (32, 42), (32, 44), (32, 45), (33, 0), (33, 1), (33, 2), (33, 3), (33, 4), (33, 5), (33, 7), (33, 8), (33, 9), (33, 10), (33, 11), (33, 12), (33, 13), (33, 14), (33, 15), (33, 16), (33, 17), (33, 18), (33, 19), (33, 20), (33, 21), (33, 22), (33, 23), (33, 24), (33, 25), (33, 26), (33, 27), (33, 29), (33, 30), (33, 31), (33, 32), (33, 33), (33, 34), (33, 35), (33, 36), (33, 37), (33, 38), (33, 39), (33, 40), (33, 41), (33, 42), (33, 43), (33, 44), (33, 45), (33, 46), (33, 47), (33, 48), (33, 49), (34, 0), (34, 1), (34, 2), (34, 5), (34, 9), (34, 16), (34, 23), (34, 27), (34, 28), (34, 29), (34, 34), (34, 36), (34, 37), (34, 38), (34, 40), (34, 42), (34, 44), (34, 45), (35, 0), (35, 1), (35, 2), (35, 5), (35, 9), (35, 12), (35, 16), (35, 23), (35, 27), (35, 28), (35, 29), (35, 34), (35, 37), (35, 38), (35, 40), (35, 42), (35, 44), (35, 45), (36, 0), (36, 1), (36, 2), (36, 4), (36, 5), (36, 6), (36, 7), (36, 8), (36, 9), (36, 10), (36, 11), (36, 12), (36, 13), (36, 14), (36, 15), (36, 16), (36, 17), (36, 18), (36, 19), (36, 20), (36, 23), (36, 24), (36, 25), (36, 26), (36, 27), (36, 28), (36, 29), (36, 30), (36, 31), (36, 32), (36, 33), (36, 34), (36, 35), (36, 36), (36, 37), (36, 38), (36, 39), (36, 40), (36, 41), (36, 42), (36, 43), (36, 44), (36, 45), (36, 46), (36, 47), (36, 48), (36, 49), (37, 0), (37, 1), (37, 2), (37, 5), (37, 9), (37, 16), (37, 23), (37, 27), (37, 28), (37, 29), (37, 31), (37, 34), (37, 37), (37, 38), (37, 42), (37, 44), (37, 45), (38, 0), (38, 1), (38, 2), (38, 3), (38, 4), (38, 5), (38, 6), (38, 8), (38, 9), (38, 10), (38, 11), (38, 12), (38, 13), (38, 14), (38, 16), (38, 17), (38, 18), (38, 19), (38, 20), (38, 21), (38, 22), (38, 23), (38, 24), (38, 25), (38, 26), (38, 27), (38, 28), (38, 30), (38, 31), (38, 32), (38, 33), (38, 35), (38, 36), (38, 37), (38, 39), (38, 40), (38, 41), (38, 42), (38, 43), (38, 44), (38, 45), (38, 46), (38, 47), (38, 48), (38, 49), (39, 0), (39, 1), (39, 2), (39, 5), (39, 7), (39, 9), (39, 16), (39, 23), (39, 27), (39, 28), (39, 29), (39, 34), (39, 37), (39, 40), (39, 42), (39, 44), (39, 45), (40, 0), (40, 1), (40, 2), (40, 5), (40, 15), (40, 16), (40, 24), (40, 27), (40, 28), (40, 29), (40, 34), (40, 37), (40, 38), (40, 40), (40, 42), (40, 45), (41, 0), (41, 1), (41, 2), (41, 5), (41, 9), (41, 16), (41, 23), (41, 27), (41, 28), (41, 29), (41, 34), (41, 37), (41, 38), (41, 40), (41, 42), (41, 44), (41, 45), (42, 0), (42, 1), (42, 2), (42, 9), (42, 16), (42, 23), (42, 27), (42, 28), (42, 29), (42, 34), (42, 37), (42, 38), (42, 39), (42, 40), (42, 42), (42, 44), (42, 45), (43, 0), (43, 1), (43, 2), (43, 3), (43, 4), (43, 5), (43, 6), (43, 7), (43, 8), (43, 9), (43, 10), (43, 12), (43, 13), (43, 14), (43, 15), (43, 16), (43, 17), (43, 18), (43, 19), (43, 20), (43, 21), (43, 22), (43, 23), (43, 24), (43, 25), (43, 26), (43, 28), (43, 29), (43, 30), (43, 31), (43, 32), (43, 33), (43, 34), (43, 35), (43, 36), (43, 37), (43, 38), (43, 39), (43, 40), (43, 41), (43, 42), (43, 43), (43, 44), (43, 45), (43, 46), (43, 47), (43, 48), (43, 49), (44, 0), (44, 1), (44, 2), (44, 5), (44, 9), (44, 12), (44, 16), (44, 23), (44, 27), (44, 28), (44, 29), (44, 32), (44, 34), (44, 37), (44, 38), (44, 40), (44, 42), (44, 44), (44, 45), (45, 0), (45, 1), (45, 2), (45, 3), (45, 4), (45, 5), (45, 6), (45, 7), (45, 8), (45, 9), (45, 10), (45, 11), (45, 12), (45, 13), (45, 14), (45, 15), (45, 16), (45, 17), (45, 18), (45, 19), (45, 20), (45, 22), (45, 23), (45, 24), (45, 25), (45, 26), (45, 27), (45, 28), (45, 29), (45, 30), (45, 31), (45, 32), (45, 33), (45, 34), (45, 35), (45, 36), (45, 37), (45, 38), (45, 39), (45, 40), (45, 41), (45, 42), (45, 43), (45, 44), (45, 45), (45, 46), (45, 47), (45, 48), (45, 49), (46, 0), (46, 1), (46, 2), (46, 3), (46, 4), (46, 5), (46, 6), (46, 7), (46, 8), (46, 9), (46, 10), (46, 11), (46, 12), (46, 13), (46, 14), (46, 15), (46, 17), (46, 18), (46, 19), (46, 20), (46, 22), (46, 23), (46, 24), (46, 25), (46, 26), (46, 27), (46, 28), (46, 29), (46, 30), (46, 31), (46, 32), (46, 33), (46, 34), (46, 35), (46, 36), (46, 37), (46, 38), (46, 39), (46, 40), (46, 41), (46, 42), (46, 43), (46, 44), (46, 45), (46, 46), (46, 47), (46, 48), (46, 49), (47, 0), (47, 1), (47, 2), (47, 5), (47, 6), (47, 9), (47, 16), (47, 23), (47, 27), (47, 28), (47, 29), (47, 34), (47, 37), (47, 38), (47, 40), (47, 42), (47, 44), (47, 45), (48, 0), (48, 1), (48, 2), (48, 3), (48, 4), (48, 5), (48, 6), (48, 7), (48, 8), (48, 9), (48, 10), (48, 12), (48, 13), (48, 14), (48, 15), (48, 16), (48, 17), (48, 18), (48, 20), (48, 21), (48, 22), (48, 23), (48, 24), (48, 25), (48, 26), (48, 27), (48, 28), (48, 29), (48, 30), (48, 31), (48, 32), (48, 33), (48, 34), (48, 35), (48, 36), (48, 37), (48, 39), (48, 40), (48, 41), (48, 42), (48, 43), (48, 44), (48, 45), (48, 46), (48, 47), (48, 48), (48, 49), (49, 0), (49, 1), (49, 2), (49, 3), (49, 4), (49, 5), (49, 6), (49, 7), (49, 9), (49, 10), (49, 11), (49, 12), (49, 13), (49, 14), (49, 15), (49, 16), (49, 17), (49, 18), (49, 19), (49, 20), (49, 21), (49, 22), (49, 23), (49, 24), (49, 25), (49, 26), (49, 27), (49, 28), (49, 29), (49, 30), (49, 31), (49, 32), (49, 33), (49, 34), (49, 35), (49, 36), (49, 37), (49, 38), (49, 39), (49, 40), (49, 41), (49, 43), (49, 44), (49, 45), (49, 46), (49, 47), (49, 48), (49, 49)]
----------------------------------------

----------------------------------------------------------------------
***Stats Current Input for matrix 1 in  data/data3.csv at level 2 and with model:  max_e_c***
Size of current matrix :  50 * 50 = 2500 ; dec_conq: 2
number input zeros :  892 ; number input ones :  1608
rho =  0.1 ; delta :  0.0
Input density : 0.643 ; density_threshold: 0.57000
End Current  Stats
----------------------------------------------------------------------

----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

 Start exact approaches with :
rows_in = [(0, 50), (1, 46), (2, 48), (3, 13), (4, 47), (5, 46), (6, 19), (7, 49), (8, 48), (9, 45), (10, 19), (11, 46), (12, 18), (13, 46), (14, 17), (15, 50), (16, 18), (17, 16), (18, 15), (19, 17), (20, 46), (21, 46), (22, 19), (23, 46), (24, 18), (25, 16), (26, 49), (27, 17), (28, 47), (29, 17), (30, 14), (31, 46), (32, 17), (33, 48), (34, 18), (35, 18), (36, 47), (37, 17), (38, 45), (39, 17), (40, 16), (41, 17), (42, 17), (43, 48), (44, 19), (45, 49), (46, 48), (47, 18), (48, 47), (49, 48)]
cols_in = [(0, 50), (1, 45), (2, 50), (3, 24), (4, 25), (5, 48), (6, 22), (7, 24), (8, 24), (9, 48), (10, 25), (11, 23), (12, 27), (13, 25), (14, 24), (15, 24), (16, 47), (17, 25), (18, 22), (19, 23), (20, 25), (21, 23), (22, 22), (23, 46), (24, 26), (25, 24), (26, 28), (27, 48), (28, 45), (29, 44), (30, 25), (31, 27), (32, 26), (33, 26), (34, 46), (35, 24), (36, 24), (37, 50), (38, 47), (39, 24), (40, 47), (41, 26), (42, 47), (43, 24), (44, 45), (45, 45), (46, 25), (47, 23), (48, 27), (49, 24)]
row_names_in = Index(['r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 'r10', 'r11',
       'r12', 'r13', 'r14', 'r15', 'r16', 'r17', 'r18', 'r19', 'r20', 'r21',
       'r22', 'r23', 'r24', 'r25', 'r26', 'r27', 'r28', 'r29', 'r30', 'r31',
       'r32', 'r33', 'r34', 'r35', 'r36', 'r37', 'r38', 'r39', 'r40', 'r41',
       'r42', 'r43', 'r44', 'r45', 'r46', 'r47', 'r48', 'r49', 'r50'],
      dtype='object')
col_names_in = Index(['c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'c10', 'c11',
       'c12', 'c13', 'c14', 'c15', 'c16', 'c17', 'c18', 'c19', 'c20', 'c21',
       'c22', 'c23', 'c24', 'c25', 'c26', 'c27', 'c28', 'c29', 'c30', 'c31',
       'c32', 'c33', 'c34', 'c35', 'c36', 'c37', 'c38', 'c39', 'c40', 'c41',
       'c42', 'c43', 'c44', 'c45', 'c46', 'c47', 'c48', 'c49', 'c50'],
      dtype='object')
edges_1_in = [(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (0, 10), (0, 11), (0, 12), (0, 13), (0, 14), (0, 15), (0, 16), (0, 17), (0, 18), (0, 19), (0, 20), (0, 21), (0, 22), (0, 23), (0, 24), (0, 25), (0, 26), (0, 27), (0, 28), (0, 29), (0, 30), (0, 31), (0, 32), (0, 33), (0, 34), (0, 35), (0, 36), (0, 37), (0, 38), (0, 39), (0, 40), (0, 41), (0, 42), (0, 43), (0, 44), (0, 45), (0, 46), (0, 47), (0, 48), (0, 49), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 12), (1, 13), (1, 15), (1, 16), (1, 18), (1, 19), (1, 20), (1, 21), (1, 22), (1, 23), (1, 24), (1, 25), (1, 26), (1, 27), (1, 28), (1, 29), (1, 30), (1, 31), (1, 32), (1, 33), (1, 34), (1, 35), (1, 36), (1, 37), (1, 38), (1, 39), (1, 40), (1, 41), (1, 42), (1, 43), (1, 45), (1, 46), (1, 47), (1, 48), (1, 49), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (2, 10), (2, 11), (2, 12), (2, 13), (2, 14), (2, 15), (2, 16), (2, 17), (2, 18), (2, 19), (2, 20), (2, 21), (2, 23), (2, 24), (2, 25), (2, 26), (2, 27), (2, 28), (2, 29), (2, 30), (2, 31), (2, 32), (2, 33), (2, 34), (2, 35), (2, 36), (2, 37), (2, 38), (2, 39), (2, 40), (2, 41), (2, 42), (2, 43), (2, 44), (2, 45), (2, 46), (2, 48), (2, 49), (3, 0), (3, 1), (3, 2), (3, 5), (3, 9), (3, 16), (3, 27), (3, 28), (3, 29), (3, 37), (3, 38), (3, 40), (3, 44), (4, 0), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8), (4, 10), (4, 11), (4, 12), (4, 13), (4, 14), (4, 15), (4, 16), (4, 17), (4, 19), (4, 20), (4, 21), (4, 22), (4, 23), (4, 24), (4, 25), (4, 26), (4, 27), (4, 28), (4, 29), (4, 30), (4, 31), (4, 32), (4, 33), (4, 34), (4, 35), (4, 36), (4, 37), (4, 38), (4, 39), (4, 41), (4, 42), (4, 43), (4, 44), (4, 45), (4, 46), (4, 47), (4, 48), (4, 49), (5, 0), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7), (5, 8), (5, 9), (5, 10), (5, 11), (5, 12), (5, 13), (5, 14), (5, 15), (5, 16), (5, 17), (5, 18), (5, 19), (5, 20), (5, 21), (5, 22), (5, 23), (5, 24), (5, 25), (5, 26), (5, 27), (5, 28), (5, 29), (5, 30), (5, 31), (5, 32), (5, 33), (5, 35), (5, 37), (5, 38), (5, 39), (5, 40), (5, 41), (5, 42), (5, 43), (5, 46), (5, 47), (5, 48), (5, 49), (6, 0), (6, 1), (6, 2), (6, 5), (6, 9), (6, 13), (6, 16), (6, 23), (6, 27), (6, 28), (6, 29), (6, 31), (6, 34), (6, 37), (6, 38), (6, 40), (6, 42), (6, 44), (6, 45), (7, 0), (7, 1), (7, 2), (7, 3), (7, 4), (7, 5), (7, 6), (7, 7), (7, 8), (7, 9), (7, 10), (7, 11), (7, 12), (7, 13), (7, 14), (7, 15), (7, 16), (7, 17), (7, 18), (7, 20), (7, 21), (7, 22), (7, 23), (7, 24), (7, 25), (7, 26), (7, 27), (7, 28), (7, 29), (7, 30), (7, 31), (7, 32), (7, 33), (7, 34), (7, 35), (7, 36), (7, 37), (7, 38), (7, 39), (7, 40), (7, 41), (7, 42), (7, 43), (7, 44), (7, 45), (7, 46), (7, 47), (7, 48), (7, 49), (8, 0), (8, 1), (8, 2), (8, 3), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9), (8, 10), (8, 11), (8, 12), (8, 13), (8, 14), (8, 15), (8, 16), (8, 17), (8, 18), (8, 19), (8, 20), (8, 21), (8, 22), (8, 23), (8, 24), (8, 25), (8, 26), (8, 27), (8, 28), (8, 30), (8, 31), (8, 32), (8, 33), (8, 34), (8, 35), (8, 36), (8, 37), (8, 38), (8, 39), (8, 41), (8, 42), (8, 43), (8, 44), (8, 45), (8, 46), (8, 47), (8, 48), (8, 49), (9, 0), (9, 1), (9, 2), (9, 3), (9, 4), (9, 5), (9, 6), (9, 7), (9, 9), (9, 10), (9, 11), (9, 12), (9, 13), (9, 14), (9, 15), (9, 16), (9, 17), (9, 19), (9, 20), (9, 21), (9, 22), (9, 24), (9, 26), (9, 27), (9, 28), (9, 29), (9, 30), (9, 31), (9, 32), (9, 33), (9, 34), (9, 36), (9, 37), (9, 38), (9, 39), (9, 40), (9, 41), (9, 42), (9, 43), (9, 44), (9, 45), (9, 46), (9, 47), (9, 48), (9, 49), (10, 0), (10, 1), (10, 2), (10, 4), (10, 5), (10, 9), (10, 16), (10, 23), (10, 27), (10, 28), (10, 29), (10, 34), (10, 37), (10, 38), (10, 40), (10, 42), (10, 44), (10, 45), (10, 48), (11, 0), (11, 1), (11, 2), (11, 3), (11, 4), (11, 5), (11, 7), (11, 8), (11, 9), (11, 10), (11, 11), (11, 12), (11, 13), (11, 14), (11, 15), (11, 16), (11, 17), (11, 19), (11, 20), (11, 21), (11, 22), (11, 23), (11, 24), (11, 25), (11, 26), (11, 27), (11, 28), (11, 29), (11, 30), (11, 31), (11, 32), (11, 33), (11, 34), (11, 35), (11, 36), (11, 37), (11, 38), (11, 40), (11, 41), (11, 42), (11, 43), (11, 44), (11, 45), (11, 46), (11, 48), (11, 49), (12, 0), (12, 1), (12, 2), (12, 5), (12, 9), (12, 16), (12, 23), (12, 26), (12, 27), (12, 28), (12, 32), (12, 34), (12, 37), (12, 38), (12, 40), (12, 42), (12, 44), (12, 45), (13, 0), (13, 1), (13, 2), (13, 3), (13, 4), (13, 5), (13, 6), (13, 7), (13, 8), (13, 9), (13, 10), (13, 11), (13, 12), (13, 13), (13, 14), (13, 16), (13, 17), (13, 18), (13, 19), (13, 20), (13, 21), (13, 22), (13, 23), (13, 24), (13, 25), (13, 26), (13, 27), (13, 28), (13, 29), (13, 30), (13, 31), (13, 32), (13, 33), (13, 34), (13, 35), (13, 36), (13, 37), (13, 38), (13, 39), (13, 40), (13, 41), (13, 42), (13, 46), (13, 47), (13, 48), (13, 49), (14, 0), (14, 1), (14, 2), (14, 5), (14, 9), (14, 16), (14, 23), (14, 27), (14, 28), (14, 29), (14, 34), (14, 37), (14, 38), (14, 40), (14, 42), (14, 44), (14, 45), (15, 0), (15, 1), (15, 2), (15, 3), (15, 4), (15, 5), (15, 6), (15, 7), (15, 8), (15, 9), (15, 10), (15, 11), (15, 12), (15, 13), (15, 14), (15, 15), (15, 16), (15, 17), (15, 18), (15, 19), (15, 20), (15, 21), (15, 22), (15, 23), (15, 24), (15, 25), (15, 26), (15, 27), (15, 28), (15, 29), (15, 30), (15, 31), (15, 32), (15, 33), (15, 34), (15, 35), (15, 36), (15, 37), (15, 38), (15, 39), (15, 40), (15, 41), (15, 42), (15, 43), (15, 44), (15, 45), (15, 46), (15, 47), (15, 48), (15, 49), (16, 0), (16, 1), (16, 2), (16, 5), (16, 9), (16, 16), (16, 23), (16, 25), (16, 27), (16, 28), (16, 29), (16, 34), (16, 37), (16, 38), (16, 40), (16, 42), (16, 44), (16, 45), (17, 0), (17, 1), (17, 2), (17, 5), (17, 9), (17, 12), (17, 16), (17, 23), (17, 28), (17, 29), (17, 34), (17, 37), (17, 38), (17, 40), (17, 44), (17, 45), (18, 0), (18, 2), (18, 5), (18, 9), (18, 23), (18, 27), (18, 28), (18, 29), (18, 34), (18, 37), (18, 38), (18, 40), (18, 42), (18, 44), (18, 45), (19, 0), (19, 2), (19, 5), (19, 8), (19, 9), (19, 16), (19, 18), (19, 23), (19, 27), (19, 28), (19, 34), (19, 37), (19, 38), (19, 40), (19, 42), (19, 44), (19, 45), (20, 0), (20, 1), (20, 2), (20, 3), (20, 4), (20, 5), (20, 6), (20, 7), (20, 8), (20, 9), (20, 10), (20, 11), (20, 12), (20, 14), (20, 15), (20, 16), (20, 17), (20, 18), (20, 19), (20, 20), (20, 21), (20, 23), (20, 24), (20, 25), (20, 26), (20, 27), (20, 29), (20, 30), (20, 31), (20, 32), (20, 33), (20, 34), (20, 35), (20, 36), (20, 37), (20, 38), (20, 40), (20, 41), (20, 42), (20, 43), (20, 44), (20, 45), (20, 46), (20, 47), (20, 48), (20, 49), (21, 0), (21, 1), (21, 2), (21, 3), (21, 5), (21, 6), (21, 8), (21, 9), (21, 10), (21, 11), (21, 12), (21, 13), (21, 14), (21, 15), (21, 16), (21, 17), (21, 19), (21, 20), (21, 21), (21, 22), (21, 23), (21, 24), (21, 25), (21, 26), (21, 27), (21, 28), (21, 29), (21, 30), (21, 31), (21, 32), (21, 33), (21, 34), (21, 35), (21, 36), (21, 37), (21, 38), (21, 39), (21, 40), (21, 41), (21, 42), (21, 43), (21, 44), (21, 45), (21, 46), (21, 47), (21, 48), (22, 0), (22, 1), (22, 2), (22, 5), (22, 9), (22, 16), (22, 21), (22, 23), (22, 26), (22, 27), (22, 28), (22, 29), (22, 34), (22, 37), (22, 38), (22, 40), (22, 42), (22, 44), (22, 45), (23, 0), (23, 2), (23, 3), (23, 4), (23, 6), (23, 7), (23, 8), (23, 9), (23, 10), (23, 11), (23, 12), (23, 13), (23, 14), (23, 15), (23, 16), (23, 17), (23, 18), (23, 20), (23, 21), (23, 22), (23, 23), (23, 24), (23, 25), (23, 26), (23, 27), (23, 28), (23, 29), (23, 30), (23, 31), (23, 33), (23, 34), (23, 35), (23, 36), (23, 37), (23, 38), (23, 39), (23, 40), (23, 41), (23, 42), (23, 43), (23, 44), (23, 45), (23, 46), (23, 47), (23, 48), (23, 49), (24, 0), (24, 1), (24, 2), (24, 5), (24, 9), (24, 16), (24, 17), (24, 19), (24, 20), (24, 23), (24, 27), (24, 29), (24, 34), (24, 37), (24, 38), (24, 40), (24, 42), (24, 44), (25, 0), (25, 2), (25, 5), (25, 9), (25, 16), (25, 23), (25, 27), (25, 28), (25, 29), (25, 34), (25, 37), (25, 38), (25, 40), (25, 42), (25, 44), (25, 45), (26, 0), (26, 1), (26, 2), (26, 3), (26, 4), (26, 5), (26, 6), (26, 7), (26, 8), (26, 9), (26, 10), (26, 11), (26, 12), (26, 13), (26, 14), (26, 15), (26, 16), (26, 17), (26, 18), (26, 19), (26, 20), (26, 21), (26, 22), (26, 23), (26, 24), (26, 25), (26, 26), (26, 27), (26, 28), (26, 29), (26, 30), (26, 31), (26, 32), (26, 33), (26, 34), (26, 35), (26, 36), (26, 37), (26, 38), (26, 39), (26, 40), (26, 41), (26, 42), (26, 43), (26, 45), (26, 46), (26, 47), (26, 48), (26, 49), (27, 0), (27, 1), (27, 2), (27, 5), (27, 9), (27, 16), (27, 23), (27, 27), (27, 29), (27, 37), (27, 38), (27, 40), (27, 41), (27, 42), (27, 44), (27, 45), (27, 48), (28, 0), (28, 1), (28, 2), (28, 3), (28, 4), (28, 5), (28, 7), (28, 8), (28, 9), (28, 10), (28, 11), (28, 12), (28, 13), (28, 14), (28, 15), (28, 16), (28, 17), (28, 18), (28, 19), (28, 20), (28, 21), (28, 22), (28, 23), (28, 24), (28, 26), (28, 27), (28, 28), (28, 29), (28, 30), (28, 31), (28, 32), (28, 33), (28, 34), (28, 35), (28, 36), (28, 37), (28, 38), (28, 39), (28, 40), (28, 41), (28, 42), (28, 43), (28, 44), (28, 46), (28, 47), (28, 48), (28, 49), (29, 0), (29, 1), (29, 2), (29, 5), (29, 9), (29, 16), (29, 23), (29, 27), (29, 28), (29, 29), (29, 34), (29, 37), (29, 38), (29, 40), (29, 42), (29, 44), (29, 45), (30, 0), (30, 2), (30, 5), (30, 9), (30, 16), (30, 27), (30, 28), (30, 34), (30, 37), (30, 38), (30, 40), (30, 42), (30, 44), (30, 45), (31, 0), (31, 1), (31, 2), (31, 3), (31, 4), (31, 5), (31, 6), (31, 7), (31, 8), (31, 9), (31, 10), (31, 11), (31, 13), (31, 14), (31, 15), (31, 16), (31, 17), (31, 18), (31, 19), (31, 21), (31, 22), (31, 23), (31, 24), (31, 25), (31, 26), (31, 27), (31, 28), (31, 30), (31, 31), (31, 32), (31, 33), (31, 34), (31, 35), (31, 37), (31, 38), (31, 39), (31, 40), (31, 41), (31, 42), (31, 43), (31, 44), (31, 45), (31, 46), (31, 47), (31, 48), (31, 49), (32, 0), (32, 1), (32, 2), (32, 5), (32, 9), (32, 23), (32, 26), (32, 27), (32, 29), (32, 33), (32, 34), (32, 37), (32, 38), (32, 40), (32, 42), (32, 44), (32, 45), (33, 0), (33, 1), (33, 2), (33, 3), (33, 4), (33, 5), (33, 7), (33, 8), (33, 9), (33, 10), (33, 11), (33, 12), (33, 13), (33, 14), (33, 15), (33, 16), (33, 17), (33, 18), (33, 19), (33, 20), (33, 21), (33, 22), (33, 23), (33, 24), (33, 25), (33, 26), (33, 27), (33, 29), (33, 30), (33, 31), (33, 32), (33, 33), (33, 34), (33, 35), (33, 36), (33, 37), (33, 38), (33, 39), (33, 40), (33, 41), (33, 42), (33, 43), (33, 44), (33, 45), (33, 46), (33, 47), (33, 48), (33, 49), (34, 0), (34, 1), (34, 2), (34, 5), (34, 9), (34, 16), (34, 23), (34, 27), (34, 28), (34, 29), (34, 34), (34, 36), (34, 37), (34, 38), (34, 40), (34, 42), (34, 44), (34, 45), (35, 0), (35, 1), (35, 2), (35, 5), (35, 9), (35, 12), (35, 16), (35, 23), (35, 27), (35, 28), (35, 29), (35, 34), (35, 37), (35, 38), (35, 40), (35, 42), (35, 44), (35, 45), (36, 0), (36, 1), (36, 2), (36, 4), (36, 5), (36, 6), (36, 7), (36, 8), (36, 9), (36, 10), (36, 11), (36, 12), (36, 13), (36, 14), (36, 15), (36, 16), (36, 17), (36, 18), (36, 19), (36, 20), (36, 23), (36, 24), (36, 25), (36, 26), (36, 27), (36, 28), (36, 29), (36, 30), (36, 31), (36, 32), (36, 33), (36, 34), (36, 35), (36, 36), (36, 37), (36, 38), (36, 39), (36, 40), (36, 41), (36, 42), (36, 43), (36, 44), (36, 45), (36, 46), (36, 47), (36, 48), (36, 49), (37, 0), (37, 1), (37, 2), (37, 5), (37, 9), (37, 16), (37, 23), (37, 27), (37, 28), (37, 29), (37, 31), (37, 34), (37, 37), (37, 38), (37, 42), (37, 44), (37, 45), (38, 0), (38, 1), (38, 2), (38, 3), (38, 4), (38, 5), (38, 6), (38, 8), (38, 9), (38, 10), (38, 11), (38, 12), (38, 13), (38, 14), (38, 16), (38, 17), (38, 18), (38, 19), (38, 20), (38, 21), (38, 22), (38, 23), (38, 24), (38, 25), (38, 26), (38, 27), (38, 28), (38, 30), (38, 31), (38, 32), (38, 33), (38, 35), (38, 36), (38, 37), (38, 39), (38, 40), (38, 41), (38, 42), (38, 43), (38, 44), (38, 45), (38, 46), (38, 47), (38, 48), (38, 49), (39, 0), (39, 1), (39, 2), (39, 5), (39, 7), (39, 9), (39, 16), (39, 23), (39, 27), (39, 28), (39, 29), (39, 34), (39, 37), (39, 40), (39, 42), (39, 44), (39, 45), (40, 0), (40, 1), (40, 2), (40, 5), (40, 15), (40, 16), (40, 24), (40, 27), (40, 28), (40, 29), (40, 34), (40, 37), (40, 38), (40, 40), (40, 42), (40, 45), (41, 0), (41, 1), (41, 2), (41, 5), (41, 9), (41, 16), (41, 23), (41, 27), (41, 28), (41, 29), (41, 34), (41, 37), (41, 38), (41, 40), (41, 42), (41, 44), (41, 45), (42, 0), (42, 1), (42, 2), (42, 9), (42, 16), (42, 23), (42, 27), (42, 28), (42, 29), (42, 34), (42, 37), (42, 38), (42, 39), (42, 40), (42, 42), (42, 44), (42, 45), (43, 0), (43, 1), (43, 2), (43, 3), (43, 4), (43, 5), (43, 6), (43, 7), (43, 8), (43, 9), (43, 10), (43, 12), (43, 13), (43, 14), (43, 15), (43, 16), (43, 17), (43, 18), (43, 19), (43, 20), (43, 21), (43, 22), (43, 23), (43, 24), (43, 25), (43, 26), (43, 28), (43, 29), (43, 30), (43, 31), (43, 32), (43, 33), (43, 34), (43, 35), (43, 36), (43, 37), (43, 38), (43, 39), (43, 40), (43, 41), (43, 42), (43, 43), (43, 44), (43, 45), (43, 46), (43, 47), (43, 48), (43, 49), (44, 0), (44, 1), (44, 2), (44, 5), (44, 9), (44, 12), (44, 16), (44, 23), (44, 27), (44, 28), (44, 29), (44, 32), (44, 34), (44, 37), (44, 38), (44, 40), (44, 42), (44, 44), (44, 45), (45, 0), (45, 1), (45, 2), (45, 3), (45, 4), (45, 5), (45, 6), (45, 7), (45, 8), (45, 9), (45, 10), (45, 11), (45, 12), (45, 13), (45, 14), (45, 15), (45, 16), (45, 17), (45, 18), (45, 19), (45, 20), (45, 22), (45, 23), (45, 24), (45, 25), (45, 26), (45, 27), (45, 28), (45, 29), (45, 30), (45, 31), (45, 32), (45, 33), (45, 34), (45, 35), (45, 36), (45, 37), (45, 38), (45, 39), (45, 40), (45, 41), (45, 42), (45, 43), (45, 44), (45, 45), (45, 46), (45, 47), (45, 48), (45, 49), (46, 0), (46, 1), (46, 2), (46, 3), (46, 4), (46, 5), (46, 6), (46, 7), (46, 8), (46, 9), (46, 10), (46, 11), (46, 12), (46, 13), (46, 14), (46, 15), (46, 17), (46, 18), (46, 19), (46, 20), (46, 22), (46, 23), (46, 24), (46, 25), (46, 26), (46, 27), (46, 28), (46, 29), (46, 30), (46, 31), (46, 32), (46, 33), (46, 34), (46, 35), (46, 36), (46, 37), (46, 38), (46, 39), (46, 40), (46, 41), (46, 42), (46, 43), (46, 44), (46, 45), (46, 46), (46, 47), (46, 48), (46, 49), (47, 0), (47, 1), (47, 2), (47, 5), (47, 6), (47, 9), (47, 16), (47, 23), (47, 27), (47, 28), (47, 29), (47, 34), (47, 37), (47, 38), (47, 40), (47, 42), (47, 44), (47, 45), (48, 0), (48, 1), (48, 2), (48, 3), (48, 4), (48, 5), (48, 6), (48, 7), (48, 8), (48, 9), (48, 10), (48, 12), (48, 13), (48, 14), (48, 15), (48, 16), (48, 17), (48, 18), (48, 20), (48, 21), (48, 22), (48, 23), (48, 24), (48, 25), (48, 26), (48, 27), (48, 28), (48, 29), (48, 30), (48, 31), (48, 32), (48, 33), (48, 34), (48, 35), (48, 36), (48, 37), (48, 39), (48, 40), (48, 41), (48, 42), (48, 43), (48, 44), (48, 45), (48, 46), (48, 47), (48, 48), (48, 49), (49, 0), (49, 1), (49, 2), (49, 3), (49, 4), (49, 5), (49, 6), (49, 7), (49, 9), (49, 10), (49, 11), (49, 12), (49, 13), (49, 14), (49, 15), (49, 16), (49, 17), (49, 18), (49, 19), (49, 20), (49, 21), (49, 22), (49, 23), (49, 24), (49, 25), (49, 26), (49, 27), (49, 28), (49, 29), (49, 30), (49, 31), (49, 32), (49, 33), (49, 34), (49, 35), (49, 36), (49, 37), (49, 38), (49, 39), (49, 40), (49, 41), (49, 43), (49, 44), (49, 45), (49, 46), (49, 47), (49, 48), (49, 49)]
----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 1793.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_2_M_1.csv

-- Debugging Step: checking extracted solution after solving model**** -- max_e_h
len_rows_res= 11
row_res= [0, 11, 15, 2, 20, 26, 33, 36, 45, 46, 7]
len_cols_res= 38
cols_res= [0, 1, 10, 11, 12, 14, 15, 17, 2, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 4, 40, 41, 42, 43, 45, 46, 48, 49, 5, 7, 8, 9]
nb row_names_res, = 11
row_names_res = ['r1', 'r12', 'r16', 'r3', 'r21', 'r27', 'r34', 'r37', 'r46', 'r47', 'r8']
col_names_res = ['c1', 'c2', 'c11', 'c12', 'c13', 'c15', 'c16', 'c18', 'c3', 'c21', 'c24', 'c25', 'c26', 'c27', 'c28', 'c30', 'c31', 'c32', 'c33', 'c34', 'c35', 'c36', 'c37', 'c38', 'c39', 'c5', 'c41', 'c42', 'c43', 'c44', 'c46', 'c47', 'c49', 'c50', 'c6', 'c8', 'c9', 'c10']
 nb col_names_res, = 38

----------------------------------------

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.35898 - (Local CPU) 0.35898 - (Global CPU) 0.35898

 Solve status: Optimal Objective value: 1793.0 nb_rows 11 nb_cols 38
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(0, 50), (1, 46), (2, 48), (3, 13), (4, 47), (5, 46), (6, 19), (7, 49), (8, 48), (9, 45), (10, 19), (11, 46), (12, 18), (13, 46), (14, 17), (15, 50), (16, 18), (17, 16), (18, 15), (19, 17), (20, 46), (21, 46), (22, 19), (23, 46), (24, 18), (25, 16), (26, 49), (27, 17), (28, 47), (29, 17), (30, 14), (31, 46), (32, 17), (33, 48), (34, 18), (35, 18), (36, 47), (37, 17), (38, 45), (39, 17), (40, 16), (41, 17), (42, 17), (43, 48), (44, 19), (45, 49), (46, 48), (47, 18), (48, 47), (49, 48)]
cols_data = [(0, 50), (1, 45), (2, 50), (3, 24), (4, 25), (5, 48), (6, 22), (7, 24), (8, 24), (9, 48), (10, 25), (11, 23), (12, 27), (13, 25), (14, 24), (15, 24), (16, 47), (17, 25), (18, 22), (19, 23), (20, 25), (21, 23), (22, 22), (23, 46), (24, 26), (25, 24), (26, 28), (27, 48), (28, 45), (29, 44), (30, 25), (31, 27), (32, 26), (33, 26), (34, 46), (35, 24), (36, 24), (37, 50), (38, 47), (39, 24), (40, 47), (41, 26), (42, 47), (43, 24), (44, 45), (45, 45), (46, 25), (47, 23), (48, 27), (49, 24)]
rows_res_set = {0, 33, 2, 36, 7, 11, 45, 46, 15, 20, 26}
cols_res_set = {0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {0: 50, 1: 45, 2: 50, 3: 24, 4: 25, 5: 48, 6: 22, 7: 24, 8: 24, 9: 48, 10: 25, 11: 23, 12: 27, 13: 25, 14: 24, 15: 24, 16: 47, 17: 25, 18: 22, 19: 23, 20: 25, 21: 23, 22: 22, 23: 46, 24: 26, 25: 24, 26: 28, 27: 48, 28: 45, 29: 44, 30: 25, 31: 27, 32: 26, 33: 26, 34: 46, 35: 24, 36: 24, 37: 50, 38: 47, 39: 24, 40: 47, 41: 26, 42: 47, 43: 24, 44: 45, 45: 45, 46: 25, 47: 23, 48: 27, 49: 24}
row_degree_map = {0: 50, 1: 46, 2: 48, 3: 13, 4: 47, 5: 46, 6: 19, 7: 49, 8: 48, 9: 45, 10: 19, 11: 46, 12: 18, 13: 46, 14: 17, 15: 50, 16: 18, 17: 16, 18: 15, 19: 17, 20: 46, 21: 46, 22: 19, 23: 46, 24: 18, 25: 16, 26: 49, 27: 17, 28: 47, 29: 17, 30: 14, 31: 46, 32: 17, 33: 48, 34: 18, 35: 18, 36: 47, 37: 17, 38: 45, 39: 17, 40: 16, 41: 17, 42: 17, 43: 48, 44: 19, 45: 49, 46: 48, 47: 18, 48: 47, 49: 48}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {0: 11, 1: 11, 2: 11, 3: 0, 4: 11, 5: 11, 6: 0, 7: 11, 8: 11, 9: 11, 10: 11, 11: 11, 12: 11, 13: 0, 14: 11, 15: 11, 16: 0, 17: 11, 18: 0, 19: 0, 20: 11, 21: 0, 22: 0, 23: 11, 24: 11, 25: 11, 26: 11, 27: 11, 28: 0, 29: 11, 30: 11, 31: 11, 32: 11, 33: 11, 34: 11, 35: 11, 36: 11, 37: 11, 38: 11, 39: 0, 40: 11, 41: 11, 42: 11, 43: 11, 44: 0, 45: 11, 46: 11, 47: 0, 48: 11, 49: 11}
row_degree_map reduced = {0: 38, 1: 0, 2: 38, 3: 0, 4: 0, 5: 0, 6: 0, 7: 38, 8: 0, 9: 0, 10: 0, 11: 38, 12: 0, 13: 0, 14: 0, 15: 38, 16: 0, 17: 0, 18: 0, 19: 0, 20: 38, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 38, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 38, 34: 0, 35: 0, 36: 38, 37: 0, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 43: 0, 44: 0, 45: 38, 46: 38, 47: 0, 48: 0, 49: 0}
cols_rem   = [(0, 11), (1, 11), (2, 11), (4, 11), (5, 11), (7, 11), (8, 11), (9, 11), (10, 11), (11, 11), (12, 11), (14, 11), (15, 11), (17, 11), (20, 11), (23, 11), (24, 11), (25, 11), (26, 11), (27, 11), (29, 11), (30, 11), (31, 11), (32, 11), (33, 11), (34, 11), (35, 11), (36, 11), (37, 11), (38, 11), (40, 11), (41, 11), (42, 11), (43, 11), (45, 11), (46, 11), (48, 11), (49, 11)]
rows_rem   = [(0, 38), (2, 38), (7, 38), (11, 38), (15, 38), (20, 38), (26, 38), (33, 38), (36, 38), (45, 38), (46, 38)]
 nb_edges_1_rem   = 418
 nb_edges_0_rem   = 0
row_rem_length= 38 col_rem_length = 11
Stats in updata_data : row_rem_length = 38 col_rem_length = 11 nb_edges_0_rem= 0 nb_edges_1_rem= 418  !!!!! density = 1.0


----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining  Rows  : 11
Number of Remaining number Columns : 38
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 418 Density : 1.0 current obj value 1793.0
----------------------------------------

----------------------------------------

Exit from the exact  approach  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 11  and cols_res of lenght = 38 and density = 1.0
 Density of the found matrix =  : 1.0
 Original Rows  : [(0, 50), (1, 46), (2, 48), (3, 13), (4, 47), (5, 46), (6, 19), (7, 49), (8, 48), (9, 45), (10, 19), (11, 46), (12, 18), (13, 46), (14, 17), (15, 50), (16, 18), (17, 16), (18, 15), (19, 17), (20, 46), (21, 46), (22, 19), (23, 46), (24, 18), (25, 16), (26, 49), (27, 17), (28, 47), (29, 17), (30, 14), (31, 46), (32, 17), (33, 48), (34, 18), (35, 18), (36, 47), (37, 17), (38, 45), (39, 17), (40, 16), (41, 17), (42, 17), (43, 48), (44, 19), (45, 49), (46, 48), (47, 18), (48, 47), (49, 48)]
 Original Cold  : [(0, 50), (1, 45), (2, 50), (3, 24), (4, 25), (5, 48), (6, 22), (7, 24), (8, 24), (9, 48), (10, 25), (11, 23), (12, 27), (13, 25), (14, 24), (15, 24), (16, 47), (17, 25), (18, 22), (19, 23), (20, 25), (21, 23), (22, 22), (23, 46), (24, 26), (25, 24), (26, 28), (27, 48), (28, 45), (29, 44), (30, 25), (31, 27), (32, 26), (33, 26), (34, 46), (35, 24), (36, 24), (37, 50), (38, 47), (39, 24), (40, 47), (41, 26), (42, 47), (43, 24), (44, 45), (45, 45), (46, 25), (47, 23), (48, 27), (49, 24)]
 Remaining Rows  : [0, 11, 15, 2, 20, 26, 33, 36, 45, 46, 7]
 Remaining  Cols  : [0, 1, 10, 11, 12, 14, 15, 17, 2, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 4, 40, 41, 42, 43, 45, 46, 48, 49, 5, 7, 8, 9]
 Remaining Rows with degree : [(0, 38), (2, 38), (7, 38), (11, 38), (15, 38), (20, 38), (26, 38), (33, 38), (36, 38), (45, 38), (46, 38)]
 Remaining  Cols with degree : [(0, 11), (1, 11), (2, 11), (4, 11), (5, 11), (7, 11), (8, 11), (9, 11), (10, 11), (11, 11), (12, 11), (14, 11), (15, 11), (17, 11), (20, 11), (23, 11), (24, 11), (25, 11), (26, 11), (27, 11), (29, 11), (30, 11), (31, 11), (32, 11), (33, 11), (34, 11), (35, 11), (36, 11), (37, 11), (38, 11), (40, 11), (41, 11), (42, 11), (43, 11), (45, 11), (46, 11), (48, 11), (49, 11)]
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 1
        with delta =  0.0
        Found matrix of size : (11, 38)
        and density : 1.0
        and # of ones : 418
        and Heuristic QBC time   : 0.35898
        and Global QBC  time  : 0.35898
        
 Remaining Rows  : [(0, 38), (2, 38), (7, 38), (11, 38), (15, 38), (20, 38), (26, 38), (33, 38), (36, 38), (45, 38), (46, 38)]
 Remaining  Cols  : [(0, 11), (1, 11), (2, 11), (4, 11), (5, 11), (7, 11), (8, 11), (9, 11), (10, 11), (11, 11), (12, 11), (14, 11), (15, 11), (17, 11), (20, 11), (23, 11), (24, 11), (25, 11), (26, 11), (27, 11), (29, 11), (30, 11), (31, 11), (32, 11), (33, 11), (34, 11), (35, 11), (36, 11), (37, 11), (38, 11), (40, 11), (41, 11), (42, 11), (43, 11), (45, 11), (46, 11), (48, 11), (49, 11)]

----------------------------------------------------------------------
 
    End of computations for matrix 1 in  data/data3.csv at level 2 and debug  4
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (11,38), with  density : 1.0 and number of ones: 418
    Global Time (in sec): 0.359
    Total Time in QBC approaches: 0.359
    Time in greedy approach: 0.000,  size of matrix found by greedy : (0,0) 
    With density : 0.000 and # ones : 0 
    Time in heuristic only : 0.359 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 0
    Percentage of greedy approach run time in global run time : 0.00% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.57
    
----------------------------------------------------------------------

 ***Solution Rows indices : [0, 2, 7, 11, 15, 20, 26, 33, 36, 45, 46]
 ***Solution Cols indices : [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 49]
 Remaining Rows with degree : [(0, 38), (2, 38), (7, 38), (11, 38), (15, 38), (20, 38), (26, 38), (33, 38), (36, 38), (45, 38), (46, 38)]
 Remaining Cols with degree : [(0, 11), (1, 11), (2, 11), (4, 11), (5, 11), (7, 11), (8, 11), (9, 11), (10, 11), (11, 11), (12, 11), (14, 11), (15, 11), (17, 11), (20, 11), (23, 11), (24, 11), (25, 11), (26, 11), (27, 11), (29, 11), (30, 11), (31, 11), (32, 11), (33, 11), (34, 11), (35, 11), (36, 11), (37, 11), (38, 11), (40, 11), (41, 11), (42, 11), (43, 11), (45, 11), (46, 11), (48, 11), (49, 11)]

 Level 1, Matrix 2:
Size Rows: 39
Size Cols: 50

 Level 1 Matrix  3:
Size Rows: 50
Size Cols: 12

 Level 1  Matrix 2 Rows: [(1, 4), (3, 37), (4, 3), (5, 4), (6, 31), (8, 2), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 35), (19, 33), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (27, 33), (28, 3), (29, 33), (30, 36), (31, 4), (32, 33), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (43, 2), (44, 31), (47, 32), (48, 3), (49, 2)]
Level  1  Matrix 2 Cols: [(0, 0), (1, 5), (2, 0), (3, 25), (4, 25), (5, 2), (6, 26), (7, 26), (8, 26), (9, 2), (10, 25), (11, 27), (12, 23), (13, 24), (14, 26), (15, 26), (16, 2), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 3), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (37, 0), (38, 3), (39, 24), (40, 3), (41, 24), (42, 3), (43, 26), (44, 4), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)]

 Level  1  Matrix 3 Rows: [(0, 0), (1, 2), (2, 2), (3, 9), (4, 1), (5, 1), (6, 8), (7, 1), (8, 0), (9, 1), (10, 9), (11, 4), (12, 9), (13, 1), (14, 9), (15, 0), (16, 9), (17, 9), (18, 10), (19, 8), (20, 4), (21, 1), (22, 8), (23, 1), (24, 9), (25, 9), (26, 1), (27, 10), (28, 1), (29, 9), (30, 9), (31, 0), (32, 11), (33, 2), (34, 9), (35, 9), (36, 3), (37, 9), (38, 0), (39, 9), (40, 10), (41, 9), (42, 8), (43, 0), (44, 9), (45, 1), (46, 2), (47, 8), (48, 1), (49, 0)]
Level 1  Matrix 3 Cols: [(3, 26), (6, 28), (13, 25), (16, 3), (18, 28), (19, 27), (21, 27), (22, 28), (28, 5), (39, 26), (44, 5), (47, 27)]

----------------------------------------------------------------------
***Stats Current Input for matrix 2 in  data/data3.csv at level 1 and with model:  max_e_c***
Size of current matrix :  39 * 50 = 1950 ; dec_conq: 1
number input zeros :  872 ; number input ones :  1078
rho =  0.1 ; delta :  0.0
Input density : 0.553 ; density_threshold: 0.57000
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.553 density  and density_threshold= 0.570


I am in the while loop with i= 1 density= 0.5528205128205128 and fixed_threshold= 0.57

I am currently solving row KP_QBr with Input data : ***************

edges = 1608 rho= 0.1 number of columns = 50 number of rows = 39 total_degree_0= 872 RHS= 160.8
----------------------------------------
Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  66.84705882352941
I solved model name = row_knapsack_problem for iteration i =  1 KP time = 0.0 debug : 4

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00854 - (Local CPU) 0.00854 - (Global CPU) 0.00854

 Solve status: Optimal Objective value: 66.84705882352941 nb_rows 34 nb_cols 50
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 46), (3, 13), (4, 47), (5, 46), (6, 19), (8, 48), (9, 45), (10, 19), (12, 18), (13, 46), (14, 17), (16, 18), (17, 16), (18, 15), (19, 17), (21, 46), (22, 19), (23, 46), (24, 18), (25, 16), (27, 17), (28, 47), (29, 17), (30, 14), (31, 46), (32, 17), (34, 18), (35, 18), (37, 17), (38, 45), (39, 17), (40, 16), (41, 17), (42, 17), (43, 48), (44, 19), (47, 18), (48, 47), (49, 48)]
cols_data = [(0, 39), (1, 34), (2, 39), (3, 14), (4, 14), (5, 37), (6, 13), (7, 13), (8, 13), (9, 37), (10, 14), (11, 12), (12, 16), (13, 15), (14, 13), (15, 13), (16, 37), (17, 14), (18, 12), (19, 13), (20, 14), (21, 15), (22, 14), (23, 35), (24, 15), (25, 13), (26, 17), (27, 37), (28, 36), (29, 33), (30, 14), (31, 16), (32, 15), (33, 15), (34, 35), (35, 13), (36, 13), (37, 39), (38, 36), (39, 15), (40, 36), (41, 15), (42, 36), (43, 13), (44, 35), (45, 34), (46, 14), (47, 14), (48, 16), (49, 13)]
rows_res_set = {1, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 19, 21, 22, 23, 24, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49}
cols_res_set = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {0: 39, 1: 34, 2: 39, 3: 14, 4: 14, 5: 37, 6: 13, 7: 13, 8: 13, 9: 37, 10: 14, 11: 12, 12: 16, 13: 15, 14: 13, 15: 13, 16: 37, 17: 14, 18: 12, 19: 13, 20: 14, 21: 15, 22: 14, 23: 35, 24: 15, 25: 13, 26: 17, 27: 37, 28: 36, 29: 33, 30: 14, 31: 16, 32: 15, 33: 15, 34: 35, 35: 13, 36: 13, 37: 39, 38: 36, 39: 15, 40: 36, 41: 15, 42: 36, 43: 13, 44: 35, 45: 34, 46: 14, 47: 14, 48: 16, 49: 13}
row_degree_map = {1: 46, 3: 13, 4: 47, 5: 46, 6: 19, 8: 48, 9: 45, 10: 19, 12: 18, 13: 46, 14: 17, 16: 18, 17: 16, 18: 15, 19: 17, 21: 46, 22: 19, 23: 46, 24: 18, 25: 16, 27: 17, 28: 47, 29: 17, 30: 14, 31: 46, 32: 17, 34: 18, 35: 18, 37: 17, 38: 45, 39: 17, 40: 16, 41: 17, 42: 17, 43: 48, 44: 19, 47: 18, 48: 47, 49: 48}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {0: 34, 1: 32, 2: 34, 3: 14, 4: 14, 5: 32, 6: 13, 7: 13, 8: 13, 9: 32, 10: 14, 11: 12, 12: 15, 13: 15, 14: 13, 15: 13, 16: 33, 17: 14, 18: 12, 19: 13, 20: 14, 21: 15, 22: 14, 23: 32, 24: 15, 25: 13, 26: 17, 27: 33, 28: 31, 29: 29, 30: 14, 31: 16, 32: 15, 33: 15, 34: 31, 35: 13, 36: 13, 37: 34, 38: 31, 39: 15, 40: 31, 41: 15, 42: 33, 43: 13, 44: 30, 45: 30, 46: 14, 47: 14, 48: 16, 49: 13}
row_degree_map reduced = {1: 46, 3: 0, 4: 47, 5: 46, 6: 19, 8: 48, 9: 45, 10: 19, 12: 18, 13: 46, 14: 17, 16: 18, 17: 0, 18: 0, 19: 17, 21: 46, 22: 19, 23: 46, 24: 18, 25: 0, 27: 17, 28: 47, 29: 17, 30: 0, 31: 46, 32: 17, 34: 18, 35: 18, 37: 17, 38: 45, 39: 17, 40: 16, 41: 17, 42: 17, 43: 48, 44: 19, 47: 18, 48: 47, 49: 48}
cols_rem   = [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (11, 12), (12, 15), (13, 15), (14, 13), (15, 13), (16, 33), (17, 14), (18, 12), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (43, 13), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
rows_rem   = [(1, 46), (4, 47), (5, 46), (6, 19), (8, 48), (9, 45), (10, 19), (12, 18), (13, 46), (14, 17), (16, 18), (19, 17), (21, 46), (22, 19), (23, 46), (24, 18), (27, 17), (28, 47), (29, 17), (31, 46), (32, 17), (34, 18), (35, 18), (37, 17), (38, 45), (39, 17), (40, 16), (41, 17), (42, 17), (43, 48), (44, 19), (47, 18), (48, 47), (49, 48)]
 nb_edges_1_rem   = 1004
 nb_edges_0_rem   = 696
row_rem_length= 50 col_rem_length = 34
Stats in updata_data : row_rem_length = 50 col_rem_length = 34 nb_edges_0_rem= 696 nb_edges_1_rem= 1004  !!!!! density = 0.5905882352941176

----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 50) and density : 0.5905882352941176 and number of remaining ones : 1004
        
Remaining  Rows before colling KP col : [(1, 46), (4, 47), (5, 46), (6, 19), (8, 48), (9, 45), (10, 19), (12, 18), (13, 46), (14, 17), (16, 18), (19, 17), (21, 46), (22, 19), (23, 46), (24, 18), (27, 17), (28, 47), (29, 17), (31, 46), (32, 17), (34, 18), (35, 18), (37, 17), (38, 45), (39, 17), (40, 16), (41, 17), (42, 17), (43, 48), (44, 19), (47, 18), (48, 47), (49, 48)]
Remaining Columns  before colling KP col : [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (11, 12), (12, 15), (13, 15), (14, 13), (15, 13), (16, 33), (17, 14), (18, 12), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (43, 13), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (11, 12), (12, 15), (13, 15), (14, 13), (15, 13), (16, 33), (17, 14), (18, 12), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (43, 13), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
nb_edges_0 = 696 rho= 0.1 # of rows = 34 # of columns= 50 total_degree_0= 696 RHS= 69.60000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00546 - (Local CPU) 0.00546 - (Global CPU) 0.01401

 Solve status: Optimal Objective value: 39.84761904761904 nb_rows 34 nb_cols 46
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 46), (4, 47), (5, 46), (6, 19), (8, 48), (9, 45), (10, 19), (12, 18), (13, 46), (14, 17), (16, 18), (19, 17), (21, 46), (22, 19), (23, 46), (24, 18), (27, 17), (28, 47), (29, 17), (31, 46), (32, 17), (34, 18), (35, 18), (37, 17), (38, 45), (39, 17), (40, 16), (41, 17), (42, 17), (43, 48), (44, 19), (47, 18), (48, 47), (49, 48)]
cols_data = [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (11, 12), (12, 15), (13, 15), (14, 13), (15, 13), (16, 33), (17, 14), (18, 12), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (43, 13), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
rows_res_set = {1, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 19, 21, 22, 23, 24, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49}
cols_res_set = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {0: 34, 1: 32, 2: 34, 3: 14, 4: 14, 5: 32, 6: 13, 7: 13, 8: 13, 9: 32, 10: 14, 11: 12, 12: 15, 13: 15, 14: 13, 15: 13, 16: 33, 17: 14, 18: 12, 19: 13, 20: 14, 21: 15, 22: 14, 23: 32, 24: 15, 25: 13, 26: 17, 27: 33, 28: 31, 29: 29, 30: 14, 31: 16, 32: 15, 33: 15, 34: 31, 35: 13, 36: 13, 37: 34, 38: 31, 39: 15, 40: 31, 41: 15, 42: 33, 43: 13, 44: 30, 45: 30, 46: 14, 47: 14, 48: 16, 49: 13}
row_degree_map = {1: 46, 4: 47, 5: 46, 6: 19, 8: 48, 9: 45, 10: 19, 12: 18, 13: 46, 14: 17, 16: 18, 19: 17, 21: 46, 22: 19, 23: 46, 24: 18, 27: 17, 28: 47, 29: 17, 31: 46, 32: 17, 34: 18, 35: 18, 37: 17, 38: 45, 39: 17, 40: 16, 41: 17, 42: 17, 43: 48, 44: 19, 47: 18, 48: 47, 49: 48}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {0: 34, 1: 32, 2: 34, 3: 14, 4: 14, 5: 32, 6: 13, 7: 13, 8: 13, 9: 32, 10: 14, 11: 0, 12: 15, 13: 15, 14: 13, 15: 0, 16: 33, 17: 14, 18: 0, 19: 13, 20: 14, 21: 15, 22: 14, 23: 32, 24: 15, 25: 13, 26: 17, 27: 33, 28: 31, 29: 29, 30: 14, 31: 16, 32: 15, 33: 15, 34: 31, 35: 13, 36: 13, 37: 34, 38: 31, 39: 15, 40: 31, 41: 15, 42: 33, 43: 0, 44: 30, 45: 30, 46: 14, 47: 14, 48: 16, 49: 13}
row_degree_map reduced = {1: 42, 4: 44, 5: 42, 6: 19, 8: 44, 9: 42, 10: 19, 12: 18, 13: 44, 14: 17, 16: 18, 19: 16, 21: 43, 22: 19, 23: 42, 24: 18, 27: 17, 28: 43, 29: 17, 31: 42, 32: 17, 34: 18, 35: 18, 37: 17, 38: 42, 39: 17, 40: 15, 41: 17, 42: 17, 43: 45, 44: 19, 47: 18, 48: 44, 49: 44}
cols_rem   = [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (12, 15), (13, 15), (14, 13), (16, 33), (17, 14), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
rows_rem   = [(1, 42), (4, 44), (5, 42), (6, 19), (8, 44), (9, 42), (10, 19), (12, 18), (13, 44), (14, 17), (16, 18), (19, 16), (21, 43), (22, 19), (23, 42), (24, 18), (27, 17), (28, 43), (29, 17), (31, 42), (32, 17), (34, 18), (35, 18), (37, 17), (38, 42), (39, 17), (40, 15), (41, 17), (42, 17), (43, 45), (44, 19), (47, 18), (48, 44), (49, 44)]
 nb_edges_1_rem   = 954
 nb_edges_0_rem   = 610
row_rem_length= 46 col_rem_length = 34
Stats in updata_data : row_rem_length = 46 col_rem_length = 34 nb_edges_0_rem= 610 nb_edges_1_rem= 954  !!!!! density = 0.6099744245524297

----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 46) and density : 0.6099744245524297 and number of remaining ones : 1004
        

----------------------------------------
Remaining  Rows before colling KP col : [(1, 42), (4, 44), (5, 42), (6, 19), (8, 44), (9, 42), (10, 19), (12, 18), (13, 44), (14, 17), (16, 18), (19, 16), (21, 43), (22, 19), (23, 42), (24, 18), (27, 17), (28, 43), (29, 17), (31, 42), (32, 17), (34, 18), (35, 18), (37, 17), (38, 42), (39, 17), (40, 15), (41, 17), (42, 17), (43, 45), (44, 19), (47, 18), (48, 44), (49, 44)]
Remaining Columns  before colling KP col : [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (12, 15), (13, 15), (14, 13), (16, 33), (17, 14), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.610 > 0.57
            It took me : 0.014 time
            Found matrix of size : (34, 46) and density : 0.610
            
----------------------------------------
edges_1_in = [(1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 7), (1, 8), (1, 9), (1, 10), (1, 12), (1, 13), (1, 16), (1, 19), (1, 20), (1, 21), (1, 22), (1, 23), (1, 24), (1, 25), (1, 26), (1, 27), (1, 28), (1, 29), (1, 30), (1, 31), (1, 32), (1, 33), (1, 34), (1, 35), (1, 36), (1, 37), (1, 38), (1, 39), (1, 40), (1, 41), (1, 42), (1, 45), (1, 46), (1, 47), (1, 48), (1, 49), (4, 0), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8), (4, 10), (4, 12), (4, 13), (4, 14), (4, 16), (4, 17), (4, 19), (4, 20), (4, 21), (4, 22), (4, 23), (4, 24), (4, 25), (4, 26), (4, 27), (4, 28), (4, 29), (4, 30), (4, 31), (4, 32), (4, 33), (4, 34), (4, 35), (4, 36), (4, 37), (4, 38), (4, 39), (4, 41), (4, 42), (4, 44), (4, 45), (4, 46), (4, 47), (4, 48), (4, 49), (5, 0), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7), (5, 8), (5, 9), (5, 10), (5, 12), (5, 13), (5, 14), (5, 16), (5, 17), (5, 19), (5, 20), (5, 21), (5, 22), (5, 23), (5, 24), (5, 25), (5, 26), (5, 27), (5, 28), (5, 29), (5, 30), (5, 31), (5, 32), (5, 33), (5, 35), (5, 37), (5, 38), (5, 39), (5, 40), (5, 41), (5, 42), (5, 46), (5, 47), (5, 48), (5, 49), (6, 0), (6, 1), (6, 2), (6, 5), (6, 9), (6, 13), (6, 16), (6, 23), (6, 27), (6, 28), (6, 29), (6, 31), (6, 34), (6, 37), (6, 38), (6, 40), (6, 42), (6, 44), (6, 45), (8, 0), (8, 1), (8, 2), (8, 3), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9), (8, 10), (8, 12), (8, 13), (8, 14), (8, 16), (8, 17), (8, 19), (8, 20), (8, 21), (8, 22), (8, 23), (8, 24), (8, 25), (8, 26), (8, 27), (8, 28), (8, 30), (8, 31), (8, 32), (8, 33), (8, 34), (8, 35), (8, 36), (8, 37), (8, 38), (8, 39), (8, 41), (8, 42), (8, 44), (8, 45), (8, 46), (8, 47), (8, 48), (8, 49), (9, 0), (9, 1), (9, 2), (9, 3), (9, 4), (9, 5), (9, 6), (9, 7), (9, 9), (9, 10), (9, 12), (9, 13), (9, 14), (9, 16), (9, 17), (9, 19), (9, 20), (9, 21), (9, 22), (9, 24), (9, 26), (9, 27), (9, 28), (9, 29), (9, 30), (9, 31), (9, 32), (9, 33), (9, 34), (9, 36), (9, 37), (9, 38), (9, 39), (9, 40), (9, 41), (9, 42), (9, 44), (9, 45), (9, 46), (9, 47), (9, 48), (9, 49), (10, 0), (10, 1), (10, 2), (10, 4), (10, 5), (10, 9), (10, 16), (10, 23), (10, 27), (10, 28), (10, 29), (10, 34), (10, 37), (10, 38), (10, 40), (10, 42), (10, 44), (10, 45), (10, 48), (12, 0), (12, 1), (12, 2), (12, 5), (12, 9), (12, 16), (12, 23), (12, 26), (12, 27), (12, 28), (12, 32), (12, 34), (12, 37), (12, 38), (12, 40), (12, 42), (12, 44), (12, 45), (13, 0), (13, 1), (13, 2), (13, 3), (13, 4), (13, 5), (13, 6), (13, 7), (13, 8), (13, 9), (13, 10), (13, 12), (13, 13), (13, 14), (13, 16), (13, 17), (13, 19), (13, 20), (13, 21), (13, 22), (13, 23), (13, 24), (13, 25), (13, 26), (13, 27), (13, 28), (13, 29), (13, 30), (13, 31), (13, 32), (13, 33), (13, 34), (13, 35), (13, 36), (13, 37), (13, 38), (13, 39), (13, 40), (13, 41), (13, 42), (13, 46), (13, 47), (13, 48), (13, 49), (14, 0), (14, 1), (14, 2), (14, 5), (14, 9), (14, 16), (14, 23), (14, 27), (14, 28), (14, 29), (14, 34), (14, 37), (14, 38), (14, 40), (14, 42), (14, 44), (14, 45), (16, 0), (16, 1), (16, 2), (16, 5), (16, 9), (16, 16), (16, 23), (16, 25), (16, 27), (16, 28), (16, 29), (16, 34), (16, 37), (16, 38), (16, 40), (16, 42), (16, 44), (16, 45), (19, 0), (19, 2), (19, 5), (19, 8), (19, 9), (19, 16), (19, 23), (19, 27), (19, 28), (19, 34), (19, 37), (19, 38), (19, 40), (19, 42), (19, 44), (19, 45), (21, 0), (21, 1), (21, 2), (21, 3), (21, 5), (21, 6), (21, 8), (21, 9), (21, 10), (21, 12), (21, 13), (21, 14), (21, 16), (21, 17), (21, 19), (21, 20), (21, 21), (21, 22), (21, 23), (21, 24), (21, 25), (21, 26), (21, 27), (21, 28), (21, 29), (21, 30), (21, 31), (21, 32), (21, 33), (21, 34), (21, 35), (21, 36), (21, 37), (21, 38), (21, 39), (21, 40), (21, 41), (21, 42), (21, 44), (21, 45), (21, 46), (21, 47), (21, 48), (22, 0), (22, 1), (22, 2), (22, 5), (22, 9), (22, 16), (22, 21), (22, 23), (22, 26), (22, 27), (22, 28), (22, 29), (22, 34), (22, 37), (22, 38), (22, 40), (22, 42), (22, 44), (22, 45), (23, 0), (23, 2), (23, 3), (23, 4), (23, 6), (23, 7), (23, 8), (23, 9), (23, 10), (23, 12), (23, 13), (23, 14), (23, 16), (23, 17), (23, 20), (23, 21), (23, 22), (23, 23), (23, 24), (23, 25), (23, 26), (23, 27), (23, 28), (23, 29), (23, 30), (23, 31), (23, 33), (23, 34), (23, 35), (23, 36), (23, 37), (23, 38), (23, 39), (23, 40), (23, 41), (23, 42), (23, 44), (23, 45), (23, 46), (23, 47), (23, 48), (23, 49), (24, 0), (24, 1), (24, 2), (24, 5), (24, 9), (24, 16), (24, 17), (24, 19), (24, 20), (24, 23), (24, 27), (24, 29), (24, 34), (24, 37), (24, 38), (24, 40), (24, 42), (24, 44), (27, 0), (27, 1), (27, 2), (27, 5), (27, 9), (27, 16), (27, 23), (27, 27), (27, 29), (27, 37), (27, 38), (27, 40), (27, 41), (27, 42), (27, 44), (27, 45), (27, 48), (28, 0), (28, 1), (28, 2), (28, 3), (28, 4), (28, 5), (28, 7), (28, 8), (28, 9), (28, 10), (28, 12), (28, 13), (28, 14), (28, 16), (28, 17), (28, 19), (28, 20), (28, 21), (28, 22), (28, 23), (28, 24), (28, 26), (28, 27), (28, 28), (28, 29), (28, 30), (28, 31), (28, 32), (28, 33), (28, 34), (28, 35), (28, 36), (28, 37), (28, 38), (28, 39), (28, 40), (28, 41), (28, 42), (28, 44), (28, 46), (28, 47), (28, 48), (28, 49), (29, 0), (29, 1), (29, 2), (29, 5), (29, 9), (29, 16), (29, 23), (29, 27), (29, 28), (29, 29), (29, 34), (29, 37), (29, 38), (29, 40), (29, 42), (29, 44), (29, 45), (31, 0), (31, 1), (31, 2), (31, 3), (31, 4), (31, 5), (31, 6), (31, 7), (31, 8), (31, 9), (31, 10), (31, 13), (31, 14), (31, 16), (31, 17), (31, 19), (31, 21), (31, 22), (31, 23), (31, 24), (31, 25), (31, 26), (31, 27), (31, 28), (31, 30), (31, 31), (31, 32), (31, 33), (31, 34), (31, 35), (31, 37), (31, 38), (31, 39), (31, 40), (31, 41), (31, 42), (31, 44), (31, 45), (31, 46), (31, 47), (31, 48), (31, 49), (32, 0), (32, 1), (32, 2), (32, 5), (32, 9), (32, 23), (32, 26), (32, 27), (32, 29), (32, 33), (32, 34), (32, 37), (32, 38), (32, 40), (32, 42), (32, 44), (32, 45), (34, 0), (34, 1), (34, 2), (34, 5), (34, 9), (34, 16), (34, 23), (34, 27), (34, 28), (34, 29), (34, 34), (34, 36), (34, 37), (34, 38), (34, 40), (34, 42), (34, 44), (34, 45), (35, 0), (35, 1), (35, 2), (35, 5), (35, 9), (35, 12), (35, 16), (35, 23), (35, 27), (35, 28), (35, 29), (35, 34), (35, 37), (35, 38), (35, 40), (35, 42), (35, 44), (35, 45), (37, 0), (37, 1), (37, 2), (37, 5), (37, 9), (37, 16), (37, 23), (37, 27), (37, 28), (37, 29), (37, 31), (37, 34), (37, 37), (37, 38), (37, 42), (37, 44), (37, 45), (38, 0), (38, 1), (38, 2), (38, 3), (38, 4), (38, 5), (38, 6), (38, 8), (38, 9), (38, 10), (38, 12), (38, 13), (38, 14), (38, 16), (38, 17), (38, 19), (38, 20), (38, 21), (38, 22), (38, 23), (38, 24), (38, 25), (38, 26), (38, 27), (38, 28), (38, 30), (38, 31), (38, 32), (38, 33), (38, 35), (38, 36), (38, 37), (38, 39), (38, 40), (38, 41), (38, 42), (38, 44), (38, 45), (38, 46), (38, 47), (38, 48), (38, 49), (39, 0), (39, 1), (39, 2), (39, 5), (39, 7), (39, 9), (39, 16), (39, 23), (39, 27), (39, 28), (39, 29), (39, 34), (39, 37), (39, 40), (39, 42), (39, 44), (39, 45), (40, 0), (40, 1), (40, 2), (40, 5), (40, 16), (40, 24), (40, 27), (40, 28), (40, 29), (40, 34), (40, 37), (40, 38), (40, 40), (40, 42), (40, 45), (41, 0), (41, 1), (41, 2), (41, 5), (41, 9), (41, 16), (41, 23), (41, 27), (41, 28), (41, 29), (41, 34), (41, 37), (41, 38), (41, 40), (41, 42), (41, 44), (41, 45), (42, 0), (42, 1), (42, 2), (42, 9), (42, 16), (42, 23), (42, 27), (42, 28), (42, 29), (42, 34), (42, 37), (42, 38), (42, 39), (42, 40), (42, 42), (42, 44), (42, 45), (43, 0), (43, 1), (43, 2), (43, 3), (43, 4), (43, 5), (43, 6), (43, 7), (43, 8), (43, 9), (43, 10), (43, 12), (43, 13), (43, 14), (43, 16), (43, 17), (43, 19), (43, 20), (43, 21), (43, 22), (43, 23), (43, 24), (43, 25), (43, 26), (43, 28), (43, 29), (43, 30), (43, 31), (43, 32), (43, 33), (43, 34), (43, 35), (43, 36), (43, 37), (43, 38), (43, 39), (43, 40), (43, 41), (43, 42), (43, 44), (43, 45), (43, 46), (43, 47), (43, 48), (43, 49), (44, 0), (44, 1), (44, 2), (44, 5), (44, 9), (44, 12), (44, 16), (44, 23), (44, 27), (44, 28), (44, 29), (44, 32), (44, 34), (44, 37), (44, 38), (44, 40), (44, 42), (44, 44), (44, 45), (47, 0), (47, 1), (47, 2), (47, 5), (47, 6), (47, 9), (47, 16), (47, 23), (47, 27), (47, 28), (47, 29), (47, 34), (47, 37), (47, 38), (47, 40), (47, 42), (47, 44), (47, 45), (48, 0), (48, 1), (48, 2), (48, 3), (48, 4), (48, 5), (48, 6), (48, 7), (48, 8), (48, 9), (48, 10), (48, 12), (48, 13), (48, 14), (48, 16), (48, 17), (48, 20), (48, 21), (48, 22), (48, 23), (48, 24), (48, 25), (48, 26), (48, 27), (48, 28), (48, 29), (48, 30), (48, 31), (48, 32), (48, 33), (48, 34), (48, 35), (48, 36), (48, 37), (48, 39), (48, 40), (48, 41), (48, 42), (48, 44), (48, 45), (48, 46), (48, 47), (48, 48), (48, 49), (49, 0), (49, 1), (49, 2), (49, 3), (49, 4), (49, 5), (49, 6), (49, 7), (49, 9), (49, 10), (49, 12), (49, 13), (49, 14), (49, 16), (49, 17), (49, 19), (49, 20), (49, 21), (49, 22), (49, 23), (49, 24), (49, 25), (49, 26), (49, 27), (49, 28), (49, 29), (49, 30), (49, 31), (49, 32), (49, 33), (49, 34), (49, 35), (49, 36), (49, 37), (49, 38), (49, 39), (49, 40), (49, 41), (49, 44), (49, 45), (49, 46), (49, 47), (49, 48), (49, 49)]
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

 Start exact approaches with :
rows_in = [(1, 42), (4, 44), (5, 42), (6, 19), (8, 44), (9, 42), (10, 19), (12, 18), (13, 44), (14, 17), (16, 18), (19, 16), (21, 43), (22, 19), (23, 42), (24, 18), (27, 17), (28, 43), (29, 17), (31, 42), (32, 17), (34, 18), (35, 18), (37, 17), (38, 42), (39, 17), (40, 15), (41, 17), (42, 17), (43, 45), (44, 19), (47, 18), (48, 44), (49, 44)]
cols_in = [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (12, 15), (13, 15), (14, 13), (16, 33), (17, 14), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
row_names_in = ['r2', 'r5', 'r6', 'r7', 'r9', 'r10', 'r11', 'r13', 'r14', 'r15', 'r17', 'r20', 'r22', 'r23', 'r24', 'r25', 'r28', 'r29', 'r30', 'r32', 'r33', 'r35', 'r36', 'r38', 'r39', 'r40', 'r41', 'r42', 'r43', 'r44', 'r45', 'r48', 'r49', 'r50']
col_names_in = ['c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'c10', 'c11', 'c13', 'c14', 'c15', 'c17', 'c18', 'c20', 'c21', 'c22', 'c23', 'c24', 'c25', 'c26', 'c27', 'c28', 'c29', 'c30', 'c31', 'c32', 'c33', 'c34', 'c35', 'c36', 'c37', 'c38', 'c39', 'c40', 'c41', 'c42', 'c43', 'c45', 'c46', 'c47', 'c48', 'c49', 'c50']
edges_1_in = [(1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 7), (1, 8), (1, 9), (1, 10), (1, 12), (1, 13), (1, 16), (1, 19), (1, 20), (1, 21), (1, 22), (1, 23), (1, 24), (1, 25), (1, 26), (1, 27), (1, 28), (1, 29), (1, 30), (1, 31), (1, 32), (1, 33), (1, 34), (1, 35), (1, 36), (1, 37), (1, 38), (1, 39), (1, 40), (1, 41), (1, 42), (1, 45), (1, 46), (1, 47), (1, 48), (1, 49), (4, 0), (4, 1), (4, 2), (4, 3), (4, 4), (4, 5), (4, 6), (4, 7), (4, 8), (4, 10), (4, 12), (4, 13), (4, 14), (4, 16), (4, 17), (4, 19), (4, 20), (4, 21), (4, 22), (4, 23), (4, 24), (4, 25), (4, 26), (4, 27), (4, 28), (4, 29), (4, 30), (4, 31), (4, 32), (4, 33), (4, 34), (4, 35), (4, 36), (4, 37), (4, 38), (4, 39), (4, 41), (4, 42), (4, 44), (4, 45), (4, 46), (4, 47), (4, 48), (4, 49), (5, 0), (5, 1), (5, 2), (5, 3), (5, 4), (5, 5), (5, 6), (5, 7), (5, 8), (5, 9), (5, 10), (5, 12), (5, 13), (5, 14), (5, 16), (5, 17), (5, 19), (5, 20), (5, 21), (5, 22), (5, 23), (5, 24), (5, 25), (5, 26), (5, 27), (5, 28), (5, 29), (5, 30), (5, 31), (5, 32), (5, 33), (5, 35), (5, 37), (5, 38), (5, 39), (5, 40), (5, 41), (5, 42), (5, 46), (5, 47), (5, 48), (5, 49), (6, 0), (6, 1), (6, 2), (6, 5), (6, 9), (6, 13), (6, 16), (6, 23), (6, 27), (6, 28), (6, 29), (6, 31), (6, 34), (6, 37), (6, 38), (6, 40), (6, 42), (6, 44), (6, 45), (8, 0), (8, 1), (8, 2), (8, 3), (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9), (8, 10), (8, 12), (8, 13), (8, 14), (8, 16), (8, 17), (8, 19), (8, 20), (8, 21), (8, 22), (8, 23), (8, 24), (8, 25), (8, 26), (8, 27), (8, 28), (8, 30), (8, 31), (8, 32), (8, 33), (8, 34), (8, 35), (8, 36), (8, 37), (8, 38), (8, 39), (8, 41), (8, 42), (8, 44), (8, 45), (8, 46), (8, 47), (8, 48), (8, 49), (9, 0), (9, 1), (9, 2), (9, 3), (9, 4), (9, 5), (9, 6), (9, 7), (9, 9), (9, 10), (9, 12), (9, 13), (9, 14), (9, 16), (9, 17), (9, 19), (9, 20), (9, 21), (9, 22), (9, 24), (9, 26), (9, 27), (9, 28), (9, 29), (9, 30), (9, 31), (9, 32), (9, 33), (9, 34), (9, 36), (9, 37), (9, 38), (9, 39), (9, 40), (9, 41), (9, 42), (9, 44), (9, 45), (9, 46), (9, 47), (9, 48), (9, 49), (10, 0), (10, 1), (10, 2), (10, 4), (10, 5), (10, 9), (10, 16), (10, 23), (10, 27), (10, 28), (10, 29), (10, 34), (10, 37), (10, 38), (10, 40), (10, 42), (10, 44), (10, 45), (10, 48), (12, 0), (12, 1), (12, 2), (12, 5), (12, 9), (12, 16), (12, 23), (12, 26), (12, 27), (12, 28), (12, 32), (12, 34), (12, 37), (12, 38), (12, 40), (12, 42), (12, 44), (12, 45), (13, 0), (13, 1), (13, 2), (13, 3), (13, 4), (13, 5), (13, 6), (13, 7), (13, 8), (13, 9), (13, 10), (13, 12), (13, 13), (13, 14), (13, 16), (13, 17), (13, 19), (13, 20), (13, 21), (13, 22), (13, 23), (13, 24), (13, 25), (13, 26), (13, 27), (13, 28), (13, 29), (13, 30), (13, 31), (13, 32), (13, 33), (13, 34), (13, 35), (13, 36), (13, 37), (13, 38), (13, 39), (13, 40), (13, 41), (13, 42), (13, 46), (13, 47), (13, 48), (13, 49), (14, 0), (14, 1), (14, 2), (14, 5), (14, 9), (14, 16), (14, 23), (14, 27), (14, 28), (14, 29), (14, 34), (14, 37), (14, 38), (14, 40), (14, 42), (14, 44), (14, 45), (16, 0), (16, 1), (16, 2), (16, 5), (16, 9), (16, 16), (16, 23), (16, 25), (16, 27), (16, 28), (16, 29), (16, 34), (16, 37), (16, 38), (16, 40), (16, 42), (16, 44), (16, 45), (19, 0), (19, 2), (19, 5), (19, 8), (19, 9), (19, 16), (19, 23), (19, 27), (19, 28), (19, 34), (19, 37), (19, 38), (19, 40), (19, 42), (19, 44), (19, 45), (21, 0), (21, 1), (21, 2), (21, 3), (21, 5), (21, 6), (21, 8), (21, 9), (21, 10), (21, 12), (21, 13), (21, 14), (21, 16), (21, 17), (21, 19), (21, 20), (21, 21), (21, 22), (21, 23), (21, 24), (21, 25), (21, 26), (21, 27), (21, 28), (21, 29), (21, 30), (21, 31), (21, 32), (21, 33), (21, 34), (21, 35), (21, 36), (21, 37), (21, 38), (21, 39), (21, 40), (21, 41), (21, 42), (21, 44), (21, 45), (21, 46), (21, 47), (21, 48), (22, 0), (22, 1), (22, 2), (22, 5), (22, 9), (22, 16), (22, 21), (22, 23), (22, 26), (22, 27), (22, 28), (22, 29), (22, 34), (22, 37), (22, 38), (22, 40), (22, 42), (22, 44), (22, 45), (23, 0), (23, 2), (23, 3), (23, 4), (23, 6), (23, 7), (23, 8), (23, 9), (23, 10), (23, 12), (23, 13), (23, 14), (23, 16), (23, 17), (23, 20), (23, 21), (23, 22), (23, 23), (23, 24), (23, 25), (23, 26), (23, 27), (23, 28), (23, 29), (23, 30), (23, 31), (23, 33), (23, 34), (23, 35), (23, 36), (23, 37), (23, 38), (23, 39), (23, 40), (23, 41), (23, 42), (23, 44), (23, 45), (23, 46), (23, 47), (23, 48), (23, 49), (24, 0), (24, 1), (24, 2), (24, 5), (24, 9), (24, 16), (24, 17), (24, 19), (24, 20), (24, 23), (24, 27), (24, 29), (24, 34), (24, 37), (24, 38), (24, 40), (24, 42), (24, 44), (27, 0), (27, 1), (27, 2), (27, 5), (27, 9), (27, 16), (27, 23), (27, 27), (27, 29), (27, 37), (27, 38), (27, 40), (27, 41), (27, 42), (27, 44), (27, 45), (27, 48), (28, 0), (28, 1), (28, 2), (28, 3), (28, 4), (28, 5), (28, 7), (28, 8), (28, 9), (28, 10), (28, 12), (28, 13), (28, 14), (28, 16), (28, 17), (28, 19), (28, 20), (28, 21), (28, 22), (28, 23), (28, 24), (28, 26), (28, 27), (28, 28), (28, 29), (28, 30), (28, 31), (28, 32), (28, 33), (28, 34), (28, 35), (28, 36), (28, 37), (28, 38), (28, 39), (28, 40), (28, 41), (28, 42), (28, 44), (28, 46), (28, 47), (28, 48), (28, 49), (29, 0), (29, 1), (29, 2), (29, 5), (29, 9), (29, 16), (29, 23), (29, 27), (29, 28), (29, 29), (29, 34), (29, 37), (29, 38), (29, 40), (29, 42), (29, 44), (29, 45), (31, 0), (31, 1), (31, 2), (31, 3), (31, 4), (31, 5), (31, 6), (31, 7), (31, 8), (31, 9), (31, 10), (31, 13), (31, 14), (31, 16), (31, 17), (31, 19), (31, 21), (31, 22), (31, 23), (31, 24), (31, 25), (31, 26), (31, 27), (31, 28), (31, 30), (31, 31), (31, 32), (31, 33), (31, 34), (31, 35), (31, 37), (31, 38), (31, 39), (31, 40), (31, 41), (31, 42), (31, 44), (31, 45), (31, 46), (31, 47), (31, 48), (31, 49), (32, 0), (32, 1), (32, 2), (32, 5), (32, 9), (32, 23), (32, 26), (32, 27), (32, 29), (32, 33), (32, 34), (32, 37), (32, 38), (32, 40), (32, 42), (32, 44), (32, 45), (34, 0), (34, 1), (34, 2), (34, 5), (34, 9), (34, 16), (34, 23), (34, 27), (34, 28), (34, 29), (34, 34), (34, 36), (34, 37), (34, 38), (34, 40), (34, 42), (34, 44), (34, 45), (35, 0), (35, 1), (35, 2), (35, 5), (35, 9), (35, 12), (35, 16), (35, 23), (35, 27), (35, 28), (35, 29), (35, 34), (35, 37), (35, 38), (35, 40), (35, 42), (35, 44), (35, 45), (37, 0), (37, 1), (37, 2), (37, 5), (37, 9), (37, 16), (37, 23), (37, 27), (37, 28), (37, 29), (37, 31), (37, 34), (37, 37), (37, 38), (37, 42), (37, 44), (37, 45), (38, 0), (38, 1), (38, 2), (38, 3), (38, 4), (38, 5), (38, 6), (38, 8), (38, 9), (38, 10), (38, 12), (38, 13), (38, 14), (38, 16), (38, 17), (38, 19), (38, 20), (38, 21), (38, 22), (38, 23), (38, 24), (38, 25), (38, 26), (38, 27), (38, 28), (38, 30), (38, 31), (38, 32), (38, 33), (38, 35), (38, 36), (38, 37), (38, 39), (38, 40), (38, 41), (38, 42), (38, 44), (38, 45), (38, 46), (38, 47), (38, 48), (38, 49), (39, 0), (39, 1), (39, 2), (39, 5), (39, 7), (39, 9), (39, 16), (39, 23), (39, 27), (39, 28), (39, 29), (39, 34), (39, 37), (39, 40), (39, 42), (39, 44), (39, 45), (40, 0), (40, 1), (40, 2), (40, 5), (40, 16), (40, 24), (40, 27), (40, 28), (40, 29), (40, 34), (40, 37), (40, 38), (40, 40), (40, 42), (40, 45), (41, 0), (41, 1), (41, 2), (41, 5), (41, 9), (41, 16), (41, 23), (41, 27), (41, 28), (41, 29), (41, 34), (41, 37), (41, 38), (41, 40), (41, 42), (41, 44), (41, 45), (42, 0), (42, 1), (42, 2), (42, 9), (42, 16), (42, 23), (42, 27), (42, 28), (42, 29), (42, 34), (42, 37), (42, 38), (42, 39), (42, 40), (42, 42), (42, 44), (42, 45), (43, 0), (43, 1), (43, 2), (43, 3), (43, 4), (43, 5), (43, 6), (43, 7), (43, 8), (43, 9), (43, 10), (43, 12), (43, 13), (43, 14), (43, 16), (43, 17), (43, 19), (43, 20), (43, 21), (43, 22), (43, 23), (43, 24), (43, 25), (43, 26), (43, 28), (43, 29), (43, 30), (43, 31), (43, 32), (43, 33), (43, 34), (43, 35), (43, 36), (43, 37), (43, 38), (43, 39), (43, 40), (43, 41), (43, 42), (43, 44), (43, 45), (43, 46), (43, 47), (43, 48), (43, 49), (44, 0), (44, 1), (44, 2), (44, 5), (44, 9), (44, 12), (44, 16), (44, 23), (44, 27), (44, 28), (44, 29), (44, 32), (44, 34), (44, 37), (44, 38), (44, 40), (44, 42), (44, 44), (44, 45), (47, 0), (47, 1), (47, 2), (47, 5), (47, 6), (47, 9), (47, 16), (47, 23), (47, 27), (47, 28), (47, 29), (47, 34), (47, 37), (47, 38), (47, 40), (47, 42), (47, 44), (47, 45), (48, 0), (48, 1), (48, 2), (48, 3), (48, 4), (48, 5), (48, 6), (48, 7), (48, 8), (48, 9), (48, 10), (48, 12), (48, 13), (48, 14), (48, 16), (48, 17), (48, 20), (48, 21), (48, 22), (48, 23), (48, 24), (48, 25), (48, 26), (48, 27), (48, 28), (48, 29), (48, 30), (48, 31), (48, 32), (48, 33), (48, 34), (48, 35), (48, 36), (48, 37), (48, 39), (48, 40), (48, 41), (48, 42), (48, 44), (48, 45), (48, 46), (48, 47), (48, 48), (48, 49), (49, 0), (49, 1), (49, 2), (49, 3), (49, 4), (49, 5), (49, 6), (49, 7), (49, 9), (49, 10), (49, 12), (49, 13), (49, 14), (49, 16), (49, 17), (49, 19), (49, 20), (49, 21), (49, 22), (49, 23), (49, 24), (49, 25), (49, 26), (49, 27), (49, 28), (49, 29), (49, 30), (49, 31), (49, 32), (49, 33), (49, 34), (49, 35), (49, 36), (49, 37), (49, 38), (49, 39), (49, 40), (49, 41), (49, 44), (49, 45), (49, 46), (49, 47), (49, 48), (49, 49)]
----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 1072.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_1_M_2.csv

-- Debugging Step: checking extracted solution after solving model**** -- max_e_h
len_rows_res= 33
row_res= [1, 10, 12, 13, 14, 16, 19, 21, 22, 23, 24, 27, 28, 29, 31, 34, 35, 37, 38, 39, 4, 40, 41, 42, 43, 44, 47, 48, 49, 5, 6, 8, 9]
len_cols_res= 4
cols_res= [0, 16, 2, 37]
nb row_names_res, = 33
row_names_res = ['r2', 'r11', 'r13', 'r14', 'r15', 'r17', 'r20', 'r22', 'r23', 'r24', 'r25', 'r28', 'r29', 'r30', 'r32', 'r35', 'r36', 'r38', 'r39', 'r40', 'r5', 'r41', 'r42', 'r43', 'r44', 'r45', 'r48', 'r49', 'r50', 'r6', 'r7', 'r9', 'r10']
col_names_res = ['c1', 'c17', 'c3', 'c38']
 nb col_names_res, = 4

----------------------------------------

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.03937 - (Local CPU) 0.03937 - (Global CPU) 0.03937

 Solve status: Optimal Objective value: 1072.0 nb_rows 33 nb_cols 4
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 42), (4, 44), (5, 42), (6, 19), (8, 44), (9, 42), (10, 19), (12, 18), (13, 44), (14, 17), (16, 18), (19, 16), (21, 43), (22, 19), (23, 42), (24, 18), (27, 17), (28, 43), (29, 17), (31, 42), (32, 17), (34, 18), (35, 18), (37, 17), (38, 42), (39, 17), (40, 15), (41, 17), (42, 17), (43, 45), (44, 19), (47, 18), (48, 44), (49, 44)]
cols_data = [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (12, 15), (13, 15), (14, 13), (16, 33), (17, 14), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
rows_res_set = {1, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 19, 21, 22, 23, 24, 27, 28, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49}
cols_res_set = {0, 16, 2, 37}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {0: 34, 1: 32, 2: 34, 3: 14, 4: 14, 5: 32, 6: 13, 7: 13, 8: 13, 9: 32, 10: 14, 12: 15, 13: 15, 14: 13, 16: 33, 17: 14, 19: 13, 20: 14, 21: 15, 22: 14, 23: 32, 24: 15, 25: 13, 26: 17, 27: 33, 28: 31, 29: 29, 30: 14, 31: 16, 32: 15, 33: 15, 34: 31, 35: 13, 36: 13, 37: 34, 38: 31, 39: 15, 40: 31, 41: 15, 42: 33, 44: 30, 45: 30, 46: 14, 47: 14, 48: 16, 49: 13}
row_degree_map = {1: 42, 4: 44, 5: 42, 6: 19, 8: 44, 9: 42, 10: 19, 12: 18, 13: 44, 14: 17, 16: 18, 19: 16, 21: 43, 22: 19, 23: 42, 24: 18, 27: 17, 28: 43, 29: 17, 31: 42, 32: 17, 34: 18, 35: 18, 37: 17, 38: 42, 39: 17, 40: 15, 41: 17, 42: 17, 43: 45, 44: 19, 47: 18, 48: 44, 49: 44}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {0: 33, 1: 0, 2: 33, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 12: 0, 13: 0, 14: 0, 16: 33, 17: 0, 19: 0, 20: 0, 21: 0, 22: 0, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 33, 38: 0, 39: 0, 40: 0, 41: 0, 42: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0}
row_degree_map reduced = {1: 4, 4: 4, 5: 4, 6: 4, 8: 4, 9: 4, 10: 4, 12: 4, 13: 4, 14: 4, 16: 4, 19: 4, 21: 4, 22: 4, 23: 4, 24: 4, 27: 4, 28: 4, 29: 4, 31: 4, 32: 0, 34: 4, 35: 4, 37: 4, 38: 4, 39: 4, 40: 4, 41: 4, 42: 4, 43: 4, 44: 4, 47: 4, 48: 4, 49: 4}
cols_rem   = [(0, 33), (2, 33), (16, 33), (37, 33)]
rows_rem   = [(1, 4), (4, 4), (5, 4), (6, 4), (8, 4), (9, 4), (10, 4), (12, 4), (13, 4), (14, 4), (16, 4), (19, 4), (21, 4), (22, 4), (23, 4), (24, 4), (27, 4), (28, 4), (29, 4), (31, 4), (34, 4), (35, 4), (37, 4), (38, 4), (39, 4), (40, 4), (41, 4), (42, 4), (43, 4), (44, 4), (47, 4), (48, 4), (49, 4)]
 nb_edges_1_rem   = 132
 nb_edges_0_rem   = 0
row_rem_length= 4 col_rem_length = 33
Stats in updata_data : row_rem_length = 4 col_rem_length = 33 nb_edges_0_rem= 0 nb_edges_1_rem= 132  !!!!! density = 1.0


----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining  Rows  : 33
Number of Remaining number Columns : 4
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 132 Density : 1.0 current obj value 1072.0
----------------------------------------

----------------------------------------

Exit from the exact  approach  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 33  and cols_res of lenght = 4 and density = 1.0
 Density of the found matrix =  : 1.0
 Original Rows  : [(1, 42), (4, 44), (5, 42), (6, 19), (8, 44), (9, 42), (10, 19), (12, 18), (13, 44), (14, 17), (16, 18), (19, 16), (21, 43), (22, 19), (23, 42), (24, 18), (27, 17), (28, 43), (29, 17), (31, 42), (32, 17), (34, 18), (35, 18), (37, 17), (38, 42), (39, 17), (40, 15), (41, 17), (42, 17), (43, 45), (44, 19), (47, 18), (48, 44), (49, 44)]
 Original Cold  : [(0, 34), (1, 32), (2, 34), (3, 14), (4, 14), (5, 32), (6, 13), (7, 13), (8, 13), (9, 32), (10, 14), (12, 15), (13, 15), (14, 13), (16, 33), (17, 14), (19, 13), (20, 14), (21, 15), (22, 14), (23, 32), (24, 15), (25, 13), (26, 17), (27, 33), (28, 31), (29, 29), (30, 14), (31, 16), (32, 15), (33, 15), (34, 31), (35, 13), (36, 13), (37, 34), (38, 31), (39, 15), (40, 31), (41, 15), (42, 33), (44, 30), (45, 30), (46, 14), (47, 14), (48, 16), (49, 13)]
 Remaining Rows  : [1, 10, 12, 13, 14, 16, 19, 21, 22, 23, 24, 27, 28, 29, 31, 34, 35, 37, 38, 39, 4, 40, 41, 42, 43, 44, 47, 48, 49, 5, 6, 8, 9]
 Remaining  Cols  : [0, 16, 2, 37]
 Remaining Rows with degree : [(1, 4), (4, 4), (5, 4), (6, 4), (8, 4), (9, 4), (10, 4), (12, 4), (13, 4), (14, 4), (16, 4), (19, 4), (21, 4), (22, 4), (23, 4), (24, 4), (27, 4), (28, 4), (29, 4), (31, 4), (34, 4), (35, 4), (37, 4), (38, 4), (39, 4), (40, 4), (41, 4), (42, 4), (43, 4), (44, 4), (47, 4), (48, 4), (49, 4)]
 Remaining  Cols with degree : [(0, 33), (2, 33), (16, 33), (37, 33)]
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 2
        with delta =  0.0
        Found matrix of size : (33, 4)
        and density : 1.0
        and # of ones : 132
        and Heuristic QBC time   : 0.03937
        and Global QBC  time  : 0.03937
        
 Remaining Rows  : [(1, 4), (4, 4), (5, 4), (6, 4), (8, 4), (9, 4), (10, 4), (12, 4), (13, 4), (14, 4), (16, 4), (19, 4), (21, 4), (22, 4), (23, 4), (24, 4), (27, 4), (28, 4), (29, 4), (31, 4), (34, 4), (35, 4), (37, 4), (38, 4), (39, 4), (40, 4), (41, 4), (42, 4), (43, 4), (44, 4), (47, 4), (48, 4), (49, 4)]
 Remaining  Cols  : [(0, 33), (2, 33), (16, 33), (37, 33)]

----------------------------------------------------------------------
 
    End of computations for matrix 2 in  data/data3.csv at level 1 and debug  4
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (33,4), with  density : 1.0 and number of ones: 132
    Global Time (in sec): 0.053
    Total Time in QBC approaches: 0.039
    Time in greedy approach: 0.014,  size of matrix found by greedy : (34,46) 
    With density : 0.610 and # ones : 954 
    Time in heuristic only : 0.039 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 26.24% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.57
    
----------------------------------------------------------------------

 ***Solution Rows indices : [1, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 19, 21, 22, 23, 24, 27, 28, 29, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49]
 ***Solution Cols indices : [0, 2, 16, 37]
 Remaining Rows with degree : [(1, 4), (4, 4), (5, 4), (6, 4), (8, 4), (9, 4), (10, 4), (12, 4), (13, 4), (14, 4), (16, 4), (19, 4), (21, 4), (22, 4), (23, 4), (24, 4), (27, 4), (28, 4), (29, 4), (31, 4), (34, 4), (35, 4), (37, 4), (38, 4), (39, 4), (40, 4), (41, 4), (42, 4), (43, 4), (44, 4), (47, 4), (48, 4), (49, 4)]
 Remaining Cols with degree : [(0, 33), (2, 33), (16, 33), (37, 33)]

 Level 0, Matrix 4:
Size Rows: 6
Size Cols: 50

 Level 0 Matrix  5:
Size Rows: 39
Size Cols: 46

 Level 0  Matrix 4 Rows: [(3, 37), (17, 34), (18, 35), (25, 34), (30, 36), (32, 33)]
Level  0  Matrix 4 Cols: [(0, 0), (1, 3), (2, 0), (3, 6), (4, 6), (5, 0), (6, 6), (7, 6), (8, 6), (9, 0), (10, 6), (11, 6), (12, 5), (13, 6), (14, 6), (15, 6), (16, 2), (17, 6), (18, 6), (19, 6), (20, 6), (21, 6), (22, 6), (23, 2), (24, 6), (25, 6), (26, 5), (27, 1), (28, 1), (29, 1), (30, 6), (31, 6), (32, 6), (33, 5), (34, 1), (35, 6), (36, 6), (37, 0), (38, 0), (39, 6), (40, 0), (41, 6), (42, 2), (43, 6), (44, 0), (45, 1), (46, 6), (47, 6), (48, 6), (49, 6)]

 Level  0  Matrix 5 Rows: [(1, 4), (3, 37), (4, 3), (5, 4), (6, 31), (8, 2), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 34), (19, 33), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (27, 33), (28, 3), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (43, 2), (44, 31), (47, 32), (48, 3), (49, 2)]
Level 0  Matrix 5 Cols: [(1, 5), (3, 25), (4, 25), (5, 2), (6, 26), (7, 26), (8, 26), (9, 2), (10, 25), (11, 27), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 3), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (40, 3), (41, 24), (42, 3), (43, 26), (44, 4), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)]

----------------------------------------------------------------------
***Stats Current Input for matrix 4 in  data/data3.csv at level 0 and with model:  max_e_c***
Size of current matrix :  6 * 50 = 300 ; dec_conq: 0
number input zeros :  91 ; number input ones :  209
rho =  0.1 ; delta :  0.0
Input density : 0.697 ; density_threshold: 0.57000
End Current  Stats
----------------------------------------------------------------------

----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

 Start exact approaches with :
rows_in = [(3, 37), (17, 34), (18, 35), (25, 34), (30, 36), (32, 33)]
cols_in = [(0, 0), (1, 3), (2, 0), (3, 6), (4, 6), (5, 0), (6, 6), (7, 6), (8, 6), (9, 0), (10, 6), (11, 6), (12, 5), (13, 6), (14, 6), (15, 6), (16, 2), (17, 6), (18, 6), (19, 6), (20, 6), (21, 6), (22, 6), (23, 2), (24, 6), (25, 6), (26, 5), (27, 1), (28, 1), (29, 1), (30, 6), (31, 6), (32, 6), (33, 5), (34, 1), (35, 6), (36, 6), (37, 0), (38, 0), (39, 6), (40, 0), (41, 6), (42, 2), (43, 6), (44, 0), (45, 1), (46, 6), (47, 6), (48, 6), (49, 6)]
row_names_in = Index(['r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 'r10', 'r11',
       'r12', 'r13', 'r14', 'r15', 'r16', 'r17', 'r18', 'r19', 'r20', 'r21',
       'r22', 'r23', 'r24', 'r25', 'r26', 'r27', 'r28', 'r29', 'r30', 'r31',
       'r32', 'r33', 'r34', 'r35', 'r36', 'r37', 'r38', 'r39', 'r40', 'r41',
       'r42', 'r43', 'r44', 'r45', 'r46', 'r47', 'r48', 'r49', 'r50'],
      dtype='object')
col_names_in = Index(['c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'c10', 'c11',
       'c12', 'c13', 'c14', 'c15', 'c16', 'c17', 'c18', 'c19', 'c20', 'c21',
       'c22', 'c23', 'c24', 'c25', 'c26', 'c27', 'c28', 'c29', 'c30', 'c31',
       'c32', 'c33', 'c34', 'c35', 'c36', 'c37', 'c38', 'c39', 'c40', 'c41',
       'c42', 'c43', 'c44', 'c45', 'c46', 'c47', 'c48', 'c49', 'c50'],
      dtype='object')
edges_1_in = [(3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 42), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 27), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 42), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 1), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 16), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (25, 1), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (30, 1), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (32, 3), (32, 4), (32, 6), (32, 7), (32, 8), (32, 10), (32, 11), (32, 12), (32, 13), (32, 14), (32, 15), (32, 16), (32, 17), (32, 18), (32, 19), (32, 20), (32, 21), (32, 22), (32, 24), (32, 25), (32, 28), (32, 30), (32, 31), (32, 32), (32, 35), (32, 36), (32, 39), (32, 41), (32, 43), (32, 46), (32, 47), (32, 48), (32, 49)]
----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 389.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_0_M_4.csv

-- Debugging Step: checking extracted solution after solving model**** -- max_e_h
len_rows_res= 6
row_res= [17, 18, 25, 3, 30, 32]
len_cols_res= 30
cols_res= [10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 3, 30, 31, 32, 35, 36, 39, 4, 41, 43, 46, 47, 48, 49, 6, 7, 8]
nb row_names_res, = 6
row_names_res = ['r18', 'r19', 'r26', 'r4', 'r31', 'r33']
col_names_res = ['c11', 'c12', 'c14', 'c15', 'c16', 'c18', 'c19', 'c20', 'c21', 'c22', 'c23', 'c25', 'c26', 'c4', 'c31', 'c32', 'c33', 'c36', 'c37', 'c40', 'c5', 'c42', 'c44', 'c47', 'c48', 'c49', 'c50', 'c7', 'c8', 'c9']
 nb col_names_res, = 30

----------------------------------------

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.00900 - (Local CPU) 0.00900 - (Global CPU) 0.00900

 Solve status: Optimal Objective value: 389.0 nb_rows 6 nb_cols 30
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(3, 37), (17, 34), (18, 35), (25, 34), (30, 36), (32, 33)]
cols_data = [(0, 0), (1, 3), (2, 0), (3, 6), (4, 6), (5, 0), (6, 6), (7, 6), (8, 6), (9, 0), (10, 6), (11, 6), (12, 5), (13, 6), (14, 6), (15, 6), (16, 2), (17, 6), (18, 6), (19, 6), (20, 6), (21, 6), (22, 6), (23, 2), (24, 6), (25, 6), (26, 5), (27, 1), (28, 1), (29, 1), (30, 6), (31, 6), (32, 6), (33, 5), (34, 1), (35, 6), (36, 6), (37, 0), (38, 0), (39, 6), (40, 0), (41, 6), (42, 2), (43, 6), (44, 0), (45, 1), (46, 6), (47, 6), (48, 6), (49, 6)]
rows_res_set = {32, 3, 17, 18, 25, 30}
cols_res_set = {3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 30, 31, 32, 35, 36, 39, 41, 43, 46, 47, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {0: 0, 1: 3, 2: 0, 3: 6, 4: 6, 5: 0, 6: 6, 7: 6, 8: 6, 9: 0, 10: 6, 11: 6, 12: 5, 13: 6, 14: 6, 15: 6, 16: 2, 17: 6, 18: 6, 19: 6, 20: 6, 21: 6, 22: 6, 23: 2, 24: 6, 25: 6, 26: 5, 27: 1, 28: 1, 29: 1, 30: 6, 31: 6, 32: 6, 33: 5, 34: 1, 35: 6, 36: 6, 37: 0, 38: 0, 39: 6, 40: 0, 41: 6, 42: 2, 43: 6, 44: 0, 45: 1, 46: 6, 47: 6, 48: 6, 49: 6}
row_degree_map = {3: 37, 17: 34, 18: 35, 25: 34, 30: 36, 32: 33}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {0: 0, 1: 0, 2: 0, 3: 6, 4: 6, 5: 0, 6: 6, 7: 6, 8: 6, 9: 0, 10: 6, 11: 6, 12: 0, 13: 6, 14: 6, 15: 6, 16: 0, 17: 6, 18: 6, 19: 6, 20: 6, 21: 6, 22: 6, 23: 0, 24: 6, 25: 6, 26: 0, 27: 0, 28: 0, 29: 0, 30: 6, 31: 6, 32: 6, 33: 0, 34: 0, 35: 6, 36: 6, 37: 0, 38: 0, 39: 6, 40: 0, 41: 6, 42: 0, 43: 6, 44: 0, 45: 0, 46: 6, 47: 6, 48: 6, 49: 6}
row_degree_map reduced = {3: 30, 17: 30, 18: 30, 25: 30, 30: 30, 32: 30}
cols_rem   = [(3, 6), (4, 6), (6, 6), (7, 6), (8, 6), (10, 6), (11, 6), (13, 6), (14, 6), (15, 6), (17, 6), (18, 6), (19, 6), (20, 6), (21, 6), (22, 6), (24, 6), (25, 6), (30, 6), (31, 6), (32, 6), (35, 6), (36, 6), (39, 6), (41, 6), (43, 6), (46, 6), (47, 6), (48, 6), (49, 6)]
rows_rem   = [(3, 30), (17, 30), (18, 30), (25, 30), (30, 30), (32, 30)]
 nb_edges_1_rem   = 180
 nb_edges_0_rem   = 0
row_rem_length= 30 col_rem_length = 6
Stats in updata_data : row_rem_length = 30 col_rem_length = 6 nb_edges_0_rem= 0 nb_edges_1_rem= 180  !!!!! density = 1.0


----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining  Rows  : 6
Number of Remaining number Columns : 30
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 180 Density : 1.0 current obj value 389.0
----------------------------------------

----------------------------------------

Exit from the exact  approach  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 6  and cols_res of lenght = 30 and density = 1.0
 Density of the found matrix =  : 1.0
 Original Rows  : [(3, 37), (17, 34), (18, 35), (25, 34), (30, 36), (32, 33)]
 Original Cold  : [(0, 0), (1, 3), (2, 0), (3, 6), (4, 6), (5, 0), (6, 6), (7, 6), (8, 6), (9, 0), (10, 6), (11, 6), (12, 5), (13, 6), (14, 6), (15, 6), (16, 2), (17, 6), (18, 6), (19, 6), (20, 6), (21, 6), (22, 6), (23, 2), (24, 6), (25, 6), (26, 5), (27, 1), (28, 1), (29, 1), (30, 6), (31, 6), (32, 6), (33, 5), (34, 1), (35, 6), (36, 6), (37, 0), (38, 0), (39, 6), (40, 0), (41, 6), (42, 2), (43, 6), (44, 0), (45, 1), (46, 6), (47, 6), (48, 6), (49, 6)]
 Remaining Rows  : [17, 18, 25, 3, 30, 32]
 Remaining  Cols  : [10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 3, 30, 31, 32, 35, 36, 39, 4, 41, 43, 46, 47, 48, 49, 6, 7, 8]
 Remaining Rows with degree : [(3, 30), (17, 30), (18, 30), (25, 30), (30, 30), (32, 30)]
 Remaining  Cols with degree : [(3, 6), (4, 6), (6, 6), (7, 6), (8, 6), (10, 6), (11, 6), (13, 6), (14, 6), (15, 6), (17, 6), (18, 6), (19, 6), (20, 6), (21, 6), (22, 6), (24, 6), (25, 6), (30, 6), (31, 6), (32, 6), (35, 6), (36, 6), (39, 6), (41, 6), (43, 6), (46, 6), (47, 6), (48, 6), (49, 6)]
 !!!!!!!!!!!!!!!!!! I got a lower bound  180

 Initial point before solving:
ROWS: {3: 1, 17: 1, 18: 1, 25: 1, 30: 1, 32: 1}
COLS: {0: 0, 1: 0, 2: 0, 3: 1, 4: 1, 5: 0, 6: 1, 7: 1, 8: 1, 9: 0, 10: 1, 11: 1, 12: 0, 13: 1, 14: 1, 15: 1, 16: 0, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1, 22: 1, 23: 0, 24: 1, 25: 1, 26: 0, 27: 0, 28: 0, 29: 0, 30: 1, 31: 1, 32: 1, 33: 0, 34: 0, 35: 1, 36: 1, 37: 0, 38: 0, 39: 1, 40: 0, 41: 1, 42: 0, 43: 1, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1}
CELLS: {(3, 3): 1, (3, 4): 1, (3, 6): 1, (3, 7): 1, (3, 8): 1, (3, 10): 1, (3, 11): 1, (3, 12): 1, (3, 13): 1, (3, 14): 1, (3, 15): 1, (3, 17): 1, (3, 18): 1, (3, 19): 1, (3, 20): 1, (3, 21): 1, (3, 22): 1, (3, 23): 1, (3, 24): 1, (3, 25): 1, (3, 26): 1, (3, 30): 1, (3, 31): 1, (3, 32): 1, (3, 33): 1, (3, 34): 1, (3, 35): 1, (3, 36): 1, (3, 39): 1, (3, 41): 1, (3, 42): 1, (3, 43): 1, (3, 45): 1, (3, 46): 1, (3, 47): 1, (3, 48): 1, (3, 49): 1, (17, 3): 1, (17, 4): 1, (17, 6): 1, (17, 7): 1, (17, 8): 1, (17, 10): 1, (17, 11): 1, (17, 13): 1, (17, 14): 1, (17, 15): 1, (17, 17): 1, (17, 18): 1, (17, 19): 1, (17, 20): 1, (17, 21): 1, (17, 22): 1, (17, 24): 1, (17, 25): 1, (17, 26): 1, (17, 27): 1, (17, 30): 1, (17, 31): 1, (17, 32): 1, (17, 33): 1, (17, 35): 1, (17, 36): 1, (17, 39): 1, (17, 41): 1, (17, 42): 1, (17, 43): 1, (17, 46): 1, (17, 47): 1, (17, 48): 1, (17, 49): 1, (18, 1): 1, (18, 3): 1, (18, 4): 1, (18, 6): 1, (18, 7): 1, (18, 8): 1, (18, 10): 1, (18, 11): 1, (18, 12): 1, (18, 13): 1, (18, 14): 1, (18, 15): 1, (18, 16): 1, (18, 17): 1, (18, 18): 1, (18, 19): 1, (18, 20): 1, (18, 21): 1, (18, 22): 1, (18, 24): 1, (18, 25): 1, (18, 26): 1, (18, 30): 1, (18, 31): 1, (18, 32): 1, (18, 33): 1, (18, 35): 1, (18, 36): 1, (18, 39): 1, (18, 41): 1, (18, 43): 1, (18, 46): 1, (18, 47): 1, (18, 48): 1, (18, 49): 1, (25, 1): 1, (25, 3): 1, (25, 4): 1, (25, 6): 1, (25, 7): 1, (25, 8): 1, (25, 10): 1, (25, 11): 1, (25, 12): 1, (25, 13): 1, (25, 14): 1, (25, 15): 1, (25, 17): 1, (25, 18): 1, (25, 19): 1, (25, 20): 1, (25, 21): 1, (25, 22): 1, (25, 24): 1, (25, 25): 1, (25, 26): 1, (25, 30): 1, (25, 31): 1, (25, 32): 1, (25, 33): 1, (25, 35): 1, (25, 36): 1, (25, 39): 1, (25, 41): 1, (25, 43): 1, (25, 46): 1, (25, 47): 1, (25, 48): 1, (25, 49): 1, (30, 1): 1, (30, 3): 1, (30, 4): 1, (30, 6): 1, (30, 7): 1, (30, 8): 1, (30, 10): 1, (30, 11): 1, (30, 12): 1, (30, 13): 1, (30, 14): 1, (30, 15): 1, (30, 17): 1, (30, 18): 1, (30, 19): 1, (30, 20): 1, (30, 21): 1, (30, 22): 1, (30, 23): 1, (30, 24): 1, (30, 25): 1, (30, 26): 1, (30, 29): 1, (30, 30): 1, (30, 31): 1, (30, 32): 1, (30, 33): 1, (30, 35): 1, (30, 36): 1, (30, 39): 1, (30, 41): 1, (30, 43): 1, (30, 46): 1, (30, 47): 1, (30, 48): 1, (30, 49): 1, (32, 3): 1, (32, 4): 1, (32, 6): 1, (32, 7): 1, (32, 8): 1, (32, 10): 1, (32, 11): 1, (32, 12): 1, (32, 13): 1, (32, 14): 1, (32, 15): 1, (32, 16): 1, (32, 17): 1, (32, 18): 1, (32, 19): 1, (32, 20): 1, (32, 21): 1, (32, 22): 1, (32, 24): 1, (32, 25): 1, (32, 28): 1, (32, 30): 1, (32, 31): 1, (32, 32): 1, (32, 35): 1, (32, 36): 1, (32, 39): 1, (32, 41): 1, (32, 43): 1, (32, 46): 1, (32, 47): 1, (32, 48): 1, (32, 49): 1}

----------------------------------------
******** Solving model  ******** max_e_wr  with delta =  0.0
 # rows_data = 6  # cols_data = 50  # edges = 209
row_threshold= 2
col_threshold= 2

----------------------------------------
----------------------------------------------------------------------
Model status: Not Solved
----------------------------------------------------------------------
Model status: Not Solved

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 0.00963 - (Local CPU) 0.00963 - (Global CPU) 0.01863

 Solve status: Not Solved Objective value: 209 nb_rows 6 nb_cols 30
----------------------------------------
*****Model in warm start is infeasible.!!!*** 
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 4
        with delta =  0.0
        Found matrix of size : (6, 30)
        and density : 1.0
        and # of ones : 180
        and Heuristic QBC time   : 0.00900
        and Global QBC  time  : 0.01863
        
 Remaining Rows  : [(3, 30), (17, 30), (18, 30), (25, 30), (30, 30), (32, 30)]
 Remaining  Cols  : [(3, 6), (4, 6), (6, 6), (7, 6), (8, 6), (10, 6), (11, 6), (13, 6), (14, 6), (15, 6), (17, 6), (18, 6), (19, 6), (20, 6), (21, 6), (22, 6), (24, 6), (25, 6), (30, 6), (31, 6), (32, 6), (35, 6), (36, 6), (39, 6), (41, 6), (43, 6), (46, 6), (47, 6), (48, 6), (49, 6)]

----------------------------------------------------------------------
 
    End of computations for matrix 4 in  data/data3.csv at level 0 and debug  4
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (6,30), with  density : 1.0 and number of ones: 180
    Global Time (in sec): 0.033
    Total Time in QBC approaches: 0.019
    Time in greedy approach: 0.014,  size of matrix found by greedy : (0,0) 
    With density : 0.000 and # ones : 0 
    Time in heuristic only : 0.009 
    Time in warm start only : 0.010
    Number of iterations in greedy approach: 0
    Percentage of greedy approach run time in global run time : 42.92% 
    Percentage of heuristic run time in QBC run time : 48.31%
    With zero deletion rate (rho): 0.1 and threshold: 0.57
    
----------------------------------------------------------------------

 ***Solution Rows indices : [3, 17, 18, 25, 30, 32]
 ***Solution Cols indices : [3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 30, 31, 32, 35, 36, 39, 41, 43, 46, 47, 48, 49]
 Remaining Rows with degree : [(3, 30), (17, 30), (18, 30), (25, 30), (30, 30), (32, 30)]
 Remaining Cols with degree : [(3, 6), (4, 6), (6, 6), (7, 6), (8, 6), (10, 6), (11, 6), (13, 6), (14, 6), (15, 6), (17, 6), (18, 6), (19, 6), (20, 6), (21, 6), (22, 6), (24, 6), (25, 6), (30, 6), (31, 6), (32, 6), (35, 6), (36, 6), (39, 6), (41, 6), (43, 6), (46, 6), (47, 6), (48, 6), (49, 6)]
 Return from 4 with winning node = 4

----------------------------------------------------------------------
***Stats Current Input for matrix 5 in  data/data3.csv at level 0 and with model:  max_e_c***
Size of current matrix :  39 * 46 = 1794 ; dec_conq: 0
number input zeros :  924 ; number input ones :  870
rho =  0.1 ; delta :  0.0
Input density : 0.485 ; density_threshold: 0.57000
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.485 density  and density_threshold= 0.570


I am in the while loop with i= 1 density= 0.48494983277591974 and fixed_threshold= 0.57

I am currently solving row KP_QBr with Input data : ***************

edges = 1608 rho= 0.1 number of columns = 46 number of rows = 39 total_degree_0= 924 RHS= 160.8
----------------------------------------
Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  8.009302325581396
I solved model name = row_knapsack_problem for iteration i =  1 KP time = 0.014008541009388864 debug : 4

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00514 - (Local CPU) 0.00514 - (Global CPU) 0.01915

 Solve status: Optimal Objective value: 8.009302325581396 nb_rows 35 nb_cols 46
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 4), (3, 37), (4, 3), (5, 4), (6, 31), (8, 2), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 34), (19, 33), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (27, 33), (28, 3), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (43, 2), (44, 31), (47, 32), (48, 3), (49, 2)]
cols_data = [(1, 5), (3, 25), (4, 25), (5, 2), (6, 26), (7, 26), (8, 26), (9, 2), (10, 25), (11, 27), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 3), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (40, 3), (41, 24), (42, 3), (43, 26), (44, 4), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)]

rows_res_set = {1, 3, 4, 5, 6, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48}
cols_res_set = {1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {1: 5, 3: 25, 4: 25, 5: 2, 6: 26, 7: 26, 8: 26, 9: 2, 10: 25, 11: 27, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 27, 19: 26, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 26, 26: 22, 27: 2, 28: 3, 29: 6, 30: 25, 31: 23, 32: 24, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 40: 3, 41: 24, 42: 3, 43: 26, 44: 4, 45: 5, 46: 25, 47: 25, 48: 23, 49: 26}
row_degree_map = {1: 4, 3: 37, 4: 3, 5: 4, 6: 31, 8: 2, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 34, 18: 34, 19: 33, 21: 4, 22: 31, 23: 4, 24: 32, 25: 34, 27: 33, 28: 3, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 33, 38: 5, 39: 33, 40: 34, 41: 33, 42: 33, 43: 2, 44: 31, 47: 32, 48: 3, 49: 2}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {1: 5, 3: 25, 4: 25, 5: 2, 6: 25, 7: 26, 8: 25, 9: 2, 10: 25, 11: 26, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 27, 19: 26, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 25, 26: 22, 27: 1, 28: 3, 29: 5, 30: 25, 31: 23, 32: 24, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 40: 2, 41: 24, 42: 2, 43: 26, 44: 4, 45: 4, 46: 25, 47: 25, 48: 23, 49: 26}

row_degree_map reduced = {1: 4, 3: 37, 4: 3, 5: 4, 6: 31, 8: 0, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 34, 18: 34, 19: 33, 21: 4, 22: 31, 23: 4, 24: 32, 25: 34, 27: 33, 28: 0, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 33, 38: 5, 39: 33, 40: 34, 41: 33, 42: 33, 43: 0, 44: 31, 47: 32, 48: 3, 49: 0}

cols_rem   = [(1, 5), (3, 25), (4, 25), (5, 2), (6, 25), (7, 26), (8, 25), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (27, 1), (28, 3), (29, 5), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (40, 2), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
rows_rem   = [(1, 4), (3, 37), (4, 3), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 34), (19, 33), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (44, 31), (47, 32), (48, 3)]
 nb_edges_1_rem   = 861
 nb_edges_0_rem   = 749
row_rem_length= 46 col_rem_length = 35
Stats in updata_data : row_rem_length = 46 col_rem_length = 35 nb_edges_0_rem= 749 nb_edges_1_rem= 861  !!!!! density = 0.5347826086956522

----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (35, 46) and density : 0.5347826086956522 and number of remaining ones : 861
        
Remaining  Rows before colling KP col : [(1, 4), (3, 37), (4, 3), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 34), (19, 33), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (44, 31), (47, 32), (48, 3)]
Remaining Columns  before colling KP col : [(1, 5), (3, 25), (4, 25), (5, 2), (6, 25), (7, 26), (8, 25), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (27, 1), (28, 3), (29, 5), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (40, 2), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(1, 5), (3, 25), (4, 25), (5, 2), (6, 25), (7, 26), (8, 25), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (27, 1), (28, 3), (29, 5), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (40, 2), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
nb_edges_0 = 749 rho= 0.1 # of rows = 35 # of columns= 46 total_degree_0= 749 RHS= 74.9
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00524 - (Local CPU) 0.00525 - (Global CPU) 0.02440

 Solve status: Optimal Objective value: 3.478787878787879 nb_rows 35 nb_cols 43
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 4), (3, 37), (4, 3), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 34), (19, 33), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (44, 31), (47, 32), (48, 3)]
cols_data = [(1, 5), (3, 25), (4, 25), (5, 2), (6, 25), (7, 26), (8, 25), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (27, 1), (28, 3), (29, 5), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (40, 2), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
rows_res_set = {1, 3, 4, 5, 6, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48}
cols_res_set = {1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {1: 5, 3: 25, 4: 25, 5: 2, 6: 25, 7: 26, 8: 25, 9: 2, 10: 25, 11: 26, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 27, 19: 26, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 25, 26: 22, 27: 1, 28: 3, 29: 5, 30: 25, 31: 23, 32: 24, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 40: 2, 41: 24, 42: 2, 43: 26, 44: 4, 45: 4, 46: 25, 47: 25, 48: 23, 49: 26}
row_degree_map = {1: 4, 3: 37, 4: 3, 5: 4, 6: 31, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 34, 18: 34, 19: 33, 21: 4, 22: 31, 23: 4, 24: 32, 25: 34, 27: 33, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 33, 38: 5, 39: 33, 40: 34, 41: 33, 42: 33, 44: 31, 47: 32, 48: 3}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {1: 5, 3: 25, 4: 25, 5: 0, 6: 25, 7: 26, 8: 25, 9: 2, 10: 25, 11: 26, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 27, 19: 26, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 25, 26: 22, 27: 0, 28: 3, 29: 5, 30: 25, 31: 23, 32: 24, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 40: 0, 41: 24, 42: 2, 43: 26, 44: 4, 45: 4, 46: 25, 47: 25, 48: 23, 49: 26}
row_degree_map reduced = {1: 4, 3: 37, 4: 2, 5: 4, 6: 31, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 33, 18: 34, 19: 33, 21: 4, 22: 31, 23: 3, 24: 32, 25: 34, 27: 33, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 32, 38: 5, 39: 33, 40: 34, 41: 33, 42: 32, 44: 31, 47: 32, 48: 3}
cols_rem   = [(1, 5), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
rows_rem   = [(1, 4), (3, 37), (4, 2), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 33), (18, 34), (19, 33), (21, 4), (22, 31), (23, 3), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 34), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
 nb_edges_1_rem   = 856
 nb_edges_0_rem   = 649
row_rem_length= 43 col_rem_length = 35
Stats in updata_data : row_rem_length = 43 col_rem_length = 35 nb_edges_0_rem= 649 nb_edges_1_rem= 856  !!!!! density = 0.5687707641196014

----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (35, 43) and density : 0.5687707641196014 and number of remaining ones : 861
        

----------------------------------------
Remaining  Rows before colling KP col : [(1, 4), (3, 37), (4, 2), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 33), (18, 34), (19, 33), (21, 4), (22, 31), (23, 3), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 34), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
Remaining Columns  before colling KP col : [(1, 5), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
----------------------------------------


calling greedy approaches for zero deletion, density= 0.569 density  and density_threshold= 0.570


I am in the while loop with i= 2 density= 0.5687707641196014 and fixed_threshold= 0.57

I am currently solving row KP_QBr with Input data : ***************

edges = 649 rho= 0.1 number of columns = 43 number of rows = 35 total_degree_0= 649 RHS= 64.9
----------------------------------------
Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  3.7925000000000004
I solved model name = row_knapsack_problem for iteration i =  2 KP time = 0.02439654100453481 debug : 4

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00495 - (Local CPU) 0.00495 - (Global CPU) 0.02935

 Solve status: Optimal Objective value: 3.7925000000000004 nb_rows 33 nb_cols 43
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 4), (3, 37), (4, 2), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 33), (18, 34), (19, 33), (21, 4), (22, 31), (23, 3), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 34), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
cols_data = [(1, 5), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 27), (19, 26), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
rows_res_set = {1, 3, 5, 6, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48}
cols_res_set = {1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {1: 5, 3: 25, 4: 25, 6: 25, 7: 26, 8: 25, 9: 2, 10: 25, 11: 26, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 27, 19: 26, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 25, 26: 22, 28: 3, 29: 5, 30: 25, 31: 23, 32: 24, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 41: 24, 42: 2, 43: 26, 44: 4, 45: 4, 46: 25, 47: 25, 48: 23, 49: 26}
row_degree_map = {1: 4, 3: 37, 4: 2, 5: 4, 6: 31, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 33, 18: 34, 19: 33, 21: 4, 22: 31, 23: 3, 24: 32, 25: 34, 27: 33, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 32, 38: 5, 39: 33, 40: 34, 41: 33, 42: 32, 44: 31, 47: 32, 48: 3}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {1: 4, 3: 25, 4: 25, 6: 25, 7: 26, 8: 25, 9: 1, 10: 25, 11: 26, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 26, 19: 25, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 25, 26: 22, 28: 3, 29: 5, 30: 25, 31: 23, 32: 23, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 41: 24, 42: 2, 43: 26, 44: 4, 45: 4, 46: 25, 47: 25, 48: 23, 49: 26}
row_degree_map reduced = {1: 4, 3: 37, 4: 0, 5: 4, 6: 31, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 33, 18: 34, 19: 33, 21: 4, 22: 31, 23: 0, 24: 32, 25: 34, 27: 33, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 32, 38: 5, 39: 33, 40: 34, 41: 33, 42: 32, 44: 31, 47: 32, 48: 3}
cols_rem   = [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 1), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
rows_rem   = [(1, 4), (3, 37), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 33), (18, 34), (19, 33), (21, 4), (22, 31), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 34), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
 nb_edges_1_rem   = 851
 nb_edges_0_rem   = 568
row_rem_length= 43 col_rem_length = 33
Stats in updata_data : row_rem_length = 43 col_rem_length = 33 nb_edges_0_rem= 568 nb_edges_1_rem= 851  !!!!! density = 0.5997181113460183

----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 43) and density : 0.5997181113460183 and number of remaining ones : 851
        
Remaining  Rows before colling KP col : [(1, 4), (3, 37), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 33), (18, 34), (19, 33), (21, 4), (22, 31), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 34), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
Remaining Columns  before colling KP col : [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 1), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 1), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
nb_edges_0 = 568 rho= 0.1 # of rows = 33 # of columns= 43 total_degree_0= 568 RHS= 56.800000000000004
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00513 - (Local CPU) 0.00513 - (Global CPU) 0.03448

 Solve status: Optimal Objective value: 2.5999999999999996 nb_rows 33 nb_cols 41
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 4), (3, 37), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 33), (18, 34), (19, 33), (21, 4), (22, 31), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 34), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
cols_data = [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 1), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (42, 2), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
rows_res_set = {1, 3, 5, 6, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 48}
cols_res_set = {1, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {1: 4, 3: 25, 4: 25, 6: 25, 7: 26, 8: 25, 9: 1, 10: 25, 11: 26, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 26, 19: 25, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 25, 26: 22, 28: 3, 29: 5, 30: 25, 31: 23, 32: 23, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 41: 24, 42: 2, 43: 26, 44: 4, 45: 4, 46: 25, 47: 25, 48: 23, 49: 26}
row_degree_map = {1: 4, 3: 37, 5: 4, 6: 31, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 33, 18: 34, 19: 33, 21: 4, 22: 31, 24: 32, 25: 34, 27: 33, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 32, 38: 5, 39: 33, 40: 34, 41: 33, 42: 32, 44: 31, 47: 32, 48: 3}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {1: 4, 3: 25, 4: 25, 6: 25, 7: 26, 8: 25, 9: 0, 10: 25, 11: 26, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 26, 19: 25, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 25, 26: 22, 28: 3, 29: 5, 30: 25, 31: 23, 32: 23, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 41: 24, 42: 0, 43: 26, 44: 4, 45: 4, 46: 25, 47: 25, 48: 23, 49: 26}
row_degree_map reduced = {1: 4, 3: 36, 5: 4, 6: 31, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 32, 18: 34, 19: 33, 21: 4, 22: 31, 24: 32, 25: 34, 27: 33, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 32, 38: 5, 39: 33, 40: 33, 41: 33, 42: 32, 44: 31, 47: 32, 48: 3}
cols_rem   = [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
rows_rem   = [(1, 4), (3, 36), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 32), (18, 34), (19, 33), (21, 4), (22, 31), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 33), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
 nb_edges_1_rem   = 848
 nb_edges_0_rem   = 505
row_rem_length= 41 col_rem_length = 33
Stats in updata_data : row_rem_length = 41 col_rem_length = 33 nb_edges_0_rem= 505 nb_edges_1_rem= 848  !!!!! density = 0.6267553584626755

----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 41) and density : 0.6267553584626755 and number of remaining ones : 851
        

----------------------------------------
Remaining  Rows before colling KP col : [(1, 4), (3, 36), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 32), (18, 34), (19, 33), (21, 4), (22, 31), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 33), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
Remaining Columns  before colling KP col : [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 2 iterations
            Density : 0.627 > 0.57
            It took me : 0.034 time
            Found matrix of size : (33, 41) and density : 0.627
            
----------------------------------------
edges_1_in = [(1, 6), (1, 14), (1, 17), (1, 44), (3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (5, 34), (5, 36), (5, 44), (5, 45), (6, 3), (6, 4), (6, 6), (6, 7), (6, 8), (6, 10), (6, 11), (6, 12), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (6, 22), (6, 24), (6, 25), (6, 26), (6, 30), (6, 32), (6, 33), (6, 35), (6, 36), (6, 39), (6, 41), (6, 43), (6, 46), (6, 47), (6, 48), (6, 49), (9, 8), (9, 18), (9, 23), (9, 25), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 10), (10, 11), (10, 12), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 20), (10, 21), (10, 22), (10, 24), (10, 25), (10, 26), (10, 30), (10, 31), (10, 32), (10, 33), (10, 35), (10, 36), (10, 39), (10, 41), (10, 43), (10, 46), (10, 47), (10, 49), (12, 3), (12, 4), (12, 6), (12, 7), (12, 8), (12, 10), (12, 11), (12, 12), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 20), (12, 21), (12, 22), (12, 24), (12, 25), (12, 29), (12, 30), (12, 31), (12, 33), (12, 35), (12, 36), (12, 39), (12, 41), (12, 43), (12, 46), (12, 47), (12, 48), (12, 49), (13, 15), (13, 43), (13, 44), (13, 45), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 24), (14, 25), (14, 26), (14, 30), (14, 31), (14, 32), (14, 33), (14, 35), (14, 36), (14, 39), (14, 41), (14, 43), (14, 46), (14, 47), (14, 48), (14, 49), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 20), (16, 21), (16, 22), (16, 24), (16, 26), (16, 30), (16, 31), (16, 32), (16, 33), (16, 35), (16, 36), (16, 39), (16, 41), (16, 43), (16, 46), (16, 47), (16, 48), (16, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 1), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (19, 1), (19, 3), (19, 4), (19, 6), (19, 7), (19, 10), (19, 11), (19, 12), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 20), (19, 21), (19, 22), (19, 24), (19, 25), (19, 26), (19, 29), (19, 30), (19, 31), (19, 32), (19, 33), (19, 35), (19, 36), (19, 39), (19, 41), (19, 43), (19, 46), (19, 47), (19, 48), (19, 49), (21, 4), (21, 7), (21, 18), (21, 49), (22, 3), (22, 4), (22, 6), (22, 7), (22, 8), (22, 10), (22, 11), (22, 12), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 20), (22, 22), (22, 24), (22, 25), (22, 30), (22, 31), (22, 32), (22, 33), (22, 35), (22, 36), (22, 39), (22, 41), (22, 43), (22, 46), (22, 47), (22, 48), (22, 49), (24, 3), (24, 4), (24, 6), (24, 7), (24, 8), (24, 10), (24, 11), (24, 12), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 24), (24, 25), (24, 26), (24, 28), (24, 30), (24, 31), (24, 32), (24, 33), (24, 35), (24, 36), (24, 39), (24, 41), (24, 43), (24, 45), (24, 46), (24, 47), (24, 48), (24, 49), (25, 1), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (27, 3), (27, 4), (27, 6), (27, 7), (27, 8), (27, 10), (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 20), (27, 21), (27, 22), (27, 24), (27, 25), (27, 26), (27, 28), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 39), (27, 43), (27, 46), (27, 47), (27, 49), (29, 3), (29, 4), (29, 6), (29, 7), (29, 8), (29, 10), (29, 11), (29, 12), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 20), (29, 21), (29, 22), (29, 24), (29, 25), (29, 26), (29, 30), (29, 31), (29, 32), (29, 33), (29, 35), (29, 36), (29, 39), (29, 41), (29, 43), (29, 46), (29, 47), (29, 48), (29, 49), (30, 1), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (31, 12), (31, 20), (31, 29), (31, 36), (32, 3), (32, 4), (32, 6), (32, 7), (32, 8), (32, 10), (32, 11), (32, 12), (32, 13), (32, 14), (32, 15), (32, 17), (32, 18), (32, 19), (32, 20), (32, 21), (32, 22), (32, 24), (32, 25), (32, 28), (32, 30), (32, 31), (32, 32), (32, 35), (32, 36), (32, 39), (32, 41), (32, 43), (32, 46), (32, 47), (32, 48), (32, 49), (34, 3), (34, 4), (34, 6), (34, 7), (34, 8), (34, 10), (34, 11), (34, 12), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 20), (34, 21), (34, 22), (34, 24), (34, 25), (34, 26), (34, 30), (34, 31), (34, 32), (34, 33), (34, 35), (34, 39), (34, 41), (34, 43), (34, 46), (34, 47), (34, 48), (34, 49), (35, 3), (35, 4), (35, 6), (35, 7), (35, 8), (35, 10), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 20), (35, 21), (35, 22), (35, 24), (35, 25), (35, 26), (35, 30), (35, 31), (35, 32), (35, 33), (35, 35), (35, 36), (35, 39), (35, 41), (35, 43), (35, 46), (35, 47), (35, 48), (35, 49), (37, 3), (37, 4), (37, 6), (37, 7), (37, 8), (37, 10), (37, 11), (37, 12), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 20), (37, 21), (37, 22), (37, 24), (37, 25), (37, 26), (37, 30), (37, 32), (37, 33), (37, 35), (37, 36), (37, 39), (37, 41), (37, 43), (37, 46), (37, 47), (37, 48), (37, 49), (38, 7), (38, 15), (38, 29), (38, 34), (38, 38), (39, 3), (39, 4), (39, 6), (39, 8), (39, 10), (39, 11), (39, 12), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 20), (39, 21), (39, 22), (39, 24), (39, 25), (39, 26), (39, 30), (39, 31), (39, 32), (39, 33), (39, 35), (39, 36), (39, 38), (39, 39), (39, 41), (39, 43), (39, 46), (39, 47), (39, 48), (39, 49), (40, 3), (40, 4), (40, 6), (40, 7), (40, 8), (40, 10), (40, 11), (40, 12), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 20), (40, 21), (40, 22), (40, 23), (40, 25), (40, 26), (40, 30), (40, 31), (40, 32), (40, 33), (40, 35), (40, 36), (40, 39), (40, 41), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 3), (41, 4), (41, 6), (41, 7), (41, 8), (41, 10), (41, 11), (41, 12), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 20), (41, 21), (41, 22), (41, 24), (41, 25), (41, 26), (41, 30), (41, 31), (41, 32), (41, 33), (41, 35), (41, 36), (41, 39), (41, 41), (41, 43), (41, 46), (41, 47), (41, 48), (41, 49), (42, 3), (42, 4), (42, 6), (42, 7), (42, 8), (42, 10), (42, 11), (42, 12), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 20), (42, 21), (42, 22), (42, 24), (42, 25), (42, 26), (42, 30), (42, 31), (42, 32), (42, 33), (42, 35), (42, 36), (42, 41), (42, 43), (42, 46), (42, 47), (42, 48), (42, 49), (44, 3), (44, 4), (44, 6), (44, 7), (44, 8), (44, 10), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 20), (44, 21), (44, 22), (44, 24), (44, 25), (44, 26), (44, 30), (44, 31), (44, 33), (44, 35), (44, 36), (44, 39), (44, 41), (44, 43), (44, 46), (44, 47), (44, 48), (44, 49), (47, 3), (47, 4), (47, 7), (47, 8), (47, 10), (47, 11), (47, 12), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 20), (47, 21), (47, 22), (47, 24), (47, 25), (47, 26), (47, 30), (47, 31), (47, 32), (47, 33), (47, 35), (47, 36), (47, 39), (47, 41), (47, 43), (47, 46), (47, 47), (47, 48), (47, 49), (48, 11), (48, 19), (48, 38)]
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

 Start exact approaches with :
rows_in = [(1, 4), (3, 36), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 32), (18, 34), (19, 33), (21, 4), (22, 31), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 33), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
cols_in = [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
row_names_in = ['r2', 'r4', 'r6', 'r7', 'r10', 'r11', 'r13', 'r14', 'r15', 'r17', 'r18', 'r19', 'r20', 'r22', 'r23', 'r25', 'r26', 'r28', 'r30', 'r31', 'r32', 'r33', 'r35', 'r36', 'r38', 'r39', 'r40', 'r41', 'r42', 'r43', 'r45', 'r48', 'r49']
col_names_in = ['c2', 'c4', 'c5', 'c7', 'c8', 'c9', 'c11', 'c12', 'c13', 'c14', 'c15', 'c16', 'c18', 'c19', 'c20', 'c21', 'c22', 'c23', 'c24', 'c25', 'c26', 'c27', 'c29', 'c30', 'c31', 'c32', 'c33', 'c34', 'c35', 'c36', 'c37', 'c39', 'c40', 'c42', 'c44', 'c45', 'c46', 'c47', 'c48', 'c49', 'c50']
edges_1_in = [(1, 6), (1, 14), (1, 17), (1, 44), (3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (5, 34), (5, 36), (5, 44), (5, 45), (6, 3), (6, 4), (6, 6), (6, 7), (6, 8), (6, 10), (6, 11), (6, 12), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (6, 22), (6, 24), (6, 25), (6, 26), (6, 30), (6, 32), (6, 33), (6, 35), (6, 36), (6, 39), (6, 41), (6, 43), (6, 46), (6, 47), (6, 48), (6, 49), (9, 8), (9, 18), (9, 23), (9, 25), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 10), (10, 11), (10, 12), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 20), (10, 21), (10, 22), (10, 24), (10, 25), (10, 26), (10, 30), (10, 31), (10, 32), (10, 33), (10, 35), (10, 36), (10, 39), (10, 41), (10, 43), (10, 46), (10, 47), (10, 49), (12, 3), (12, 4), (12, 6), (12, 7), (12, 8), (12, 10), (12, 11), (12, 12), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 20), (12, 21), (12, 22), (12, 24), (12, 25), (12, 29), (12, 30), (12, 31), (12, 33), (12, 35), (12, 36), (12, 39), (12, 41), (12, 43), (12, 46), (12, 47), (12, 48), (12, 49), (13, 15), (13, 43), (13, 44), (13, 45), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 24), (14, 25), (14, 26), (14, 30), (14, 31), (14, 32), (14, 33), (14, 35), (14, 36), (14, 39), (14, 41), (14, 43), (14, 46), (14, 47), (14, 48), (14, 49), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 20), (16, 21), (16, 22), (16, 24), (16, 26), (16, 30), (16, 31), (16, 32), (16, 33), (16, 35), (16, 36), (16, 39), (16, 41), (16, 43), (16, 46), (16, 47), (16, 48), (16, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 1), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (19, 1), (19, 3), (19, 4), (19, 6), (19, 7), (19, 10), (19, 11), (19, 12), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 20), (19, 21), (19, 22), (19, 24), (19, 25), (19, 26), (19, 29), (19, 30), (19, 31), (19, 32), (19, 33), (19, 35), (19, 36), (19, 39), (19, 41), (19, 43), (19, 46), (19, 47), (19, 48), (19, 49), (21, 4), (21, 7), (21, 18), (21, 49), (22, 3), (22, 4), (22, 6), (22, 7), (22, 8), (22, 10), (22, 11), (22, 12), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 20), (22, 22), (22, 24), (22, 25), (22, 30), (22, 31), (22, 32), (22, 33), (22, 35), (22, 36), (22, 39), (22, 41), (22, 43), (22, 46), (22, 47), (22, 48), (22, 49), (24, 3), (24, 4), (24, 6), (24, 7), (24, 8), (24, 10), (24, 11), (24, 12), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 24), (24, 25), (24, 26), (24, 28), (24, 30), (24, 31), (24, 32), (24, 33), (24, 35), (24, 36), (24, 39), (24, 41), (24, 43), (24, 45), (24, 46), (24, 47), (24, 48), (24, 49), (25, 1), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (27, 3), (27, 4), (27, 6), (27, 7), (27, 8), (27, 10), (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 20), (27, 21), (27, 22), (27, 24), (27, 25), (27, 26), (27, 28), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 39), (27, 43), (27, 46), (27, 47), (27, 49), (29, 3), (29, 4), (29, 6), (29, 7), (29, 8), (29, 10), (29, 11), (29, 12), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 20), (29, 21), (29, 22), (29, 24), (29, 25), (29, 26), (29, 30), (29, 31), (29, 32), (29, 33), (29, 35), (29, 36), (29, 39), (29, 41), (29, 43), (29, 46), (29, 47), (29, 48), (29, 49), (30, 1), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (31, 12), (31, 20), (31, 29), (31, 36), (32, 3), (32, 4), (32, 6), (32, 7), (32, 8), (32, 10), (32, 11), (32, 12), (32, 13), (32, 14), (32, 15), (32, 17), (32, 18), (32, 19), (32, 20), (32, 21), (32, 22), (32, 24), (32, 25), (32, 28), (32, 30), (32, 31), (32, 32), (32, 35), (32, 36), (32, 39), (32, 41), (32, 43), (32, 46), (32, 47), (32, 48), (32, 49), (34, 3), (34, 4), (34, 6), (34, 7), (34, 8), (34, 10), (34, 11), (34, 12), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 20), (34, 21), (34, 22), (34, 24), (34, 25), (34, 26), (34, 30), (34, 31), (34, 32), (34, 33), (34, 35), (34, 39), (34, 41), (34, 43), (34, 46), (34, 47), (34, 48), (34, 49), (35, 3), (35, 4), (35, 6), (35, 7), (35, 8), (35, 10), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 20), (35, 21), (35, 22), (35, 24), (35, 25), (35, 26), (35, 30), (35, 31), (35, 32), (35, 33), (35, 35), (35, 36), (35, 39), (35, 41), (35, 43), (35, 46), (35, 47), (35, 48), (35, 49), (37, 3), (37, 4), (37, 6), (37, 7), (37, 8), (37, 10), (37, 11), (37, 12), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 20), (37, 21), (37, 22), (37, 24), (37, 25), (37, 26), (37, 30), (37, 32), (37, 33), (37, 35), (37, 36), (37, 39), (37, 41), (37, 43), (37, 46), (37, 47), (37, 48), (37, 49), (38, 7), (38, 15), (38, 29), (38, 34), (38, 38), (39, 3), (39, 4), (39, 6), (39, 8), (39, 10), (39, 11), (39, 12), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 20), (39, 21), (39, 22), (39, 24), (39, 25), (39, 26), (39, 30), (39, 31), (39, 32), (39, 33), (39, 35), (39, 36), (39, 38), (39, 39), (39, 41), (39, 43), (39, 46), (39, 47), (39, 48), (39, 49), (40, 3), (40, 4), (40, 6), (40, 7), (40, 8), (40, 10), (40, 11), (40, 12), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 20), (40, 21), (40, 22), (40, 23), (40, 25), (40, 26), (40, 30), (40, 31), (40, 32), (40, 33), (40, 35), (40, 36), (40, 39), (40, 41), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 3), (41, 4), (41, 6), (41, 7), (41, 8), (41, 10), (41, 11), (41, 12), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 20), (41, 21), (41, 22), (41, 24), (41, 25), (41, 26), (41, 30), (41, 31), (41, 32), (41, 33), (41, 35), (41, 36), (41, 39), (41, 41), (41, 43), (41, 46), (41, 47), (41, 48), (41, 49), (42, 3), (42, 4), (42, 6), (42, 7), (42, 8), (42, 10), (42, 11), (42, 12), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 20), (42, 21), (42, 22), (42, 24), (42, 25), (42, 26), (42, 30), (42, 31), (42, 32), (42, 33), (42, 35), (42, 36), (42, 41), (42, 43), (42, 46), (42, 47), (42, 48), (42, 49), (44, 3), (44, 4), (44, 6), (44, 7), (44, 8), (44, 10), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 20), (44, 21), (44, 22), (44, 24), (44, 25), (44, 26), (44, 30), (44, 31), (44, 33), (44, 35), (44, 36), (44, 39), (44, 41), (44, 43), (44, 46), (44, 47), (44, 48), (44, 49), (47, 3), (47, 4), (47, 7), (47, 8), (47, 10), (47, 11), (47, 12), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 20), (47, 21), (47, 22), (47, 24), (47, 25), (47, 26), (47, 30), (47, 31), (47, 32), (47, 33), (47, 35), (47, 36), (47, 39), (47, 41), (47, 43), (47, 46), (47, 47), (47, 48), (47, 49), (48, 11), (48, 19), (48, 38)]
----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 1181.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_0_M_5.csv

-- Debugging Step: checking extracted solution after solving model**** -- max_e_h
len_rows_res= 20
row_res= [12, 14, 16, 17, 18, 22, 25, 29, 3, 30, 32, 34, 35, 37, 39, 41, 42, 44, 47, 6]
len_cols_res= 21
cols_res= [10, 11, 14, 15, 17, 18, 19, 20, 22, 24, 3, 30, 35, 4, 41, 43, 46, 47, 48, 49, 8]
nb row_names_res, = 20
row_names_res = ['r13', 'r15', 'r17', 'r18', 'r19', 'r23', 'r26', 'r30', 'r4', 'r31', 'r33', 'r35', 'r36', 'r38', 'r40', 'r42', 'r43', 'r45', 'r48', 'r7']
col_names_res = ['c11', 'c12', 'c15', 'c16', 'c18', 'c19', 'c20', 'c21', 'c23', 'c25', 'c4', 'c31', 'c36', 'c5', 'c42', 'c44', 'c47', 'c48', 'c49', 'c50', 'c9']
 nb col_names_res, = 21

----------------------------------------

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.02443 - (Local CPU) 0.02443 - (Global CPU) 0.02443

 Solve status: Optimal Objective value: 1181.0 nb_rows 20 nb_cols 21
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 4), (3, 36), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 32), (18, 34), (19, 33), (21, 4), (22, 31), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 33), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
cols_data = [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
rows_res_set = {3, 6, 12, 14, 16, 17, 18, 22, 25, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 47}
cols_res_set = {3, 4, 8, 10, 11, 14, 15, 17, 18, 19, 20, 22, 24, 30, 35, 41, 43, 46, 47, 48, 49}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {1: 4, 3: 25, 4: 25, 6: 25, 7: 26, 8: 25, 10: 25, 11: 26, 12: 23, 13: 24, 14: 26, 15: 26, 17: 25, 18: 26, 19: 25, 20: 25, 21: 24, 22: 25, 23: 4, 24: 24, 25: 25, 26: 22, 28: 3, 29: 5, 30: 25, 31: 23, 32: 23, 33: 24, 34: 4, 35: 26, 36: 26, 38: 3, 39: 24, 41: 24, 43: 26, 44: 4, 45: 4, 46: 25, 47: 25, 48: 23, 49: 26}
row_degree_map = {1: 4, 3: 36, 5: 4, 6: 31, 9: 5, 10: 31, 12: 32, 13: 4, 14: 33, 16: 32, 17: 32, 18: 34, 19: 33, 21: 4, 22: 31, 24: 32, 25: 34, 27: 33, 29: 33, 30: 36, 31: 4, 32: 32, 34: 32, 35: 32, 37: 32, 38: 5, 39: 33, 40: 33, 41: 33, 42: 32, 44: 31, 47: 32, 48: 3}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {1: 0, 3: 20, 4: 20, 6: 0, 7: 0, 8: 20, 10: 20, 11: 20, 12: 0, 13: 0, 14: 20, 15: 20, 17: 20, 18: 20, 19: 20, 20: 20, 21: 0, 22: 20, 23: 0, 24: 20, 25: 0, 26: 0, 28: 0, 29: 0, 30: 20, 31: 0, 32: 0, 33: 0, 34: 0, 35: 20, 36: 0, 38: 0, 39: 0, 41: 20, 43: 20, 44: 0, 45: 0, 46: 20, 47: 20, 48: 20, 49: 20}
row_degree_map reduced = {1: 0, 3: 21, 5: 0, 6: 21, 9: 0, 10: 0, 12: 21, 13: 0, 14: 21, 16: 21, 17: 21, 18: 21, 19: 0, 21: 0, 22: 21, 24: 0, 25: 21, 27: 0, 29: 21, 30: 21, 31: 0, 32: 21, 34: 21, 35: 21, 37: 21, 38: 0, 39: 21, 40: 0, 41: 21, 42: 21, 44: 21, 47: 21, 48: 0}
cols_rem   = [(3, 20), (4, 20), (8, 20), (10, 20), (11, 20), (14, 20), (15, 20), (17, 20), (18, 20), (19, 20), (20, 20), (22, 20), (24, 20), (30, 20), (35, 20), (41, 20), (43, 20), (46, 20), (47, 20), (48, 20), (49, 20)]
rows_rem   = [(3, 21), (6, 21), (12, 21), (14, 21), (16, 21), (17, 21), (18, 21), (22, 21), (25, 21), (29, 21), (30, 21), (32, 21), (34, 21), (35, 21), (37, 21), (39, 21), (41, 21), (42, 21), (44, 21), (47, 21)]
 nb_edges_1_rem   = 420
 nb_edges_0_rem   = 0
row_rem_length= 21 col_rem_length = 20
Stats in updata_data : row_rem_length = 21 col_rem_length = 20 nb_edges_0_rem= 0 nb_edges_1_rem= 420  !!!!! density = 1.0


----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining  Rows  : 20
Number of Remaining number Columns : 21
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 420 Density : 1.0 current obj value 1181.0
----------------------------------------

----------------------------------------

Exit from the exact  approach  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 20  and cols_res of lenght = 21 and density = 1.0
 Density of the found matrix =  : 1.0
 Original Rows  : [(1, 4), (3, 36), (5, 4), (6, 31), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 32), (18, 34), (19, 33), (21, 4), (22, 31), (24, 32), (25, 34), (27, 33), (29, 33), (30, 36), (31, 4), (32, 32), (34, 32), (35, 32), (37, 32), (38, 5), (39, 33), (40, 33), (41, 33), (42, 32), (44, 31), (47, 32), (48, 3)]
 Original Cold  : [(1, 4), (3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (10, 25), (11, 26), (12, 23), (13, 24), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 3), (39, 24), (41, 24), (43, 26), (44, 4), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
 Remaining Rows  : [12, 14, 16, 17, 18, 22, 25, 29, 3, 30, 32, 34, 35, 37, 39, 41, 42, 44, 47, 6]
 Remaining  Cols  : [10, 11, 14, 15, 17, 18, 19, 20, 22, 24, 3, 30, 35, 4, 41, 43, 46, 47, 48, 49, 8]
 Remaining Rows with degree : [(3, 21), (6, 21), (12, 21), (14, 21), (16, 21), (17, 21), (18, 21), (22, 21), (25, 21), (29, 21), (30, 21), (32, 21), (34, 21), (35, 21), (37, 21), (39, 21), (41, 21), (42, 21), (44, 21), (47, 21)]
 Remaining  Cols with degree : [(3, 20), (4, 20), (8, 20), (10, 20), (11, 20), (14, 20), (15, 20), (17, 20), (18, 20), (19, 20), (20, 20), (22, 20), (24, 20), (30, 20), (35, 20), (41, 20), (43, 20), (46, 20), (47, 20), (48, 20), (49, 20)]
 !!!!!!!!!!!!!!!!!! I got a lower bound  420

 Initial point before solving:
ROWS: {1: 0, 3: 1, 5: 0, 6: 1, 9: 0, 10: 0, 12: 1, 13: 0, 14: 1, 16: 1, 17: 1, 18: 1, 19: 0, 21: 0, 22: 1, 24: 0, 25: 1, 27: 0, 29: 1, 30: 1, 31: 0, 32: 1, 34: 1, 35: 1, 37: 1, 38: 0, 39: 1, 40: 0, 41: 1, 42: 1, 44: 1, 47: 1, 48: 0}
COLS: {1: 0, 3: 1, 4: 1, 6: 0, 7: 0, 8: 1, 10: 1, 11: 1, 12: 0, 13: 0, 14: 1, 15: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 0, 22: 1, 23: 0, 24: 1, 25: 0, 26: 0, 28: 0, 29: 0, 30: 1, 31: 0, 32: 0, 33: 0, 34: 0, 35: 1, 36: 0, 38: 0, 39: 0, 41: 1, 43: 1, 44: 0, 45: 0, 46: 1, 47: 1, 48: 1, 49: 1}
CELLS: {(1, 6): 1, (1, 14): 1, (1, 17): 1, (1, 44): 1, (3, 3): 1, (3, 4): 1, (3, 6): 1, (3, 7): 1, (3, 8): 1, (3, 10): 1, (3, 11): 1, (3, 12): 1, (3, 13): 1, (3, 14): 1, (3, 15): 1, (3, 17): 1, (3, 18): 1, (3, 19): 1, (3, 20): 1, (3, 21): 1, (3, 22): 1, (3, 23): 1, (3, 24): 1, (3, 25): 1, (3, 26): 1, (3, 30): 1, (3, 31): 1, (3, 32): 1, (3, 33): 1, (3, 34): 1, (3, 35): 1, (3, 36): 1, (3, 39): 1, (3, 41): 1, (3, 43): 1, (3, 45): 1, (3, 46): 1, (3, 47): 1, (3, 48): 1, (3, 49): 1, (5, 34): 1, (5, 36): 1, (5, 44): 1, (5, 45): 1, (6, 3): 1, (6, 4): 1, (6, 6): 1, (6, 7): 1, (6, 8): 1, (6, 10): 1, (6, 11): 1, (6, 12): 1, (6, 14): 1, (6, 15): 1, (6, 17): 1, (6, 18): 1, (6, 19): 1, (6, 20): 1, (6, 21): 1, (6, 22): 1, (6, 24): 1, (6, 25): 1, (6, 26): 1, (6, 30): 1, (6, 32): 1, (6, 33): 1, (6, 35): 1, (6, 36): 1, (6, 39): 1, (6, 41): 1, (6, 43): 1, (6, 46): 1, (6, 47): 1, (6, 48): 1, (6, 49): 1, (9, 8): 1, (9, 18): 1, (9, 23): 1, (9, 25): 1, (9, 35): 1, (10, 3): 1, (10, 6): 1, (10, 7): 1, (10, 8): 1, (10, 10): 1, (10, 11): 1, (10, 12): 1, (10, 13): 1, (10, 14): 1, (10, 15): 1, (10, 17): 1, (10, 18): 1, (10, 19): 1, (10, 20): 1, (10, 21): 1, (10, 22): 1, (10, 24): 1, (10, 25): 1, (10, 26): 1, (10, 30): 1, (10, 31): 1, (10, 32): 1, (10, 33): 1, (10, 35): 1, (10, 36): 1, (10, 39): 1, (10, 41): 1, (10, 43): 1, (10, 46): 1, (10, 47): 1, (10, 49): 1, (12, 3): 1, (12, 4): 1, (12, 6): 1, (12, 7): 1, (12, 8): 1, (12, 10): 1, (12, 11): 1, (12, 12): 1, (12, 13): 1, (12, 14): 1, (12, 15): 1, (12, 17): 1, (12, 18): 1, (12, 19): 1, (12, 20): 1, (12, 21): 1, (12, 22): 1, (12, 24): 1, (12, 25): 1, (12, 29): 1, (12, 30): 1, (12, 31): 1, (12, 33): 1, (12, 35): 1, (12, 36): 1, (12, 39): 1, (12, 41): 1, (12, 43): 1, (12, 46): 1, (12, 47): 1, (12, 48): 1, (12, 49): 1, (13, 15): 1, (13, 43): 1, (13, 44): 1, (13, 45): 1, (14, 3): 1, (14, 4): 1, (14, 6): 1, (14, 7): 1, (14, 8): 1, (14, 10): 1, (14, 11): 1, (14, 12): 1, (14, 13): 1, (14, 14): 1, (14, 15): 1, (14, 17): 1, (14, 18): 1, (14, 19): 1, (14, 20): 1, (14, 21): 1, (14, 22): 1, (14, 24): 1, (14, 25): 1, (14, 26): 1, (14, 30): 1, (14, 31): 1, (14, 32): 1, (14, 33): 1, (14, 35): 1, (14, 36): 1, (14, 39): 1, (14, 41): 1, (14, 43): 1, (14, 46): 1, (14, 47): 1, (14, 48): 1, (14, 49): 1, (16, 3): 1, (16, 4): 1, (16, 6): 1, (16, 7): 1, (16, 8): 1, (16, 10): 1, (16, 11): 1, (16, 12): 1, (16, 13): 1, (16, 14): 1, (16, 15): 1, (16, 17): 1, (16, 18): 1, (16, 19): 1, (16, 20): 1, (16, 21): 1, (16, 22): 1, (16, 24): 1, (16, 26): 1, (16, 30): 1, (16, 31): 1, (16, 32): 1, (16, 33): 1, (16, 35): 1, (16, 36): 1, (16, 39): 1, (16, 41): 1, (16, 43): 1, (16, 46): 1, (16, 47): 1, (16, 48): 1, (16, 49): 1, (17, 3): 1, (17, 4): 1, (17, 6): 1, (17, 7): 1, (17, 8): 1, (17, 10): 1, (17, 11): 1, (17, 13): 1, (17, 14): 1, (17, 15): 1, (17, 17): 1, (17, 18): 1, (17, 19): 1, (17, 20): 1, (17, 21): 1, (17, 22): 1, (17, 24): 1, (17, 25): 1, (17, 26): 1, (17, 30): 1, (17, 31): 1, (17, 32): 1, (17, 33): 1, (17, 35): 1, (17, 36): 1, (17, 39): 1, (17, 41): 1, (17, 43): 1, (17, 46): 1, (17, 47): 1, (17, 48): 1, (17, 49): 1, (18, 1): 1, (18, 3): 1, (18, 4): 1, (18, 6): 1, (18, 7): 1, (18, 8): 1, (18, 10): 1, (18, 11): 1, (18, 12): 1, (18, 13): 1, (18, 14): 1, (18, 15): 1, (18, 17): 1, (18, 18): 1, (18, 19): 1, (18, 20): 1, (18, 21): 1, (18, 22): 1, (18, 24): 1, (18, 25): 1, (18, 26): 1, (18, 30): 1, (18, 31): 1, (18, 32): 1, (18, 33): 1, (18, 35): 1, (18, 36): 1, (18, 39): 1, (18, 41): 1, (18, 43): 1, (18, 46): 1, (18, 47): 1, (18, 48): 1, (18, 49): 1, (19, 1): 1, (19, 3): 1, (19, 4): 1, (19, 6): 1, (19, 7): 1, (19, 10): 1, (19, 11): 1, (19, 12): 1, (19, 13): 1, (19, 14): 1, (19, 15): 1, (19, 17): 1, (19, 19): 1, (19, 20): 1, (19, 21): 1, (19, 22): 1, (19, 24): 1, (19, 25): 1, (19, 26): 1, (19, 29): 1, (19, 30): 1, (19, 31): 1, (19, 32): 1, (19, 33): 1, (19, 35): 1, (19, 36): 1, (19, 39): 1, (19, 41): 1, (19, 43): 1, (19, 46): 1, (19, 47): 1, (19, 48): 1, (19, 49): 1, (21, 4): 1, (21, 7): 1, (21, 18): 1, (21, 49): 1, (22, 3): 1, (22, 4): 1, (22, 6): 1, (22, 7): 1, (22, 8): 1, (22, 10): 1, (22, 11): 1, (22, 12): 1, (22, 13): 1, (22, 14): 1, (22, 15): 1, (22, 17): 1, (22, 18): 1, (22, 19): 1, (22, 20): 1, (22, 22): 1, (22, 24): 1, (22, 25): 1, (22, 30): 1, (22, 31): 1, (22, 32): 1, (22, 33): 1, (22, 35): 1, (22, 36): 1, (22, 39): 1, (22, 41): 1, (22, 43): 1, (22, 46): 1, (22, 47): 1, (22, 48): 1, (22, 49): 1, (24, 3): 1, (24, 4): 1, (24, 6): 1, (24, 7): 1, (24, 8): 1, (24, 10): 1, (24, 11): 1, (24, 12): 1, (24, 13): 1, (24, 14): 1, (24, 15): 1, (24, 18): 1, (24, 21): 1, (24, 22): 1, (24, 24): 1, (24, 25): 1, (24, 26): 1, (24, 28): 1, (24, 30): 1, (24, 31): 1, (24, 32): 1, (24, 33): 1, (24, 35): 1, (24, 36): 1, (24, 39): 1, (24, 41): 1, (24, 43): 1, (24, 45): 1, (24, 46): 1, (24, 47): 1, (24, 48): 1, (24, 49): 1, (25, 1): 1, (25, 3): 1, (25, 4): 1, (25, 6): 1, (25, 7): 1, (25, 8): 1, (25, 10): 1, (25, 11): 1, (25, 12): 1, (25, 13): 1, (25, 14): 1, (25, 15): 1, (25, 17): 1, (25, 18): 1, (25, 19): 1, (25, 20): 1, (25, 21): 1, (25, 22): 1, (25, 24): 1, (25, 25): 1, (25, 26): 1, (25, 30): 1, (25, 31): 1, (25, 32): 1, (25, 33): 1, (25, 35): 1, (25, 36): 1, (25, 39): 1, (25, 41): 1, (25, 43): 1, (25, 46): 1, (25, 47): 1, (25, 48): 1, (25, 49): 1, (27, 3): 1, (27, 4): 1, (27, 6): 1, (27, 7): 1, (27, 8): 1, (27, 10): 1, (27, 11): 1, (27, 12): 1, (27, 13): 1, (27, 14): 1, (27, 15): 1, (27, 17): 1, (27, 18): 1, (27, 19): 1, (27, 20): 1, (27, 21): 1, (27, 22): 1, (27, 24): 1, (27, 25): 1, (27, 26): 1, (27, 28): 1, (27, 30): 1, (27, 31): 1, (27, 32): 1, (27, 33): 1, (27, 34): 1, (27, 35): 1, (27, 36): 1, (27, 39): 1, (27, 43): 1, (27, 46): 1, (27, 47): 1, (27, 49): 1, (29, 3): 1, (29, 4): 1, (29, 6): 1, (29, 7): 1, (29, 8): 1, (29, 10): 1, (29, 11): 1, (29, 12): 1, (29, 13): 1, (29, 14): 1, (29, 15): 1, (29, 17): 1, (29, 18): 1, (29, 19): 1, (29, 20): 1, (29, 21): 1, (29, 22): 1, (29, 24): 1, (29, 25): 1, (29, 26): 1, (29, 30): 1, (29, 31): 1, (29, 32): 1, (29, 33): 1, (29, 35): 1, (29, 36): 1, (29, 39): 1, (29, 41): 1, (29, 43): 1, (29, 46): 1, (29, 47): 1, (29, 48): 1, (29, 49): 1, (30, 1): 1, (30, 3): 1, (30, 4): 1, (30, 6): 1, (30, 7): 1, (30, 8): 1, (30, 10): 1, (30, 11): 1, (30, 12): 1, (30, 13): 1, (30, 14): 1, (30, 15): 1, (30, 17): 1, (30, 18): 1, (30, 19): 1, (30, 20): 1, (30, 21): 1, (30, 22): 1, (30, 23): 1, (30, 24): 1, (30, 25): 1, (30, 26): 1, (30, 29): 1, (30, 30): 1, (30, 31): 1, (30, 32): 1, (30, 33): 1, (30, 35): 1, (30, 36): 1, (30, 39): 1, (30, 41): 1, (30, 43): 1, (30, 46): 1, (30, 47): 1, (30, 48): 1, (30, 49): 1, (31, 12): 1, (31, 20): 1, (31, 29): 1, (31, 36): 1, (32, 3): 1, (32, 4): 1, (32, 6): 1, (32, 7): 1, (32, 8): 1, (32, 10): 1, (32, 11): 1, (32, 12): 1, (32, 13): 1, (32, 14): 1, (32, 15): 1, (32, 17): 1, (32, 18): 1, (32, 19): 1, (32, 20): 1, (32, 21): 1, (32, 22): 1, (32, 24): 1, (32, 25): 1, (32, 28): 1, (32, 30): 1, (32, 31): 1, (32, 32): 1, (32, 35): 1, (32, 36): 1, (32, 39): 1, (32, 41): 1, (32, 43): 1, (32, 46): 1, (32, 47): 1, (32, 48): 1, (32, 49): 1, (34, 3): 1, (34, 4): 1, (34, 6): 1, (34, 7): 1, (34, 8): 1, (34, 10): 1, (34, 11): 1, (34, 12): 1, (34, 13): 1, (34, 14): 1, (34, 15): 1, (34, 17): 1, (34, 18): 1, (34, 19): 1, (34, 20): 1, (34, 21): 1, (34, 22): 1, (34, 24): 1, (34, 25): 1, (34, 26): 1, (34, 30): 1, (34, 31): 1, (34, 32): 1, (34, 33): 1, (34, 35): 1, (34, 39): 1, (34, 41): 1, (34, 43): 1, (34, 46): 1, (34, 47): 1, (34, 48): 1, (34, 49): 1, (35, 3): 1, (35, 4): 1, (35, 6): 1, (35, 7): 1, (35, 8): 1, (35, 10): 1, (35, 11): 1, (35, 13): 1, (35, 14): 1, (35, 15): 1, (35, 17): 1, (35, 18): 1, (35, 19): 1, (35, 20): 1, (35, 21): 1, (35, 22): 1, (35, 24): 1, (35, 25): 1, (35, 26): 1, (35, 30): 1, (35, 31): 1, (35, 32): 1, (35, 33): 1, (35, 35): 1, (35, 36): 1, (35, 39): 1, (35, 41): 1, (35, 43): 1, (35, 46): 1, (35, 47): 1, (35, 48): 1, (35, 49): 1, (37, 3): 1, (37, 4): 1, (37, 6): 1, (37, 7): 1, (37, 8): 1, (37, 10): 1, (37, 11): 1, (37, 12): 1, (37, 13): 1, (37, 14): 1, (37, 15): 1, (37, 17): 1, (37, 18): 1, (37, 19): 1, (37, 20): 1, (37, 21): 1, (37, 22): 1, (37, 24): 1, (37, 25): 1, (37, 26): 1, (37, 30): 1, (37, 32): 1, (37, 33): 1, (37, 35): 1, (37, 36): 1, (37, 39): 1, (37, 41): 1, (37, 43): 1, (37, 46): 1, (37, 47): 1, (37, 48): 1, (37, 49): 1, (38, 7): 1, (38, 15): 1, (38, 29): 1, (38, 34): 1, (38, 38): 1, (39, 3): 1, (39, 4): 1, (39, 6): 1, (39, 8): 1, (39, 10): 1, (39, 11): 1, (39, 12): 1, (39, 13): 1, (39, 14): 1, (39, 15): 1, (39, 17): 1, (39, 18): 1, (39, 19): 1, (39, 20): 1, (39, 21): 1, (39, 22): 1, (39, 24): 1, (39, 25): 1, (39, 26): 1, (39, 30): 1, (39, 31): 1, (39, 32): 1, (39, 33): 1, (39, 35): 1, (39, 36): 1, (39, 38): 1, (39, 39): 1, (39, 41): 1, (39, 43): 1, (39, 46): 1, (39, 47): 1, (39, 48): 1, (39, 49): 1, (40, 3): 1, (40, 4): 1, (40, 6): 1, (40, 7): 1, (40, 8): 1, (40, 10): 1, (40, 11): 1, (40, 12): 1, (40, 13): 1, (40, 14): 1, (40, 17): 1, (40, 18): 1, (40, 19): 1, (40, 20): 1, (40, 21): 1, (40, 22): 1, (40, 23): 1, (40, 25): 1, (40, 26): 1, (40, 30): 1, (40, 31): 1, (40, 32): 1, (40, 33): 1, (40, 35): 1, (40, 36): 1, (40, 39): 1, (40, 41): 1, (40, 43): 1, (40, 44): 1, (40, 46): 1, (40, 47): 1, (40, 48): 1, (40, 49): 1, (41, 3): 1, (41, 4): 1, (41, 6): 1, (41, 7): 1, (41, 8): 1, (41, 10): 1, (41, 11): 1, (41, 12): 1, (41, 13): 1, (41, 14): 1, (41, 15): 1, (41, 17): 1, (41, 18): 1, (41, 19): 1, (41, 20): 1, (41, 21): 1, (41, 22): 1, (41, 24): 1, (41, 25): 1, (41, 26): 1, (41, 30): 1, (41, 31): 1, (41, 32): 1, (41, 33): 1, (41, 35): 1, (41, 36): 1, (41, 39): 1, (41, 41): 1, (41, 43): 1, (41, 46): 1, (41, 47): 1, (41, 48): 1, (41, 49): 1, (42, 3): 1, (42, 4): 1, (42, 6): 1, (42, 7): 1, (42, 8): 1, (42, 10): 1, (42, 11): 1, (42, 12): 1, (42, 13): 1, (42, 14): 1, (42, 15): 1, (42, 17): 1, (42, 18): 1, (42, 19): 1, (42, 20): 1, (42, 21): 1, (42, 22): 1, (42, 24): 1, (42, 25): 1, (42, 26): 1, (42, 30): 1, (42, 31): 1, (42, 32): 1, (42, 33): 1, (42, 35): 1, (42, 36): 1, (42, 41): 1, (42, 43): 1, (42, 46): 1, (42, 47): 1, (42, 48): 1, (42, 49): 1, (44, 3): 1, (44, 4): 1, (44, 6): 1, (44, 7): 1, (44, 8): 1, (44, 10): 1, (44, 11): 1, (44, 13): 1, (44, 14): 1, (44, 15): 1, (44, 17): 1, (44, 18): 1, (44, 19): 1, (44, 20): 1, (44, 21): 1, (44, 22): 1, (44, 24): 1, (44, 25): 1, (44, 26): 1, (44, 30): 1, (44, 31): 1, (44, 33): 1, (44, 35): 1, (44, 36): 1, (44, 39): 1, (44, 41): 1, (44, 43): 1, (44, 46): 1, (44, 47): 1, (44, 48): 1, (44, 49): 1, (47, 3): 1, (47, 4): 1, (47, 7): 1, (47, 8): 1, (47, 10): 1, (47, 11): 1, (47, 12): 1, (47, 13): 1, (47, 14): 1, (47, 15): 1, (47, 17): 1, (47, 18): 1, (47, 19): 1, (47, 20): 1, (47, 21): 1, (47, 22): 1, (47, 24): 1, (47, 25): 1, (47, 26): 1, (47, 30): 1, (47, 31): 1, (47, 32): 1, (47, 33): 1, (47, 35): 1, (47, 36): 1, (47, 39): 1, (47, 41): 1, (47, 43): 1, (47, 46): 1, (47, 47): 1, (47, 48): 1, (47, 49): 1, (48, 11): 1, (48, 19): 1, (48, 38): 1}

----------------------------------------
******** Solving model  ******** max_e_wr  with delta =  0.0
 # rows_data = 33  # cols_data = 41  # edges = 848
row_threshold= 2
col_threshold= 2

----------------------------------------
----------------------------------------------------------------------
Model status: Not Solved
----------------------------------------------------------------------
Model status: Not Solved

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 0.06981 - (Local CPU) 0.06981 - (Global CPU) 0.09424

 Solve status: Not Solved Objective value: 848 nb_rows 20 nb_cols 21
----------------------------------------
*****Model in warm start is infeasible.!!!*** 
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 5
        with delta =  0.0
        Found matrix of size : (20, 21)
        and density : 1.0
        and # of ones : 420
        and Heuristic QBC time   : 0.02443
        and Global QBC  time  : 0.09424
        
 Remaining Rows  : [(3, 21), (6, 21), (12, 21), (14, 21), (16, 21), (17, 21), (18, 21), (22, 21), (25, 21), (29, 21), (30, 21), (32, 21), (34, 21), (35, 21), (37, 21), (39, 21), (41, 21), (42, 21), (44, 21), (47, 21)]
 Remaining  Cols  : [(3, 20), (4, 20), (8, 20), (10, 20), (11, 20), (14, 20), (15, 20), (17, 20), (18, 20), (19, 20), (20, 20), (22, 20), (24, 20), (30, 20), (35, 20), (41, 20), (43, 20), (46, 20), (47, 20), (48, 20), (49, 20)]

----------------------------------------------------------------------
 
    End of computations for matrix 5 in  data/data3.csv at level 0 and debug  4
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (20,21), with  density : 1.0 and number of ones: 420
    Global Time (in sec): 0.129
    Total Time in QBC approaches: 0.094
    Time in greedy approach: 0.034,  size of matrix found by greedy : (33,41) 
    With density : 0.627 and # ones : 848 
    Time in heuristic only : 0.024 
    Time in warm start only : 0.070
    Number of iterations in greedy approach: 2
    Percentage of greedy approach run time in global run time : 26.78% 
    Percentage of heuristic run time in QBC run time : 25.92%
    With zero deletion rate (rho): 0.1 and threshold: 0.57
    
----------------------------------------------------------------------

 ***Solution Rows indices : [3, 6, 12, 14, 16, 17, 18, 22, 25, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 47]
 ***Solution Cols indices : [3, 4, 8, 10, 11, 14, 15, 17, 18, 19, 20, 22, 24, 30, 35, 41, 43, 46, 47, 48, 49]
 Remaining Rows with degree : [(3, 21), (6, 21), (12, 21), (14, 21), (16, 21), (17, 21), (18, 21), (22, 21), (25, 21), (29, 21), (30, 21), (32, 21), (34, 21), (35, 21), (37, 21), (39, 21), (41, 21), (42, 21), (44, 21), (47, 21)]
 Remaining Cols with degree : [(3, 20), (4, 20), (8, 20), (10, 20), (11, 20), (14, 20), (15, 20), (17, 20), (18, 20), (19, 20), (20, 20), (22, 20), (24, 20), (30, 20), (35, 20), (41, 20), (43, 20), (46, 20), (47, 20), (48, 20), (49, 20)]
return from 5 with winning node = 5
return from 2 with winning node = 5
 Return from 2 with winning node = 5

----------------------------------------------------------------------
***Stats Current Input for matrix 3 in  data/data3.csv at level 1 and with model:  max_e_c***
Size of current matrix :  50 * 12 = 600 ; dec_conq: 1
number input zeros :  255 ; number input ones :  345
rho =  0.1 ; delta :  0.0
Input density : 0.575 ; density_threshold: 0.57000
End Current  Stats
----------------------------------------------------------------------

----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

 Start exact approaches with :
rows_in = [(0, 12), (1, 10), (2, 10), (3, 3), (4, 11), (5, 11), (6, 4), (7, 11), (8, 12), (9, 11), (10, 3), (11, 8), (12, 3), (13, 11), (14, 3), (15, 12), (16, 3), (17, 3), (18, 2), (19, 4), (20, 8), (21, 11), (22, 4), (23, 11), (24, 3), (25, 3), (26, 11), (27, 2), (28, 11), (29, 3), (30, 3), (31, 12), (32, 1), (33, 10), (34, 3), (35, 3), (36, 9), (37, 3), (38, 12), (39, 3), (40, 2), (41, 3), (42, 4), (43, 12), (44, 3), (45, 11), (46, 10), (47, 4), (48, 11), (49, 12)]
cols_in = [(3, 24), (6, 22), (13, 25), (16, 47), (18, 22), (19, 23), (21, 23), (22, 22), (28, 45), (39, 24), (44, 45), (47, 23)]
row_names_in = Index(['r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 'r10', 'r11',
       'r12', 'r13', 'r14', 'r15', 'r16', 'r17', 'r18', 'r19', 'r20', 'r21',
       'r22', 'r23', 'r24', 'r25', 'r26', 'r27', 'r28', 'r29', 'r30', 'r31',
       'r32', 'r33', 'r34', 'r35', 'r36', 'r37', 'r38', 'r39', 'r40', 'r41',
       'r42', 'r43', 'r44', 'r45', 'r46', 'r47', 'r48', 'r49', 'r50'],
      dtype='object')
col_names_in = Index(['c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'c10', 'c11',
       'c12', 'c13', 'c14', 'c15', 'c16', 'c17', 'c18', 'c19', 'c20', 'c21',
       'c22', 'c23', 'c24', 'c25', 'c26', 'c27', 'c28', 'c29', 'c30', 'c31',
       'c32', 'c33', 'c34', 'c35', 'c36', 'c37', 'c38', 'c39', 'c40', 'c41',
       'c42', 'c43', 'c44', 'c45', 'c46', 'c47', 'c48', 'c49', 'c50'],
      dtype='object')
edges_1_in = [(0, 3), (0, 6), (0, 13), (0, 16), (0, 18), (0, 19), (0, 21), (0, 22), (0, 28), (0, 39), (0, 44), (0, 47), (1, 3), (1, 13), (1, 16), (1, 18), (1, 19), (1, 21), (1, 22), (1, 28), (1, 39), (1, 47), (2, 3), (2, 6), (2, 13), (2, 16), (2, 18), (2, 19), (2, 21), (2, 28), (2, 39), (2, 44), (3, 16), (3, 28), (3, 44), (4, 3), (4, 6), (4, 13), (4, 16), (4, 19), (4, 21), (4, 22), (4, 28), (4, 39), (4, 44), (4, 47), (5, 3), (5, 6), (5, 13), (5, 16), (5, 18), (5, 19), (5, 21), (5, 22), (5, 28), (5, 39), (5, 47), (6, 13), (6, 16), (6, 28), (6, 44), (7, 3), (7, 6), (7, 13), (7, 16), (7, 18), (7, 21), (7, 22), (7, 28), (7, 39), (7, 44), (7, 47), (8, 3), (8, 6), (8, 13), (8, 16), (8, 18), (8, 19), (8, 21), (8, 22), (8, 28), (8, 39), (8, 44), (8, 47), (9, 3), (9, 6), (9, 13), (9, 16), (9, 19), (9, 21), (9, 22), (9, 28), (9, 39), (9, 44), (9, 47), (10, 16), (10, 28), (10, 44), (11, 3), (11, 13), (11, 16), (11, 19), (11, 21), (11, 22), (11, 28), (11, 44), (12, 16), (12, 28), (12, 44), (13, 3), (13, 6), (13, 13), (13, 16), (13, 18), (13, 19), (13, 21), (13, 22), (13, 28), (13, 39), (13, 47), (14, 16), (14, 28), (14, 44), (15, 3), (15, 6), (15, 13), (15, 16), (15, 18), (15, 19), (15, 21), (15, 22), (15, 28), (15, 39), (15, 44), (15, 47), (16, 16), (16, 28), (16, 44), (17, 16), (17, 28), (17, 44), (18, 28), (18, 44), (19, 16), (19, 18), (19, 28), (19, 44), (20, 3), (20, 6), (20, 16), (20, 18), (20, 19), (20, 21), (20, 44), (20, 47), (21, 3), (21, 6), (21, 13), (21, 16), (21, 19), (21, 21), (21, 22), (21, 28), (21, 39), (21, 44), (21, 47), (22, 16), (22, 21), (22, 28), (22, 44), (23, 3), (23, 6), (23, 13), (23, 16), (23, 18), (23, 21), (23, 22), (23, 28), (23, 39), (23, 44), (23, 47), (24, 16), (24, 19), (24, 44), (25, 16), (25, 28), (25, 44), (26, 3), (26, 6), (26, 13), (26, 16), (26, 18), (26, 19), (26, 21), (26, 22), (26, 28), (26, 39), (26, 47), (27, 16), (27, 44), (28, 3), (28, 13), (28, 16), (28, 18), (28, 19), (28, 21), (28, 22), (28, 28), (28, 39), (28, 44), (28, 47), (29, 16), (29, 28), (29, 44), (30, 16), (30, 28), (30, 44), (31, 3), (31, 6), (31, 13), (31, 16), (31, 18), (31, 19), (31, 21), (31, 22), (31, 28), (31, 39), (31, 44), (31, 47), (32, 44), (33, 3), (33, 13), (33, 16), (33, 18), (33, 19), (33, 21), (33, 22), (33, 39), (33, 44), (33, 47), (34, 16), (34, 28), (34, 44), (35, 16), (35, 28), (35, 44), (36, 6), (36, 13), (36, 16), (36, 18), (36, 19), (36, 28), (36, 39), (36, 44), (36, 47), (37, 16), (37, 28), (37, 44), (38, 3), (38, 6), (38, 13), (38, 16), (38, 18), (38, 19), (38, 21), (38, 22), (38, 28), (38, 39), (38, 44), (38, 47), (39, 16), (39, 28), (39, 44), (40, 16), (40, 28), (41, 16), (41, 28), (41, 44), (42, 16), (42, 28), (42, 39), (42, 44), (43, 3), (43, 6), (43, 13), (43, 16), (43, 18), (43, 19), (43, 21), (43, 22), (43, 28), (43, 39), (43, 44), (43, 47), (44, 16), (44, 28), (44, 44), (45, 3), (45, 6), (45, 13), (45, 16), (45, 18), (45, 19), (45, 22), (45, 28), (45, 39), (45, 44), (45, 47), (46, 3), (46, 6), (46, 13), (46, 18), (46, 19), (46, 22), (46, 28), (46, 39), (46, 44), (46, 47), (47, 6), (47, 16), (47, 28), (47, 44), (48, 3), (48, 6), (48, 13), (48, 16), (48, 18), (48, 21), (48, 22), (48, 28), (48, 39), (48, 44), (48, 47), (49, 3), (49, 6), (49, 13), (49, 16), (49, 18), (49, 19), (49, 21), (49, 22), (49, 28), (49, 39), (49, 44), (49, 47)]
----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 450.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_1_M_3.csv

-- Debugging Step: checking extracted solution after solving model**** -- max_e_h
len_rows_res= 13
row_res= [0, 15, 21, 23, 31, 38, 4, 43, 48, 49, 7, 8, 9]
len_cols_res= 10
cols_res= [13, 16, 21, 22, 28, 3, 39, 44, 47, 6]
nb row_names_res, = 13
row_names_res = ['r1', 'r16', 'r22', 'r24', 'r32', 'r39', 'r5', 'r44', 'r49', 'r50', 'r8', 'r9', 'r10']
col_names_res = ['c14', 'c17', 'c22', 'c23', 'c29', 'c4', 'c40', 'c45', 'c48', 'c7']
 nb col_names_res, = 10

----------------------------------------

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.01693 - (Local CPU) 0.01693 - (Global CPU) 0.01693

 Solve status: Optimal Objective value: 450.0 nb_rows 13 nb_cols 10
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(0, 12), (1, 10), (2, 10), (3, 3), (4, 11), (5, 11), (6, 4), (7, 11), (8, 12), (9, 11), (10, 3), (11, 8), (12, 3), (13, 11), (14, 3), (15, 12), (16, 3), (17, 3), (18, 2), (19, 4), (20, 8), (21, 11), (22, 4), (23, 11), (24, 3), (25, 3), (26, 11), (27, 2), (28, 11), (29, 3), (30, 3), (31, 12), (32, 1), (33, 10), (34, 3), (35, 3), (36, 9), (37, 3), (38, 12), (39, 3), (40, 2), (41, 3), (42, 4), (43, 12), (44, 3), (45, 11), (46, 10), (47, 4), (48, 11), (49, 12)]
cols_data = [(3, 24), (6, 22), (13, 25), (16, 47), (18, 22), (19, 23), (21, 23), (22, 22), (28, 45), (39, 24), (44, 45), (47, 23)]
rows_res_set = {0, 4, 38, 7, 8, 9, 43, 15, 48, 49, 21, 23, 31}
cols_res_set = {3, 6, 39, 44, 13, 47, 16, 21, 22, 28}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {3: 24, 6: 22, 13: 25, 16: 47, 18: 22, 19: 23, 21: 23, 22: 22, 28: 45, 39: 24, 44: 45, 47: 23}
row_degree_map = {0: 12, 1: 10, 2: 10, 3: 3, 4: 11, 5: 11, 6: 4, 7: 11, 8: 12, 9: 11, 10: 3, 11: 8, 12: 3, 13: 11, 14: 3, 15: 12, 16: 3, 17: 3, 18: 2, 19: 4, 20: 8, 21: 11, 22: 4, 23: 11, 24: 3, 25: 3, 26: 11, 27: 2, 28: 11, 29: 3, 30: 3, 31: 12, 32: 1, 33: 10, 34: 3, 35: 3, 36: 9, 37: 3, 38: 12, 39: 3, 40: 2, 41: 3, 42: 4, 43: 12, 44: 3, 45: 11, 46: 10, 47: 4, 48: 11, 49: 12}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {3: 13, 6: 13, 13: 13, 16: 13, 18: 0, 19: 0, 21: 13, 22: 13, 28: 13, 39: 13, 44: 13, 47: 13}
row_degree_map reduced = {0: 10, 1: 0, 2: 0, 3: 0, 4: 10, 5: 0, 6: 0, 7: 10, 8: 10, 9: 10, 10: 0, 11: 0, 12: 0, 13: 0, 14: 0, 15: 10, 16: 0, 17: 0, 18: 0, 19: 0, 20: 0, 21: 10, 22: 0, 23: 10, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 10, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 0, 38: 10, 39: 0, 40: 0, 41: 0, 42: 0, 43: 10, 44: 0, 45: 0, 46: 0, 47: 0, 48: 10, 49: 10}
cols_rem   = [(3, 13), (6, 13), (13, 13), (16, 13), (21, 13), (22, 13), (28, 13), (39, 13), (44, 13), (47, 13)]
rows_rem   = [(0, 10), (4, 10), (7, 10), (8, 10), (9, 10), (15, 10), (21, 10), (23, 10), (31, 10), (38, 10), (43, 10), (48, 10), (49, 10)]
 nb_edges_1_rem   = 130
 nb_edges_0_rem   = 0
row_rem_length= 10 col_rem_length = 13
Stats in updata_data : row_rem_length = 10 col_rem_length = 13 nb_edges_0_rem= 0 nb_edges_1_rem= 130  !!!!! density = 1.0


----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining  Rows  : 13
Number of Remaining number Columns : 10
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 130 Density : 1.0 current obj value 450.0
----------------------------------------

----------------------------------------

Exit from the exact  approach  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 13  and cols_res of lenght = 10 and density = 1.0
 Density of the found matrix =  : 1.0
 Original Rows  : [(0, 12), (1, 10), (2, 10), (3, 3), (4, 11), (5, 11), (6, 4), (7, 11), (8, 12), (9, 11), (10, 3), (11, 8), (12, 3), (13, 11), (14, 3), (15, 12), (16, 3), (17, 3), (18, 2), (19, 4), (20, 8), (21, 11), (22, 4), (23, 11), (24, 3), (25, 3), (26, 11), (27, 2), (28, 11), (29, 3), (30, 3), (31, 12), (32, 1), (33, 10), (34, 3), (35, 3), (36, 9), (37, 3), (38, 12), (39, 3), (40, 2), (41, 3), (42, 4), (43, 12), (44, 3), (45, 11), (46, 10), (47, 4), (48, 11), (49, 12)]
 Original Cold  : [(3, 24), (6, 22), (13, 25), (16, 47), (18, 22), (19, 23), (21, 23), (22, 22), (28, 45), (39, 24), (44, 45), (47, 23)]
 Remaining Rows  : [0, 15, 21, 23, 31, 38, 4, 43, 48, 49, 7, 8, 9]
 Remaining  Cols  : [13, 16, 21, 22, 28, 3, 39, 44, 47, 6]
 Remaining Rows with degree : [(0, 10), (4, 10), (7, 10), (8, 10), (9, 10), (15, 10), (21, 10), (23, 10), (31, 10), (38, 10), (43, 10), (48, 10), (49, 10)]
 Remaining  Cols with degree : [(3, 13), (6, 13), (13, 13), (16, 13), (21, 13), (22, 13), (28, 13), (39, 13), (44, 13), (47, 13)]
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 3
        with delta =  0.0
        Found matrix of size : (13, 10)
        and density : 1.0
        and # of ones : 130
        and Heuristic QBC time   : 0.01693
        and Global QBC  time  : 0.01693
        
 Remaining Rows  : [(0, 10), (4, 10), (7, 10), (8, 10), (9, 10), (15, 10), (21, 10), (23, 10), (31, 10), (38, 10), (43, 10), (48, 10), (49, 10)]
 Remaining  Cols  : [(3, 13), (6, 13), (13, 13), (16, 13), (21, 13), (22, 13), (28, 13), (39, 13), (44, 13), (47, 13)]

----------------------------------------------------------------------
 
    End of computations for matrix 3 in  data/data3.csv at level 1 and debug  4
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (13,10), with  density : 1.0 and number of ones: 130
    Global Time (in sec): 0.017
    Total Time in QBC approaches: 0.017
    Time in greedy approach: 0.000,  size of matrix found by greedy : (0,0) 
    With density : 0.000 and # ones : 0 
    Time in heuristic only : 0.017 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 0
    Percentage of greedy approach run time in global run time : 0.00% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.57
    
----------------------------------------------------------------------

 ***Solution Rows indices : [0, 4, 7, 8, 9, 15, 21, 23, 31, 38, 43, 48, 49]
 ***Solution Cols indices : [3, 6, 13, 16, 21, 22, 28, 39, 44, 47]
 Remaining Rows with degree : [(0, 10), (4, 10), (7, 10), (8, 10), (9, 10), (15, 10), (21, 10), (23, 10), (31, 10), (38, 10), (43, 10), (48, 10), (49, 10)]
 Remaining Cols with degree : [(3, 13), (6, 13), (13, 13), (16, 13), (21, 13), (22, 13), (28, 13), (39, 13), (44, 13), (47, 13)]

 Level 0, Matrix 6:
Size Rows: 37
Size Cols: 12

 Level 0 Matrix  7:
Size Rows: 50
Size Cols: 2

 Level 0  Matrix 6 Rows: [(1, 2), (2, 2), (3, 9), (5, 1), (6, 8), (10, 9), (11, 4), (12, 9), (13, 1), (14, 9), (16, 9), (17, 9), (18, 10), (19, 8), (20, 4), (22, 8), (24, 9), (25, 9), (26, 1), (27, 10), (28, 1), (29, 9), (30, 9), (32, 11), (33, 2), (34, 9), (35, 9), (36, 3), (37, 9), (39, 9), (40, 10), (41, 9), (42, 8), (44, 9), (45, 1), (46, 2), (47, 8)]
Level  0  Matrix 6 Cols: [(3, 26), (6, 28), (13, 25), (16, 3), (18, 25), (19, 24), (21, 27), (22, 28), (28, 5), (39, 26), (44, 5), (47, 27)]

 Level  0  Matrix 7 Rows: [(0, 0), (1, 0), (2, 0), (3, 2), (4, 1), (5, 0), (6, 2), (7, 1), (8, 0), (9, 1), (10, 2), (11, 1), (12, 2), (13, 0), (14, 2), (15, 0), (16, 2), (17, 2), (18, 2), (19, 1), (20, 0), (21, 1), (22, 2), (23, 1), (24, 1), (25, 2), (26, 0), (27, 2), (28, 0), (29, 2), (30, 2), (31, 0), (32, 2), (33, 0), (34, 2), (35, 2), (36, 0), (37, 2), (38, 0), (39, 2), (40, 2), (41, 2), (42, 2), (43, 0), (44, 2), (45, 0), (46, 0), (47, 2), (48, 1), (49, 0)]
Level 0  Matrix 7 Cols: [(18, 28), (19, 27)]

----------------------------------------------------------------------
***Stats Current Input for matrix 6 in  data/data3.csv at level 0 and with model:  max_e_c***
Size of current matrix :  37 * 12 = 444 ; dec_conq: 0
number input zeros :  195 ; number input ones :  249
rho =  0.1 ; delta :  0.0
Input density : 0.561 ; density_threshold: 0.57000
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.561 density  and density_threshold= 0.570


I am in the while loop with i= 1 density= 0.5608108108108109 and fixed_threshold= 0.57

I am currently solving row KP_QBr with Input data : ***************

edges = 1608 rho= 0.1 number of columns = 12 number of rows = 37 total_degree_0= 195 RHS= 160.8
----------------------------------------
Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  126.40000000000003
I solved model name = row_knapsack_problem for iteration i =  1 KP time = 0.0 debug : 4

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00522 - (Local CPU) 0.00523 - (Global CPU) 0.00523

 Solve status: Optimal Objective value: 126.40000000000003 nb_rows 13 nb_cols 12
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(1, 2), (2, 2), (3, 9), (5, 1), (6, 8), (10, 9), (11, 4), (12, 9), (13, 1), (14, 9), (16, 9), (17, 9), (18, 10), (19, 8), (20, 4), (22, 8), (24, 9), (25, 9), (26, 1), (27, 10), (28, 1), (29, 9), (30, 9), (32, 11), (33, 2), (34, 9), (35, 9), (36, 3), (37, 9), (39, 9), (40, 10), (41, 9), (42, 8), (44, 9), (45, 1), (46, 2), (47, 8)]
cols_data = [(3, 26), (6, 28), (13, 25), (16, 3), (18, 25), (19, 24), (21, 27), (22, 28), (28, 5), (39, 26), (44, 5), (47, 27)]
rows_res_set = {32, 34, 37, 39, 40, 41, 14, 18, 24, 25, 27, 29, 30}
cols_res_set = {3, 6, 39, 44, 13, 47, 16, 18, 19, 21, 22, 28}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {3: 26, 6: 28, 13: 25, 16: 3, 18: 25, 19: 24, 21: 27, 22: 28, 28: 5, 39: 26, 44: 5, 47: 27}
row_degree_map = {1: 2, 2: 2, 3: 9, 5: 1, 6: 8, 10: 9, 11: 4, 12: 9, 13: 1, 14: 9, 16: 9, 17: 9, 18: 10, 19: 8, 20: 4, 22: 8, 24: 9, 25: 9, 26: 1, 27: 10, 28: 1, 29: 9, 30: 9, 32: 11, 33: 2, 34: 9, 35: 9, 36: 3, 37: 9, 39: 9, 40: 10, 41: 9, 42: 8, 44: 9, 45: 1, 46: 2, 47: 8}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {3: 13, 6: 13, 13: 13, 16: 2, 18: 13, 19: 12, 21: 13, 22: 13, 28: 3, 39: 13, 44: 1, 47: 13}
row_degree_map reduced = {1: 0, 2: 0, 3: 0, 5: 0, 6: 0, 10: 0, 11: 0, 12: 0, 13: 0, 14: 9, 16: 0, 17: 0, 18: 10, 19: 0, 20: 0, 22: 0, 24: 9, 25: 9, 26: 0, 27: 10, 28: 0, 29: 9, 30: 9, 32: 11, 33: 0, 34: 9, 35: 0, 36: 0, 37: 9, 39: 9, 40: 10, 41: 9, 42: 0, 44: 0, 45: 0, 46: 0, 47: 0}
cols_rem   = [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (44, 1), (47, 13)]
rows_rem   = [(14, 9), (18, 10), (24, 9), (25, 9), (27, 10), (29, 9), (30, 9), (32, 11), (34, 9), (37, 9), (39, 9), (40, 10), (41, 9)]
 nb_edges_1_rem   = 122
 nb_edges_0_rem   = 34
row_rem_length= 12 col_rem_length = 13
Stats in updata_data : row_rem_length = 12 col_rem_length = 13 nb_edges_0_rem= 34 nb_edges_1_rem= 122  !!!!! density = 0.782051282051282

----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (13, 12) and density : 0.782051282051282 and number of remaining ones : 122
        
Remaining  Rows before colling KP col : [(14, 9), (18, 10), (24, 9), (25, 9), (27, 10), (29, 9), (30, 9), (32, 11), (34, 9), (37, 9), (39, 9), (40, 10), (41, 9)]
Remaining Columns  before colling KP col : [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (44, 1), (47, 13)]
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (44, 1), (47, 13)]
nb_edges_0 = 34 rho= 0.1 # of rows = 13 # of columns= 12 total_degree_0= 34 RHS= 3.4000000000000004
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00482 - (Local CPU) 0.00482 - (Global CPU) 0.01004

 Solve status: Optimal Objective value: 0.2833333333333333 nb_rows 13 nb_cols 11
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(14, 9), (18, 10), (24, 9), (25, 9), (27, 10), (29, 9), (30, 9), (32, 11), (34, 9), (37, 9), (39, 9), (40, 10), (41, 9)]
cols_data = [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (44, 1), (47, 13)]
rows_res_set = {32, 34, 37, 39, 40, 41, 14, 18, 24, 25, 27, 29, 30}
cols_res_set = {3, 6, 39, 13, 47, 16, 18, 19, 21, 22, 28}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {3: 13, 6: 13, 13: 13, 16: 2, 18: 13, 19: 12, 21: 13, 22: 13, 28: 3, 39: 13, 44: 1, 47: 13}
row_degree_map = {14: 9, 18: 10, 24: 9, 25: 9, 27: 10, 29: 9, 30: 9, 32: 11, 34: 9, 37: 9, 39: 9, 40: 10, 41: 9}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {3: 13, 6: 13, 13: 13, 16: 2, 18: 13, 19: 12, 21: 13, 22: 13, 28: 3, 39: 13, 44: 0, 47: 13}
row_degree_map reduced = {14: 9, 18: 10, 24: 9, 25: 9, 27: 10, 29: 9, 30: 9, 32: 11, 34: 9, 37: 9, 39: 9, 40: 9, 41: 9}
cols_rem   = [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (47, 13)]
rows_rem   = [(14, 9), (18, 10), (24, 9), (25, 9), (27, 10), (29, 9), (30, 9), (32, 11), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
 nb_edges_1_rem   = 121
 nb_edges_0_rem   = 22
row_rem_length= 11 col_rem_length = 13
Stats in updata_data : row_rem_length = 11 col_rem_length = 13 nb_edges_0_rem= 22 nb_edges_1_rem= 121  !!!!! density = 0.8461538461538461

----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (13, 11) and density : 0.8461538461538461 and number of remaining ones : 122
        

----------------------------------------
Remaining  Rows before colling KP col : [(14, 9), (18, 10), (24, 9), (25, 9), (27, 10), (29, 9), (30, 9), (32, 11), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
Remaining Columns  before colling KP col : [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (47, 13)]
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.846 > 0.57
            It took me : 0.010 time
            Found matrix of size : (13, 11) and density : 0.846
            
----------------------------------------
edges_1_in = [(14, 3), (14, 6), (14, 13), (14, 18), (14, 19), (14, 21), (14, 22), (14, 39), (14, 47), (18, 3), (18, 6), (18, 13), (18, 16), (18, 18), (18, 19), (18, 21), (18, 22), (18, 39), (18, 47), (24, 3), (24, 6), (24, 13), (24, 18), (24, 21), (24, 22), (24, 28), (24, 39), (24, 47), (25, 3), (25, 6), (25, 13), (25, 18), (25, 19), (25, 21), (25, 22), (25, 39), (25, 47), (27, 3), (27, 6), (27, 13), (27, 18), (27, 19), (27, 21), (27, 22), (27, 28), (27, 39), (27, 47), (29, 3), (29, 6), (29, 13), (29, 18), (29, 19), (29, 21), (29, 22), (29, 39), (29, 47), (30, 3), (30, 6), (30, 13), (30, 18), (30, 19), (30, 21), (30, 22), (30, 39), (30, 47), (32, 3), (32, 6), (32, 13), (32, 16), (32, 18), (32, 19), (32, 21), (32, 22), (32, 28), (32, 39), (32, 47), (34, 3), (34, 6), (34, 13), (34, 18), (34, 19), (34, 21), (34, 22), (34, 39), (34, 47), (37, 3), (37, 6), (37, 13), (37, 18), (37, 19), (37, 21), (37, 22), (37, 39), (37, 47), (39, 3), (39, 6), (39, 13), (39, 18), (39, 19), (39, 21), (39, 22), (39, 39), (39, 47), (40, 3), (40, 6), (40, 13), (40, 18), (40, 19), (40, 21), (40, 22), (40, 39), (40, 47), (41, 3), (41, 6), (41, 13), (41, 18), (41, 19), (41, 21), (41, 22), (41, 39), (41, 47)]
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

 Start exact approaches with :
rows_in = [(14, 9), (18, 10), (24, 9), (25, 9), (27, 10), (29, 9), (30, 9), (32, 11), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
cols_in = [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (47, 13)]
row_names_in = ['r15', 'r19', 'r25', 'r26', 'r28', 'r30', 'r31', 'r33', 'r35', 'r38', 'r40', 'r41', 'r42']
col_names_in = ['c4', 'c7', 'c14', 'c17', 'c19', 'c20', 'c22', 'c23', 'c29', 'c40', 'c48']
edges_1_in = [(14, 3), (14, 6), (14, 13), (14, 18), (14, 19), (14, 21), (14, 22), (14, 39), (14, 47), (18, 3), (18, 6), (18, 13), (18, 16), (18, 18), (18, 19), (18, 21), (18, 22), (18, 39), (18, 47), (24, 3), (24, 6), (24, 13), (24, 18), (24, 21), (24, 22), (24, 28), (24, 39), (24, 47), (25, 3), (25, 6), (25, 13), (25, 18), (25, 19), (25, 21), (25, 22), (25, 39), (25, 47), (27, 3), (27, 6), (27, 13), (27, 18), (27, 19), (27, 21), (27, 22), (27, 28), (27, 39), (27, 47), (29, 3), (29, 6), (29, 13), (29, 18), (29, 19), (29, 21), (29, 22), (29, 39), (29, 47), (30, 3), (30, 6), (30, 13), (30, 18), (30, 19), (30, 21), (30, 22), (30, 39), (30, 47), (32, 3), (32, 6), (32, 13), (32, 16), (32, 18), (32, 19), (32, 21), (32, 22), (32, 28), (32, 39), (32, 47), (34, 3), (34, 6), (34, 13), (34, 18), (34, 19), (34, 21), (34, 22), (34, 39), (34, 47), (37, 3), (37, 6), (37, 13), (37, 18), (37, 19), (37, 21), (37, 22), (37, 39), (37, 47), (39, 3), (39, 6), (39, 13), (39, 18), (39, 19), (39, 21), (39, 22), (39, 39), (39, 47), (40, 3), (40, 6), (40, 13), (40, 18), (40, 19), (40, 21), (40, 22), (40, 39), (40, 47), (41, 3), (41, 6), (41, 13), (41, 18), (41, 19), (41, 21), (41, 22), (41, 39), (41, 47)]
----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 228.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_0_M_6.csv

-- Debugging Step: checking extracted solution after solving model**** -- max_e_h
len_rows_res= 12
row_res= [14, 18, 25, 27, 29, 30, 32, 34, 37, 39, 40, 41]
len_cols_res= 9
cols_res= [13, 18, 19, 21, 22, 3, 39, 47, 6]
nb row_names_res, = 12
row_names_res = ['r15', 'r19', 'r26', 'r28', 'r30', 'r31', 'r33', 'r35', 'r38', 'r40', 'r41', 'r42']
col_names_res = ['c14', 'c19', 'c20', 'c22', 'c23', 'c4', 'c40', 'c48', 'c7']
 nb col_names_res, = 9

----------------------------------------

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.00692 - (Local CPU) 0.00692 - (Global CPU) 0.00692

 Solve status: Optimal Objective value: 228.0 nb_rows 12 nb_cols 9
----------------------------------------

-- Update Debugging Step 1 : input data  and first updates --
rows_data = [(14, 9), (18, 10), (24, 9), (25, 9), (27, 10), (29, 9), (30, 9), (32, 11), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
cols_data = [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (47, 13)]
rows_res_set = {32, 34, 37, 39, 40, 41, 14, 18, 25, 27, 29, 30}
cols_res_set = {3, 6, 39, 13, 47, 18, 19, 21, 22}

-- Update Debugging Step 2 : input data  and later  updates --

col_degree_map = {3: 13, 6: 13, 13: 13, 16: 2, 18: 13, 19: 12, 21: 13, 22: 13, 28: 3, 39: 13, 47: 13}
row_degree_map = {14: 9, 18: 10, 24: 9, 25: 9, 27: 10, 29: 9, 30: 9, 32: 11, 34: 9, 37: 9, 39: 9, 40: 9, 41: 9}

-- Update Debugging Step 3 : input data  and later  updates --

col_degree_map reduced = {3: 12, 6: 12, 13: 12, 16: 0, 18: 12, 19: 12, 21: 12, 22: 12, 28: 0, 39: 12, 47: 12}
row_degree_map reduced = {14: 9, 18: 9, 24: 0, 25: 9, 27: 9, 29: 9, 30: 9, 32: 9, 34: 9, 37: 9, 39: 9, 40: 9, 41: 9}
cols_rem   = [(3, 12), (6, 12), (13, 12), (18, 12), (19, 12), (21, 12), (22, 12), (39, 12), (47, 12)]
rows_rem   = [(14, 9), (18, 9), (25, 9), (27, 9), (29, 9), (30, 9), (32, 9), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
 nb_edges_1_rem   = 108
 nb_edges_0_rem   = 0
row_rem_length= 9 col_rem_length = 12
Stats in updata_data : row_rem_length = 9 col_rem_length = 12 nb_edges_0_rem= 0 nb_edges_1_rem= 108  !!!!! density = 1.0


----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining  Rows  : 12
Number of Remaining number Columns : 9
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 108 Density : 1.0 current obj value 228.0
----------------------------------------

----------------------------------------

Exit from the exact  approach  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 12  and cols_res of lenght = 9 and density = 1.0
 Density of the found matrix =  : 1.0
 Original Rows  : [(14, 9), (18, 10), (24, 9), (25, 9), (27, 10), (29, 9), (30, 9), (32, 11), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
 Original Cold  : [(3, 13), (6, 13), (13, 13), (16, 2), (18, 13), (19, 12), (21, 13), (22, 13), (28, 3), (39, 13), (47, 13)]
 Remaining Rows  : [14, 18, 25, 27, 29, 30, 32, 34, 37, 39, 40, 41]
 Remaining  Cols  : [13, 18, 19, 21, 22, 3, 39, 47, 6]
 Remaining Rows with degree : [(14, 9), (18, 9), (25, 9), (27, 9), (29, 9), (30, 9), (32, 9), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
 Remaining  Cols with degree : [(3, 12), (6, 12), (13, 12), (18, 12), (19, 12), (21, 12), (22, 12), (39, 12), (47, 12)]
 !!!!!!!!!!!!!!!!!! I got a lower bound  108

 Initial point before solving:
ROWS: {14: 1, 18: 1, 24: 0, 25: 1, 27: 1, 29: 1, 30: 1, 32: 1, 34: 1, 37: 1, 39: 1, 40: 1, 41: 1}
COLS: {3: 1, 6: 1, 13: 1, 16: 0, 18: 1, 19: 1, 21: 1, 22: 1, 28: 0, 39: 1, 47: 1}
CELLS: {(14, 3): 1, (14, 6): 1, (14, 13): 1, (14, 18): 1, (14, 19): 1, (14, 21): 1, (14, 22): 1, (14, 39): 1, (14, 47): 1, (18, 3): 1, (18, 6): 1, (18, 13): 1, (18, 16): 1, (18, 18): 1, (18, 19): 1, (18, 21): 1, (18, 22): 1, (18, 39): 1, (18, 47): 1, (24, 3): 1, (24, 6): 1, (24, 13): 1, (24, 18): 1, (24, 21): 1, (24, 22): 1, (24, 28): 1, (24, 39): 1, (24, 47): 1, (25, 3): 1, (25, 6): 1, (25, 13): 1, (25, 18): 1, (25, 19): 1, (25, 21): 1, (25, 22): 1, (25, 39): 1, (25, 47): 1, (27, 3): 1, (27, 6): 1, (27, 13): 1, (27, 18): 1, (27, 19): 1, (27, 21): 1, (27, 22): 1, (27, 28): 1, (27, 39): 1, (27, 47): 1, (29, 3): 1, (29, 6): 1, (29, 13): 1, (29, 18): 1, (29, 19): 1, (29, 21): 1, (29, 22): 1, (29, 39): 1, (29, 47): 1, (30, 3): 1, (30, 6): 1, (30, 13): 1, (30, 18): 1, (30, 19): 1, (30, 21): 1, (30, 22): 1, (30, 39): 1, (30, 47): 1, (32, 3): 1, (32, 6): 1, (32, 13): 1, (32, 16): 1, (32, 18): 1, (32, 19): 1, (32, 21): 1, (32, 22): 1, (32, 28): 1, (32, 39): 1, (32, 47): 1, (34, 3): 1, (34, 6): 1, (34, 13): 1, (34, 18): 1, (34, 19): 1, (34, 21): 1, (34, 22): 1, (34, 39): 1, (34, 47): 1, (37, 3): 1, (37, 6): 1, (37, 13): 1, (37, 18): 1, (37, 19): 1, (37, 21): 1, (37, 22): 1, (37, 39): 1, (37, 47): 1, (39, 3): 1, (39, 6): 1, (39, 13): 1, (39, 18): 1, (39, 19): 1, (39, 21): 1, (39, 22): 1, (39, 39): 1, (39, 47): 1, (40, 3): 1, (40, 6): 1, (40, 13): 1, (40, 18): 1, (40, 19): 1, (40, 21): 1, (40, 22): 1, (40, 39): 1, (40, 47): 1, (41, 3): 1, (41, 6): 1, (41, 13): 1, (41, 18): 1, (41, 19): 1, (41, 21): 1, (41, 22): 1, (41, 39): 1, (41, 47): 1}

----------------------------------------
******** Solving model  ******** max_e_wr  with delta =  0.0
 # rows_data = 13  # cols_data = 11  # edges = 121
row_threshold= 2
col_threshold= 2

----------------------------------------
----------------------------------------------------------------------
Model status: Not Solved
----------------------------------------------------------------------
Model status: Not Solved

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 0.00803 - (Local CPU) 0.00803 - (Global CPU) 0.01495

 Solve status: Not Solved Objective value: 121 nb_rows 12 nb_cols 9
----------------------------------------
*****Model in warm start is infeasible.!!!*** 
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 6
        with delta =  0.0
        Found matrix of size : (12, 9)
        and density : 1.0
        and # of ones : 108
        and Heuristic QBC time   : 0.00692
        and Global QBC  time  : 0.01495
        
 Remaining Rows  : [(14, 9), (18, 9), (25, 9), (27, 9), (29, 9), (30, 9), (32, 9), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
 Remaining  Cols  : [(3, 12), (6, 12), (13, 12), (18, 12), (19, 12), (21, 12), (22, 12), (39, 12), (47, 12)]

----------------------------------------------------------------------
 
    End of computations for matrix 6 in  data/data3.csv at level 0 and debug  4
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (12,9), with  density : 1.0 and number of ones: 108
    Global Time (in sec): 0.025
    Total Time in QBC approaches: 0.015
    Time in greedy approach: 0.010,  size of matrix found by greedy : (13,11) 
    With density : 0.846 and # ones : 121 
    Time in heuristic only : 0.007 
    Time in warm start only : 0.008
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 40.18% 
    Percentage of heuristic run time in QBC run time : 46.29%
    With zero deletion rate (rho): 0.1 and threshold: 0.57
    
----------------------------------------------------------------------

 ***Solution Rows indices : [14, 18, 25, 27, 29, 30, 32, 34, 37, 39, 40, 41]
 ***Solution Cols indices : [3, 6, 13, 18, 19, 21, 22, 39, 47]
 Remaining Rows with degree : [(14, 9), (18, 9), (25, 9), (27, 9), (29, 9), (30, 9), (32, 9), (34, 9), (37, 9), (39, 9), (40, 9), (41, 9)]
 Remaining Cols with degree : [(3, 12), (6, 12), (13, 12), (18, 12), (19, 12), (21, 12), (22, 12), (39, 12), (47, 12)]
 Return from 6 with winning node = 6
 Node 7 has been fathomed because of min number rows = 5 or min number columns = 5 
return from 3 with winning node = 6
return from 3 with winning node = 6
return from 1 with winning node = 5

Final return from matrix 1 with winning node  5  and  global time  0.186 !!!

End of computations !!!
