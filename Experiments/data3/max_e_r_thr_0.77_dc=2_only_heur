----------------------------------------
 Input Data in csv files : data/data3.csv
Number Rows Data : 50
Number Cols Data : 50
Number Edges_1 : 892
Number Edges_0 : 1608
----------------------------------------

----------------------------------------------------------------------
***Stats Current Input for matrix 1 in  data/data3.csv at level 2 and with model:  max_e_r***
Size of current matrix :  50 * 50 = 2500 ; dec_conq: 2
number input zeros :  892 ; number input ones :  1608
rho =  0.1 ; delta :  0.0
Input density : 0.643 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.643 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.6432 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  66.84705882352941
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 66.84705882352941 KP time = 0.0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01587 - (Local CPU) 0.01587 - (Global CPU) 0.01587

 Solve status: Optimal Objective value: 66.84705882352941 nb_rows 45 nb_cols 50
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (45, 50) and density : 0.6817777777777778 and number of remaining ones : 1534
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 45), (1, 43), (2, 45), (3, 24), (4, 25), (5, 43), (6, 22), (7, 24), (8, 24), (9, 43), (10, 25), (11, 23), (12, 26), (13, 25), (14, 24), (15, 24), (16, 43), (17, 25), (18, 22), (19, 23), (20, 25), (21, 23), (22, 22), (23, 43), (24, 26), (25, 24), (26, 28), (27, 44), (28, 40), (29, 40), (30, 25), (31, 27), (32, 26), (33, 26), (34, 42), (35, 24), (36, 24), (37, 45), (38, 42), (39, 24), (40, 42), (41, 26), (42, 44), (43, 24), (44, 40), (45, 41), (46, 25), (47, 23), (48, 27), (49, 24)]
nb_edges_0 = 716 rho= 0.1 # of rows = 45 # of columns= 50 total_degree_0= 716 RHS= 71.60000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 66.84705882352941 KP time = 0.015873582975473255 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00565 - (Local CPU) 0.00565 - (Global CPU) 0.02153

 Solve status: Optimal Objective value: 68.71818181818182 nb_rows 45 nb_cols 46
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (45, 46) and density : 0.6980676328502415 and number of remaining ones : 1534
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.698 density  and density_threshold= 0.770


I am in the while loop with i= 2 density= 0.6980676328502415 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  33.46551724137931
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 33.46551724137931 KP time = 0.021528373938053846 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00548 - (Local CPU) 0.00548 - (Global CPU) 0.02700

 Solve status: Optimal Objective value: 33.46551724137931 nb_rows 42 nb_cols 46
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (42, 46) and density : 0.722567287784679 and number of remaining ones : 1396
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 42), (1, 41), (2, 42), (3, 24), (4, 25), (5, 40), (7, 23), (8, 23), (9, 41), (10, 25), (12, 26), (13, 25), (14, 24), (15, 23), (16, 40), (17, 25), (19, 23), (20, 25), (21, 23), (23, 41), (24, 25), (25, 24), (26, 28), (27, 41), (28, 37), (29, 38), (30, 25), (31, 27), (32, 26), (33, 26), (34, 39), (35, 24), (36, 24), (37, 42), (38, 40), (39, 24), (40, 39), (41, 26), (42, 41), (43, 24), (44, 38), (45, 38), (46, 25), (47, 23), (48, 27), (49, 24)]
nb_edges_0 = 536 rho= 0.1 # of rows = 42 # of columns= 46 total_degree_0= 536 RHS= 53.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 33.46551724137931 KP time = 0.027004540897905827 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00518 - (Local CPU) 0.00518 - (Global CPU) 0.03218

 Solve status: Optimal Objective value: 64.8842105263158 nb_rows 42 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (42, 43) and density : 0.7347729789590255 and number of remaining ones : 1396
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.735 density  and density_threshold= 0.770


I am in the while loop with i= 3 density= 0.7347729789590255 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  31.319230769230767
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 31.319230769230767 KP time = 0.032182123919483274 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00521 - (Local CPU) 0.00521 - (Global CPU) 0.03739

 Solve status: Optimal Objective value: 31.319230769230767 nb_rows 40 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (40, 43) and density : 0.7517441860465116 and number of remaining ones : 1293
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 40), (1, 39), (2, 40), (3, 24), (4, 25), (5, 38), (7, 23), (8, 23), (9, 39), (10, 25), (12, 26), (13, 25), (14, 24), (16, 38), (17, 25), (19, 23), (20, 25), (23, 39), (24, 25), (25, 24), (26, 28), (27, 39), (28, 35), (29, 36), (30, 25), (31, 27), (32, 26), (33, 26), (34, 37), (35, 24), (36, 24), (37, 40), (38, 38), (39, 24), (40, 37), (41, 26), (42, 39), (43, 24), (44, 36), (45, 36), (46, 25), (48, 27), (49, 24)]
nb_edges_0 = 427 rho= 0.1 # of rows = 40 # of columns= 43 total_degree_0= 427 RHS= 42.7
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 31.319230769230767 KP time = 0.037389498960692436 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00511 - (Local CPU) 0.00511 - (Global CPU) 0.04250

 Solve status: Optimal Objective value: 57.77058823529412 nb_rows 40 nb_cols 40
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (40, 40) and density : 0.765 and number of remaining ones : 1293
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.765 density  and density_threshold= 0.770


I am in the while loop with i= 4 density= 0.765 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  27.791304347826088
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 27.791304347826088 KP time = 0.04249887395417318 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00519 - (Local CPU) 0.00519 - (Global CPU) 0.04769

 Solve status: Optimal Objective value: 27.791304347826088 nb_rows 38 nb_cols 40
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (38, 40) and density : 0.7828947368421053 and number of remaining ones : 1190
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 38), (1, 37), (2, 38), (3, 24), (4, 25), (5, 36), (9, 37), (10, 25), (12, 26), (13, 25), (14, 24), (16, 36), (17, 25), (20, 25), (23, 37), (24, 25), (25, 24), (26, 28), (27, 37), (28, 34), (29, 34), (30, 25), (31, 26), (32, 26), (33, 26), (34, 36), (35, 24), (36, 24), (37, 38), (38, 36), (39, 24), (40, 36), (41, 25), (42, 37), (43, 24), (44, 34), (45, 34), (46, 25), (48, 26), (49, 24)]
nb_edges_0 = 330 rho= 0.1 # of rows = 38 # of columns= 40 total_degree_0= 330 RHS= 33.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 27.791304347826088 KP time = 0.047687706944998354 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00498 - (Local CPU) 0.00498 - (Global CPU) 0.05267

 Solve status: Optimal Objective value: 56.57142857142857 nb_rows 38 nb_cols 37
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (38, 37) and density : 0.7951635846372689 and number of remaining ones : 1190
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 4 iterations
            Density : 0.795 > 0.77
            It took me : 0.053 time
            Found matrix of size : (38, 37) and density : 0.795
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 1350.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_2_M_1.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.10208 - (Local CPU) 0.10208 - (Global CPU) 0.10208

 Solve status: Optimal Objective value: 1350.0 nb_rows 12 nb_cols 30
----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 12
Number of Remaining number Columns : 30
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 360 Density : 1.0 current obj value 1350.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 12  and cols_res of lenght = 30
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 1
        with delta =  0.0
        Found matrix of size : (12, 30)
        and density : 1.0
        and # of ones : 360
        and Heuristic QBC time   : 0.10208
        and Global QBC  time  : 0.10208
        
 Remaining Rows  : [0, 1, 11, 15, 2, 20, 26, 33, 36, 45, 48, 7]
 Remaining  Cols  : [0, 1, 10, 12, 16, 2, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 4, 40, 41, 42, 43, 45, 46, 48, 49, 5, 9]

----------------------------------------------------------------------
 
    End of computations for matrix 1 in  data/data3.csv at level 2 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (12,30), with  density : 1.0 and number of ones: 360
    Global Time (in sec): 0.155
    Total Time in QBC approaches: 0.102
    Time in greedy approach: 0.053,  size of matrix found by greedy : (38,37) 
    With density : 0.795 and # ones : 1118 
    Time in heuristic only : 0.102 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 4
    Percentage of greedy approach run time in global run time : 34.03% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

rows = [(0, 0), (1, 4), (2, 2), (3, 37), (4, 3), (5, 4), (6, 31), (7, 1), (8, 2), (9, 5), (10, 31), (11, 4), (12, 32), (13, 4), (14, 33), (15, 0), (16, 32), (17, 34), (18, 35), (19, 33), (20, 4), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (26, 1), (27, 33), (28, 3), (29, 33), (30, 36), (31, 4), (32, 33), (33, 2), (34, 32), (35, 32), (36, 3), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (43, 2), (44, 31), (45, 1), (46, 2), (47, 32), (48, 3), (49, 2)]
cols = [(0, 0), (1, 5), (2, 0), (3, 26), (4, 25), (5, 2), (6, 28), (7, 26), (8, 26), (9, 2), (10, 25), (11, 27), (12, 23), (13, 25), (14, 26), (15, 26), (16, 3), (17, 25), (18, 28), (19, 27), (20, 25), (21, 27), (22, 28), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 5), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (37, 0), (38, 3), (39, 26), (40, 3), (41, 24), (42, 3), (43, 26), (44, 5), (45, 5), (46, 25), (47, 27), (48, 23), (49, 26)]
edges_1 = [(1, 6), (1, 14), (1, 17), (1, 44), (2, 22), (2, 47), (3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 42), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (4, 9), (4, 18), (4, 40), (5, 34), (5, 36), (5, 44), (5, 45), (6, 3), (6, 4), (6, 6), (6, 7), (6, 8), (6, 10), (6, 11), (6, 12), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (6, 22), (6, 24), (6, 25), (6, 26), (6, 30), (6, 32), (6, 33), (6, 35), (6, 36), (6, 39), (6, 41), (6, 43), (6, 46), (6, 47), (6, 48), (6, 49), (7, 19), (8, 29), (8, 40), (9, 8), (9, 18), (9, 23), (9, 25), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 10), (10, 11), (10, 12), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 20), (10, 21), (10, 22), (10, 24), (10, 25), (10, 26), (10, 30), (10, 31), (10, 32), (10, 33), (10, 35), (10, 36), (10, 39), (10, 41), (10, 43), (10, 46), (10, 47), (10, 49), (11, 6), (11, 18), (11, 39), (11, 47), (12, 3), (12, 4), (12, 6), (12, 7), (12, 8), (12, 10), (12, 11), (12, 12), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 20), (12, 21), (12, 22), (12, 24), (12, 25), (12, 29), (12, 30), (12, 31), (12, 33), (12, 35), (12, 36), (12, 39), (12, 41), (12, 43), (12, 46), (12, 47), (12, 48), (12, 49), (13, 15), (13, 43), (13, 44), (13, 45), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 24), (14, 25), (14, 26), (14, 30), (14, 31), (14, 32), (14, 33), (14, 35), (14, 36), (14, 39), (14, 41), (14, 43), (14, 46), (14, 47), (14, 48), (14, 49), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 20), (16, 21), (16, 22), (16, 24), (16, 26), (16, 30), (16, 31), (16, 32), (16, 33), (16, 35), (16, 36), (16, 39), (16, 41), (16, 43), (16, 46), (16, 47), (16, 48), (16, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 27), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 42), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 1), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 16), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (19, 1), (19, 3), (19, 4), (19, 6), (19, 7), (19, 10), (19, 11), (19, 12), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 20), (19, 21), (19, 22), (19, 24), (19, 25), (19, 26), (19, 29), (19, 30), (19, 31), (19, 32), (19, 33), (19, 35), (19, 36), (19, 39), (19, 41), (19, 43), (19, 46), (19, 47), (19, 48), (19, 49), (20, 13), (20, 22), (20, 28), (20, 39), (21, 4), (21, 7), (21, 18), (21, 49), (22, 3), (22, 4), (22, 6), (22, 7), (22, 8), (22, 10), (22, 11), (22, 12), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 20), (22, 22), (22, 24), (22, 25), (22, 30), (22, 31), (22, 32), (22, 33), (22, 35), (22, 36), (22, 39), (22, 41), (22, 43), (22, 46), (22, 47), (22, 48), (22, 49), (23, 1), (23, 5), (23, 19), (23, 32), (24, 3), (24, 4), (24, 6), (24, 7), (24, 8), (24, 10), (24, 11), (24, 12), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 24), (24, 25), (24, 26), (24, 28), (24, 30), (24, 31), (24, 32), (24, 33), (24, 35), (24, 36), (24, 39), (24, 41), (24, 43), (24, 45), (24, 46), (24, 47), (24, 48), (24, 49), (25, 1), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (26, 44), (27, 3), (27, 4), (27, 6), (27, 7), (27, 8), (27, 10), (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 20), (27, 21), (27, 22), (27, 24), (27, 25), (27, 26), (27, 28), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 39), (27, 43), (27, 46), (27, 47), (27, 49), (28, 6), (28, 25), (28, 45), (29, 3), (29, 4), (29, 6), (29, 7), (29, 8), (29, 10), (29, 11), (29, 12), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 20), (29, 21), (29, 22), (29, 24), (29, 25), (29, 26), (29, 30), (29, 31), (29, 32), (29, 33), (29, 35), (29, 36), (29, 39), (29, 41), (29, 43), (29, 46), (29, 47), (29, 48), (29, 49), (30, 1), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (31, 12), (31, 20), (31, 29), (31, 36), (32, 3), (32, 4), (32, 6), (32, 7), (32, 8), (32, 10), (32, 11), (32, 12), (32, 13), (32, 14), (32, 15), (32, 16), (32, 17), (32, 18), (32, 19), (32, 20), (32, 21), (32, 22), (32, 24), (32, 25), (32, 28), (32, 30), (32, 31), (32, 32), (32, 35), (32, 36), (32, 39), (32, 41), (32, 43), (32, 46), (32, 47), (32, 48), (32, 49), (33, 6), (33, 28), (34, 3), (34, 4), (34, 6), (34, 7), (34, 8), (34, 10), (34, 11), (34, 12), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 20), (34, 21), (34, 22), (34, 24), (34, 25), (34, 26), (34, 30), (34, 31), (34, 32), (34, 33), (34, 35), (34, 39), (34, 41), (34, 43), (34, 46), (34, 47), (34, 48), (34, 49), (35, 3), (35, 4), (35, 6), (35, 7), (35, 8), (35, 10), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 20), (35, 21), (35, 22), (35, 24), (35, 25), (35, 26), (35, 30), (35, 31), (35, 32), (35, 33), (35, 35), (35, 36), (35, 39), (35, 41), (35, 43), (35, 46), (35, 47), (35, 48), (35, 49), (36, 3), (36, 21), (36, 22), (37, 3), (37, 4), (37, 6), (37, 7), (37, 8), (37, 10), (37, 11), (37, 12), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 20), (37, 21), (37, 22), (37, 24), (37, 25), (37, 26), (37, 30), (37, 32), (37, 33), (37, 35), (37, 36), (37, 39), (37, 40), (37, 41), (37, 43), (37, 46), (37, 47), (37, 48), (37, 49), (38, 7), (38, 15), (38, 29), (38, 34), (38, 38), (39, 3), (39, 4), (39, 6), (39, 8), (39, 10), (39, 11), (39, 12), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 20), (39, 21), (39, 22), (39, 24), (39, 25), (39, 26), (39, 30), (39, 31), (39, 32), (39, 33), (39, 35), (39, 36), (39, 38), (39, 39), (39, 41), (39, 43), (39, 46), (39, 47), (39, 48), (39, 49), (40, 3), (40, 4), (40, 6), (40, 7), (40, 8), (40, 9), (40, 10), (40, 11), (40, 12), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 20), (40, 21), (40, 22), (40, 23), (40, 25), (40, 26), (40, 30), (40, 31), (40, 32), (40, 33), (40, 35), (40, 36), (40, 39), (40, 41), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 3), (41, 4), (41, 6), (41, 7), (41, 8), (41, 10), (41, 11), (41, 12), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 20), (41, 21), (41, 22), (41, 24), (41, 25), (41, 26), (41, 30), (41, 31), (41, 32), (41, 33), (41, 35), (41, 36), (41, 39), (41, 41), (41, 43), (41, 46), (41, 47), (41, 48), (41, 49), (42, 3), (42, 4), (42, 5), (42, 6), (42, 7), (42, 8), (42, 10), (42, 11), (42, 12), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 20), (42, 21), (42, 22), (42, 24), (42, 25), (42, 26), (42, 30), (42, 31), (42, 32), (42, 33), (42, 35), (42, 36), (42, 41), (42, 43), (42, 46), (42, 47), (42, 48), (42, 49), (43, 11), (43, 27), (44, 3), (44, 4), (44, 6), (44, 7), (44, 8), (44, 10), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 20), (44, 21), (44, 22), (44, 24), (44, 25), (44, 26), (44, 30), (44, 31), (44, 33), (44, 35), (44, 36), (44, 39), (44, 41), (44, 43), (44, 46), (44, 47), (44, 48), (44, 49), (45, 21), (46, 16), (46, 21), (47, 3), (47, 4), (47, 7), (47, 8), (47, 10), (47, 11), (47, 12), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 20), (47, 21), (47, 22), (47, 24), (47, 25), (47, 26), (47, 30), (47, 31), (47, 32), (47, 33), (47, 35), (47, 36), (47, 39), (47, 41), (47, 43), (47, 46), (47, 47), (47, 48), (47, 49), (48, 11), (48, 19), (48, 38), (49, 8), (49, 42)]
rows_res = [0, 1, 11, 15, 2, 20, 26, 33, 36, 45, 48, 7]
cols_res = [0, 1, 10, 12, 16, 2, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 4, 40, 41, 42, 43, 45, 46, 48, 49, 5, 9]
dec_conq= 2

 Level 1, Matrix 2:
Size Rows: 38
Size Cols: 50

 Level 1 Matrix  3:
Size Rows: 50
Size Cols: 20

 Level 1  Matrix 2 Rows: [(3, 37), (4, 3), (5, 4), (6, 31), (8, 2), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 35), (19, 33), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (27, 33), (28, 3), (29, 33), (30, 36), (31, 4), (32, 33), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (43, 2), (44, 31), (46, 2), (47, 32), (49, 2)]
Level  1  Matrix 2 Cols: [(0, 0), (1, 5), (2, 0), (3, 25), (4, 25), (5, 2), (6, 25), (7, 26), (8, 26), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 25), (15, 26), (16, 3), (17, 24), (18, 27), (19, 25), (20, 25), (21, 25), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 3), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (37, 0), (38, 2), (39, 24), (40, 3), (41, 24), (42, 3), (43, 26), (44, 3), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)]
Level  1  Matrix 2 Edges : [(3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 42), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (4, 9), (4, 18), (4, 40), (5, 34), (5, 36), (5, 44), (5, 45), (6, 3), (6, 4), (6, 6), (6, 7), (6, 8), (6, 10), (6, 11), (6, 12), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (6, 22), (6, 24), (6, 25), (6, 26), (6, 30), (6, 32), (6, 33), (6, 35), (6, 36), (6, 39), (6, 41), (6, 43), (6, 46), (6, 47), (6, 48), (6, 49), (8, 29), (8, 40), (9, 8), (9, 18), (9, 23), (9, 25), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 10), (10, 11), (10, 12), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 20), (10, 21), (10, 22), (10, 24), (10, 25), (10, 26), (10, 30), (10, 31), (10, 32), (10, 33), (10, 35), (10, 36), (10, 39), (10, 41), (10, 43), (10, 46), (10, 47), (10, 49), (12, 3), (12, 4), (12, 6), (12, 7), (12, 8), (12, 10), (12, 11), (12, 12), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 20), (12, 21), (12, 22), (12, 24), (12, 25), (12, 29), (12, 30), (12, 31), (12, 33), (12, 35), (12, 36), (12, 39), (12, 41), (12, 43), (12, 46), (12, 47), (12, 48), (12, 49), (13, 15), (13, 43), (13, 44), (13, 45), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 24), (14, 25), (14, 26), (14, 30), (14, 31), (14, 32), (14, 33), (14, 35), (14, 36), (14, 39), (14, 41), (14, 43), (14, 46), (14, 47), (14, 48), (14, 49), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 20), (16, 21), (16, 22), (16, 24), (16, 26), (16, 30), (16, 31), (16, 32), (16, 33), (16, 35), (16, 36), (16, 39), (16, 41), (16, 43), (16, 46), (16, 47), (16, 48), (16, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 27), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 42), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 1), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 16), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (19, 1), (19, 3), (19, 4), (19, 6), (19, 7), (19, 10), (19, 11), (19, 12), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 20), (19, 21), (19, 22), (19, 24), (19, 25), (19, 26), (19, 29), (19, 30), (19, 31), (19, 32), (19, 33), (19, 35), (19, 36), (19, 39), (19, 41), (19, 43), (19, 46), (19, 47), (19, 48), (19, 49), (21, 4), (21, 7), (21, 18), (21, 49), (22, 3), (22, 4), (22, 6), (22, 7), (22, 8), (22, 10), (22, 11), (22, 12), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 20), (22, 22), (22, 24), (22, 25), (22, 30), (22, 31), (22, 32), (22, 33), (22, 35), (22, 36), (22, 39), (22, 41), (22, 43), (22, 46), (22, 47), (22, 48), (22, 49), (23, 1), (23, 5), (23, 19), (23, 32), (24, 3), (24, 4), (24, 6), (24, 7), (24, 8), (24, 10), (24, 11), (24, 12), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 24), (24, 25), (24, 26), (24, 28), (24, 30), (24, 31), (24, 32), (24, 33), (24, 35), (24, 36), (24, 39), (24, 41), (24, 43), (24, 45), (24, 46), (24, 47), (24, 48), (24, 49), (25, 1), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (27, 3), (27, 4), (27, 6), (27, 7), (27, 8), (27, 10), (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 20), (27, 21), (27, 22), (27, 24), (27, 25), (27, 26), (27, 28), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 39), (27, 43), (27, 46), (27, 47), (27, 49), (28, 6), (28, 25), (28, 45), (29, 3), (29, 4), (29, 6), (29, 7), (29, 8), (29, 10), (29, 11), (29, 12), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 20), (29, 21), (29, 22), (29, 24), (29, 25), (29, 26), (29, 30), (29, 31), (29, 32), (29, 33), (29, 35), (29, 36), (29, 39), (29, 41), (29, 43), (29, 46), (29, 47), (29, 48), (29, 49), (30, 1), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (31, 12), (31, 20), (31, 29), (31, 36), (32, 3), (32, 4), (32, 6), (32, 7), (32, 8), (32, 10), (32, 11), (32, 12), (32, 13), (32, 14), (32, 15), (32, 16), (32, 17), (32, 18), (32, 19), (32, 20), (32, 21), (32, 22), (32, 24), (32, 25), (32, 28), (32, 30), (32, 31), (32, 32), (32, 35), (32, 36), (32, 39), (32, 41), (32, 43), (32, 46), (32, 47), (32, 48), (32, 49), (34, 3), (34, 4), (34, 6), (34, 7), (34, 8), (34, 10), (34, 11), (34, 12), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 20), (34, 21), (34, 22), (34, 24), (34, 25), (34, 26), (34, 30), (34, 31), (34, 32), (34, 33), (34, 35), (34, 39), (34, 41), (34, 43), (34, 46), (34, 47), (34, 48), (34, 49), (35, 3), (35, 4), (35, 6), (35, 7), (35, 8), (35, 10), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 20), (35, 21), (35, 22), (35, 24), (35, 25), (35, 26), (35, 30), (35, 31), (35, 32), (35, 33), (35, 35), (35, 36), (35, 39), (35, 41), (35, 43), (35, 46), (35, 47), (35, 48), (35, 49), (37, 3), (37, 4), (37, 6), (37, 7), (37, 8), (37, 10), (37, 11), (37, 12), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 20), (37, 21), (37, 22), (37, 24), (37, 25), (37, 26), (37, 30), (37, 32), (37, 33), (37, 35), (37, 36), (37, 39), (37, 40), (37, 41), (37, 43), (37, 46), (37, 47), (37, 48), (37, 49), (38, 7), (38, 15), (38, 29), (38, 34), (38, 38), (39, 3), (39, 4), (39, 6), (39, 8), (39, 10), (39, 11), (39, 12), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 20), (39, 21), (39, 22), (39, 24), (39, 25), (39, 26), (39, 30), (39, 31), (39, 32), (39, 33), (39, 35), (39, 36), (39, 38), (39, 39), (39, 41), (39, 43), (39, 46), (39, 47), (39, 48), (39, 49), (40, 3), (40, 4), (40, 6), (40, 7), (40, 8), (40, 9), (40, 10), (40, 11), (40, 12), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 20), (40, 21), (40, 22), (40, 23), (40, 25), (40, 26), (40, 30), (40, 31), (40, 32), (40, 33), (40, 35), (40, 36), (40, 39), (40, 41), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 3), (41, 4), (41, 6), (41, 7), (41, 8), (41, 10), (41, 11), (41, 12), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 20), (41, 21), (41, 22), (41, 24), (41, 25), (41, 26), (41, 30), (41, 31), (41, 32), (41, 33), (41, 35), (41, 36), (41, 39), (41, 41), (41, 43), (41, 46), (41, 47), (41, 48), (41, 49), (42, 3), (42, 4), (42, 5), (42, 6), (42, 7), (42, 8), (42, 10), (42, 11), (42, 12), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 20), (42, 21), (42, 22), (42, 24), (42, 25), (42, 26), (42, 30), (42, 31), (42, 32), (42, 33), (42, 35), (42, 36), (42, 41), (42, 43), (42, 46), (42, 47), (42, 48), (42, 49), (43, 11), (43, 27), (44, 3), (44, 4), (44, 6), (44, 7), (44, 8), (44, 10), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 20), (44, 21), (44, 22), (44, 24), (44, 25), (44, 26), (44, 30), (44, 31), (44, 33), (44, 35), (44, 36), (44, 39), (44, 41), (44, 43), (44, 46), (44, 47), (44, 48), (44, 49), (46, 16), (46, 21), (47, 3), (47, 4), (47, 7), (47, 8), (47, 10), (47, 11), (47, 12), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 20), (47, 21), (47, 22), (47, 24), (47, 25), (47, 26), (47, 30), (47, 31), (47, 32), (47, 33), (47, 35), (47, 36), (47, 39), (47, 41), (47, 43), (47, 46), (47, 47), (47, 48), (47, 49), (49, 8), (49, 42)]

 Level  1  Matrix 3 Rows: [(0, 0), (1, 4), (2, 2), (3, 17), (4, 1), (5, 2), (6, 16), (7, 1), (8, 0), (9, 3), (10, 17), (11, 4), (12, 17), (13, 2), (14, 17), (15, 0), (16, 17), (17, 17), (18, 17), (19, 15), (20, 4), (21, 2), (22, 16), (23, 1), (24, 16), (25, 17), (26, 1), (27, 18), (28, 1), (29, 17), (30, 17), (31, 1), (32, 18), (33, 2), (34, 16), (35, 17), (36, 3), (37, 17), (38, 3), (39, 17), (40, 17), (41, 17), (42, 16), (43, 1), (44, 17), (45, 1), (46, 1), (47, 16), (48, 3), (49, 1)]
Level 1  Matrix 3 Cols: [(3, 26), (6, 28), (7, 26), (8, 26), (11, 27), (13, 25), (14, 26), (15, 26), (17, 25), (18, 28), (19, 27), (21, 27), (22, 28), (28, 5), (35, 26), (36, 26), (38, 3), (39, 26), (44, 5), (47, 27)]
Level 1  Matrix 3 Edges : [(1, 6), (1, 14), (1, 17), (1, 44), (2, 22), (2, 47), (3, 3), (3, 6), (3, 7), (3, 8), (3, 11), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 21), (3, 22), (3, 35), (3, 36), (3, 39), (3, 47), (4, 18), (5, 36), (5, 44), (6, 3), (6, 6), (6, 7), (6, 8), (6, 11), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 21), (6, 22), (6, 35), (6, 36), (6, 39), (6, 47), (7, 19), (9, 8), (9, 18), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 11), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 21), (10, 22), (10, 35), (10, 36), (10, 39), (10, 47), (11, 6), (11, 18), (11, 39), (11, 47), (12, 3), (12, 6), (12, 7), (12, 8), (12, 11), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 21), (12, 22), (12, 35), (12, 36), (12, 39), (12, 47), (13, 15), (13, 44), (14, 3), (14, 6), (14, 7), (14, 8), (14, 11), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 21), (14, 22), (14, 35), (14, 36), (14, 39), (14, 47), (16, 3), (16, 6), (16, 7), (16, 8), (16, 11), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 21), (16, 22), (16, 35), (16, 36), (16, 39), (16, 47), (17, 3), (17, 6), (17, 7), (17, 8), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 21), (17, 22), (17, 35), (17, 36), (17, 39), (17, 47), (18, 3), (18, 6), (18, 7), (18, 8), (18, 11), (18, 13), (18, 14), (18, 15), (18, 17), (18, 18), (18, 19), (18, 21), (18, 22), (18, 35), (18, 36), (18, 39), (18, 47), (19, 3), (19, 6), (19, 7), (19, 11), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 21), (19, 22), (19, 35), (19, 36), (19, 39), (19, 47), (20, 13), (20, 22), (20, 28), (20, 39), (21, 7), (21, 18), (22, 3), (22, 6), (22, 7), (22, 8), (22, 11), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 22), (22, 35), (22, 36), (22, 39), (22, 47), (23, 19), (24, 3), (24, 6), (24, 7), (24, 8), (24, 11), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 28), (24, 35), (24, 36), (24, 39), (24, 47), (25, 3), (25, 6), (25, 7), (25, 8), (25, 11), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 21), (25, 22), (25, 35), (25, 36), (25, 39), (25, 47), (26, 44), (27, 3), (27, 6), (27, 7), (27, 8), (27, 11), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 21), (27, 22), (27, 28), (27, 35), (27, 36), (27, 39), (27, 47), (28, 6), (29, 3), (29, 6), (29, 7), (29, 8), (29, 11), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 21), (29, 22), (29, 35), (29, 36), (29, 39), (29, 47), (30, 3), (30, 6), (30, 7), (30, 8), (30, 11), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 21), (30, 22), (30, 35), (30, 36), (30, 39), (30, 47), (31, 36), (32, 3), (32, 6), (32, 7), (32, 8), (32, 11), (32, 13), (32, 14), (32, 15), (32, 17), (32, 18), (32, 19), (32, 21), (32, 22), (32, 28), (32, 35), (32, 36), (32, 39), (32, 47), (33, 6), (33, 28), (34, 3), (34, 6), (34, 7), (34, 8), (34, 11), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 21), (34, 22), (34, 35), (34, 39), (34, 47), (35, 3), (35, 6), (35, 7), (35, 8), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 21), (35, 22), (35, 35), (35, 36), (35, 39), (35, 47), (36, 3), (36, 21), (36, 22), (37, 3), (37, 6), (37, 7), (37, 8), (37, 11), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 21), (37, 22), (37, 35), (37, 36), (37, 39), (37, 47), (38, 7), (38, 15), (38, 38), (39, 3), (39, 6), (39, 8), (39, 11), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 21), (39, 22), (39, 35), (39, 36), (39, 38), (39, 39), (39, 47), (40, 3), (40, 6), (40, 7), (40, 8), (40, 11), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 21), (40, 22), (40, 35), (40, 36), (40, 39), (40, 44), (40, 47), (41, 3), (41, 6), (41, 7), (41, 8), (41, 11), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 21), (41, 22), (41, 35), (41, 36), (41, 39), (41, 47), (42, 3), (42, 6), (42, 7), (42, 8), (42, 11), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 21), (42, 22), (42, 35), (42, 36), (42, 47), (43, 11), (44, 3), (44, 6), (44, 7), (44, 8), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 21), (44, 22), (44, 35), (44, 36), (44, 39), (44, 47), (45, 21), (46, 21), (47, 3), (47, 7), (47, 8), (47, 11), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 21), (47, 22), (47, 35), (47, 36), (47, 39), (47, 47), (48, 11), (48, 19), (48, 38), (49, 8)]

----------------------------------------------------------------------
***Stats Current Input for matrix 2 in  data/data3.csv at level 1 and with model:  max_e_r***
Size of current matrix :  38 * 50 = 1900 ; dec_conq: 1
number input zeros :  867 ; number input ones :  1033
rho =  0.1 ; delta :  0.0
Input density : 0.544 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.544 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.5436842105263158 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  66.84705882352941
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 66.84705882352941 KP time = 0.05266728991409764 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00564 - (Local CPU) 0.00564 - (Global CPU) 0.05831

 Solve status: Optimal Objective value: 66.84705882352941 nb_rows 33 nb_cols 50
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 50) and density : 0.5812121212121212 and number of remaining ones : 959
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 33), (1, 31), (2, 33), (3, 13), (4, 13), (5, 31), (6, 13), (7, 12), (8, 12), (9, 31), (10, 13), (11, 12), (12, 14), (13, 14), (14, 13), (15, 12), (16, 31), (17, 14), (18, 11), (19, 13), (20, 13), (21, 13), (22, 13), (23, 31), (24, 14), (25, 12), (26, 16), (27, 32), (28, 30), (29, 28), (30, 13), (31, 15), (32, 14), (33, 14), (34, 30), (35, 12), (36, 12), (37, 33), (38, 31), (39, 14), (40, 30), (41, 14), (42, 32), (43, 12), (44, 30), (45, 29), (46, 13), (47, 13), (48, 15), (49, 12)]
nb_edges_0 = 691 rho= 0.1 # of rows = 33 # of columns= 50 total_degree_0= 691 RHS= 69.10000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 66.84705882352941 KP time = 0.05830733088077977 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00528 - (Local CPU) 0.00528 - (Global CPU) 0.06359

 Solve status: Optimal Objective value: 37.91428571428571 nb_rows 33 nb_cols 46
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 46) and density : 0.6007905138339921 and number of remaining ones : 959
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.601 density  and density_threshold= 0.770


I am in the while loop with i= 2 density= 0.6007905138339921 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  30.78666666666667
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 30.78666666666667 KP time = 0.06359170586802065 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00514 - (Local CPU) 0.00514 - (Global CPU) 0.06873

 Solve status: Optimal Objective value: 30.78666666666667 nb_rows 31 nb_cols 46
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (31, 46) and density : 0.6178120617110799 and number of remaining ones : 881
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 31), (1, 30), (2, 31), (3, 13), (4, 13), (5, 29), (6, 13), (7, 12), (8, 11), (9, 30), (10, 13), (12, 14), (13, 14), (14, 13), (16, 29), (17, 14), (19, 13), (20, 13), (21, 13), (22, 13), (23, 30), (24, 13), (25, 12), (26, 16), (27, 30), (28, 28), (29, 27), (30, 13), (31, 15), (32, 14), (33, 14), (34, 28), (36, 12), (37, 31), (38, 29), (39, 14), (40, 28), (41, 14), (42, 30), (43, 12), (44, 29), (45, 27), (46, 13), (47, 13), (48, 15), (49, 12)]
nb_edges_0 = 545 rho= 0.1 # of rows = 31 # of columns= 46 total_degree_0= 545 RHS= 54.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 30.78666666666667 KP time = 0.06873049685964361 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00515 - (Local CPU) 0.00515 - (Global CPU) 0.07388

 Solve status: Optimal Objective value: 32.78947368421053 nb_rows 31 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (31, 43) and density : 0.6346586646661665 and number of remaining ones : 881
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.635 density  and density_threshold= 0.770


I am in the while loop with i= 3 density= 0.6346586646661665 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  31.842307692307692
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 31.842307692307692 KP time = 0.0738780798856169 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00490 - (Local CPU) 0.00490 - (Global CPU) 0.07878

 Solve status: Optimal Objective value: 31.842307692307692 nb_rows 29 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 43) and density : 0.6511627906976745 and number of remaining ones : 812
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 29), (1, 28), (2, 29), (3, 13), (4, 13), (5, 27), (6, 13), (7, 12), (9, 28), (10, 13), (12, 14), (13, 14), (14, 13), (16, 27), (17, 14), (19, 13), (20, 13), (21, 13), (22, 13), (23, 28), (24, 13), (26, 16), (27, 28), (28, 26), (29, 25), (30, 13), (31, 14), (32, 14), (33, 14), (34, 26), (36, 12), (37, 29), (38, 27), (39, 14), (40, 27), (41, 14), (42, 28), (43, 12), (44, 27), (45, 25), (46, 13), (47, 13), (48, 15)]
nb_edges_0 = 435 rho= 0.1 # of rows = 29 # of columns= 43 total_degree_0= 435 RHS= 43.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 31.842307692307692 KP time = 0.07877691392786801 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00535 - (Local CPU) 0.00535 - (Global CPU) 0.08413

 Solve status: Optimal Objective value: 30.705882352941178 nb_rows 29 nb_cols 40
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 40) and density : 0.6689655172413793 and number of remaining ones : 812
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.669 density  and density_threshold= 0.770


I am in the while loop with i= 4 density= 0.6689655172413793 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  26.643478260869564
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 26.643478260869564 KP time = 0.08413112192647532 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00499 - (Local CPU) 0.00499 - (Global CPU) 0.08912

 Solve status: Optimal Objective value: 26.643478260869564 nb_rows 27 nb_cols 40
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (27, 40) and density : 0.687962962962963 and number of remaining ones : 743
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 27), (1, 26), (2, 27), (3, 13), (4, 13), (5, 25), (6, 13), (9, 26), (10, 13), (12, 14), (13, 14), (14, 13), (16, 25), (17, 14), (19, 13), (20, 13), (21, 13), (22, 13), (23, 26), (24, 13), (26, 16), (27, 26), (28, 25), (29, 23), (30, 13), (31, 14), (32, 14), (33, 14), (34, 25), (37, 27), (38, 26), (39, 14), (40, 25), (41, 13), (42, 26), (44, 25), (45, 23), (46, 13), (47, 13), (48, 14)]
nb_edges_0 = 337 rho= 0.1 # of rows = 27 # of columns= 40 total_degree_0= 337 RHS= 33.7
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 26.643478260869564 KP time = 0.0891235809540376 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00490 - (Local CPU) 0.00490 - (Global CPU) 0.09403

 Solve status: Optimal Objective value: 31.292857142857144 nb_rows 27 nb_cols 37
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (27, 37) and density : 0.7047047047047047 and number of remaining ones : 743
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.705 density  and density_threshold= 0.770


I am in the while loop with i= 5 density= 0.7047047047047047 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  25.075
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 25.075 KP time = 0.09402733098249882 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00526 - (Local CPU) 0.00526 - (Global CPU) 0.09929

 Solve status: Optimal Objective value: 25.075 nb_rows 25 nb_cols 37
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (25, 37) and density : 0.7243243243243244 and number of remaining ones : 670
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 25), (1, 24), (2, 25), (4, 13), (5, 24), (6, 13), (9, 24), (12, 14), (13, 14), (16, 23), (17, 14), (19, 13), (20, 13), (21, 13), (22, 13), (23, 24), (24, 13), (26, 16), (27, 24), (28, 23), (29, 21), (30, 13), (31, 14), (32, 14), (33, 14), (34, 23), (37, 25), (38, 24), (39, 13), (40, 23), (41, 13), (42, 24), (44, 23), (45, 21), (46, 13), (47, 13), (48, 14)]
nb_edges_0 = 255 rho= 0.1 # of rows = 25 # of columns= 37 total_degree_0= 255 RHS= 25.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 25.075 KP time = 0.09928712295368314 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00509 - (Local CPU) 0.00509 - (Global CPU) 0.10438

 Solve status: Optimal Objective value: 27.625 nb_rows 25 nb_cols 34
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (25, 34) and density : 0.7423529411764705 and number of remaining ones : 670
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.742 density  and density_threshold= 0.770


I am in the while loop with i= 6 density= 0.7423529411764705 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  21.9
I solved model name = row_knapsack_problem for iteration i =  6 with obj value: 21.9 KP time = 0.104381205921527 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00481 - (Local CPU) 0.00482 - (Global CPU) 0.10920

 Solve status: Optimal Objective value: 21.9 nb_rows 23 nb_cols 34
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (23, 34) and density : 0.7634271099744245 and number of remaining ones : 597
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 23), (1, 22), (2, 23), (5, 22), (6, 13), (9, 22), (12, 14), (13, 14), (16, 21), (17, 14), (19, 13), (20, 13), (21, 13), (22, 13), (23, 22), (24, 13), (26, 16), (27, 22), (28, 21), (29, 19), (31, 14), (32, 14), (33, 14), (34, 21), (37, 23), (38, 22), (40, 21), (41, 13), (42, 22), (44, 21), (45, 19), (46, 13), (47, 13), (48, 14)]
nb_edges_0 = 185 rho= 0.1 # of rows = 23 # of columns= 34 total_degree_0= 185 RHS= 18.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  6 with obj value: 21.9 KP time = 0.10919666494010016 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00493 - (Local CPU) 0.00493 - (Global CPU) 0.11413

 Solve status: Optimal Objective value: 24.049999999999997 nb_rows 23 nb_cols 32
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (23, 32) and density : 0.7758152173913043 and number of remaining ones : 597
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 6 iterations
            Density : 0.776 > 0.77
            It took me : 0.114 time
            Found matrix of size : (23, 32) and density : 0.776
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 655.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_1_M_2.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.01838 - (Local CPU) 0.01838 - (Global CPU) 0.01838

 Solve status: Optimal Objective value: 655.0 nb_rows 22 nb_cols 5
----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 22
Number of Remaining number Columns : 5
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 110 Density : 1.0 current obj value 655.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 22  and cols_res of lenght = 5
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 2
        with delta =  0.0
        Found matrix of size : (22, 5)
        and density : 1.0
        and # of ones : 110
        and Heuristic QBC time   : 0.01838
        and Global QBC  time  : 0.01838
        
 Remaining Rows  : [10, 12, 13, 21, 22, 24, 28, 31, 32, 34, 35, 38, 4, 43, 44, 46, 47, 49, 5, 6, 8, 9]
 Remaining  Cols  : [0, 1, 2, 37, 5]

----------------------------------------------------------------------
 
    End of computations for matrix 2 in  data/data3.csv at level 1 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (22,5), with  density : 1.0 and number of ones: 110
    Global Time (in sec): 0.133
    Total Time in QBC approaches: 0.018
    Time in greedy approach: 0.114,  size of matrix found by greedy : (23,32) 
    With density : 0.776 and # ones : 571 
    Time in heuristic only : 0.018 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 6
    Percentage of greedy approach run time in global run time : 86.13% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

rows = [(3, 37), (4, 3), (5, 4), (6, 31), (8, 2), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 35), (19, 33), (21, 4), (22, 31), (23, 4), (24, 32), (25, 34), (27, 33), (28, 3), (29, 33), (30, 36), (31, 4), (32, 33), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 33), (43, 2), (44, 31), (46, 2), (47, 32), (49, 2)]
cols = [(0, 0), (1, 5), (2, 0), (3, 25), (4, 25), (5, 2), (6, 25), (7, 26), (8, 26), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 25), (15, 26), (16, 3), (17, 24), (18, 27), (19, 25), (20, 25), (21, 25), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 3), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (37, 0), (38, 2), (39, 24), (40, 3), (41, 24), (42, 3), (43, 26), (44, 3), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)]
edges_1 = [(3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 42), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (4, 9), (4, 18), (4, 40), (5, 34), (5, 36), (5, 44), (5, 45), (6, 3), (6, 4), (6, 6), (6, 7), (6, 8), (6, 10), (6, 11), (6, 12), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (6, 22), (6, 24), (6, 25), (6, 26), (6, 30), (6, 32), (6, 33), (6, 35), (6, 36), (6, 39), (6, 41), (6, 43), (6, 46), (6, 47), (6, 48), (6, 49), (8, 29), (8, 40), (9, 8), (9, 18), (9, 23), (9, 25), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 10), (10, 11), (10, 12), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 20), (10, 21), (10, 22), (10, 24), (10, 25), (10, 26), (10, 30), (10, 31), (10, 32), (10, 33), (10, 35), (10, 36), (10, 39), (10, 41), (10, 43), (10, 46), (10, 47), (10, 49), (12, 3), (12, 4), (12, 6), (12, 7), (12, 8), (12, 10), (12, 11), (12, 12), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 20), (12, 21), (12, 22), (12, 24), (12, 25), (12, 29), (12, 30), (12, 31), (12, 33), (12, 35), (12, 36), (12, 39), (12, 41), (12, 43), (12, 46), (12, 47), (12, 48), (12, 49), (13, 15), (13, 43), (13, 44), (13, 45), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 24), (14, 25), (14, 26), (14, 30), (14, 31), (14, 32), (14, 33), (14, 35), (14, 36), (14, 39), (14, 41), (14, 43), (14, 46), (14, 47), (14, 48), (14, 49), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 20), (16, 21), (16, 22), (16, 24), (16, 26), (16, 30), (16, 31), (16, 32), (16, 33), (16, 35), (16, 36), (16, 39), (16, 41), (16, 43), (16, 46), (16, 47), (16, 48), (16, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 27), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 42), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 1), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 16), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (19, 1), (19, 3), (19, 4), (19, 6), (19, 7), (19, 10), (19, 11), (19, 12), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 20), (19, 21), (19, 22), (19, 24), (19, 25), (19, 26), (19, 29), (19, 30), (19, 31), (19, 32), (19, 33), (19, 35), (19, 36), (19, 39), (19, 41), (19, 43), (19, 46), (19, 47), (19, 48), (19, 49), (21, 4), (21, 7), (21, 18), (21, 49), (22, 3), (22, 4), (22, 6), (22, 7), (22, 8), (22, 10), (22, 11), (22, 12), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 20), (22, 22), (22, 24), (22, 25), (22, 30), (22, 31), (22, 32), (22, 33), (22, 35), (22, 36), (22, 39), (22, 41), (22, 43), (22, 46), (22, 47), (22, 48), (22, 49), (23, 1), (23, 5), (23, 19), (23, 32), (24, 3), (24, 4), (24, 6), (24, 7), (24, 8), (24, 10), (24, 11), (24, 12), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 24), (24, 25), (24, 26), (24, 28), (24, 30), (24, 31), (24, 32), (24, 33), (24, 35), (24, 36), (24, 39), (24, 41), (24, 43), (24, 45), (24, 46), (24, 47), (24, 48), (24, 49), (25, 1), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (27, 3), (27, 4), (27, 6), (27, 7), (27, 8), (27, 10), (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 20), (27, 21), (27, 22), (27, 24), (27, 25), (27, 26), (27, 28), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 39), (27, 43), (27, 46), (27, 47), (27, 49), (28, 6), (28, 25), (28, 45), (29, 3), (29, 4), (29, 6), (29, 7), (29, 8), (29, 10), (29, 11), (29, 12), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 20), (29, 21), (29, 22), (29, 24), (29, 25), (29, 26), (29, 30), (29, 31), (29, 32), (29, 33), (29, 35), (29, 36), (29, 39), (29, 41), (29, 43), (29, 46), (29, 47), (29, 48), (29, 49), (30, 1), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (31, 12), (31, 20), (31, 29), (31, 36), (32, 3), (32, 4), (32, 6), (32, 7), (32, 8), (32, 10), (32, 11), (32, 12), (32, 13), (32, 14), (32, 15), (32, 16), (32, 17), (32, 18), (32, 19), (32, 20), (32, 21), (32, 22), (32, 24), (32, 25), (32, 28), (32, 30), (32, 31), (32, 32), (32, 35), (32, 36), (32, 39), (32, 41), (32, 43), (32, 46), (32, 47), (32, 48), (32, 49), (34, 3), (34, 4), (34, 6), (34, 7), (34, 8), (34, 10), (34, 11), (34, 12), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 20), (34, 21), (34, 22), (34, 24), (34, 25), (34, 26), (34, 30), (34, 31), (34, 32), (34, 33), (34, 35), (34, 39), (34, 41), (34, 43), (34, 46), (34, 47), (34, 48), (34, 49), (35, 3), (35, 4), (35, 6), (35, 7), (35, 8), (35, 10), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 20), (35, 21), (35, 22), (35, 24), (35, 25), (35, 26), (35, 30), (35, 31), (35, 32), (35, 33), (35, 35), (35, 36), (35, 39), (35, 41), (35, 43), (35, 46), (35, 47), (35, 48), (35, 49), (37, 3), (37, 4), (37, 6), (37, 7), (37, 8), (37, 10), (37, 11), (37, 12), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 20), (37, 21), (37, 22), (37, 24), (37, 25), (37, 26), (37, 30), (37, 32), (37, 33), (37, 35), (37, 36), (37, 39), (37, 40), (37, 41), (37, 43), (37, 46), (37, 47), (37, 48), (37, 49), (38, 7), (38, 15), (38, 29), (38, 34), (38, 38), (39, 3), (39, 4), (39, 6), (39, 8), (39, 10), (39, 11), (39, 12), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 20), (39, 21), (39, 22), (39, 24), (39, 25), (39, 26), (39, 30), (39, 31), (39, 32), (39, 33), (39, 35), (39, 36), (39, 38), (39, 39), (39, 41), (39, 43), (39, 46), (39, 47), (39, 48), (39, 49), (40, 3), (40, 4), (40, 6), (40, 7), (40, 8), (40, 9), (40, 10), (40, 11), (40, 12), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 20), (40, 21), (40, 22), (40, 23), (40, 25), (40, 26), (40, 30), (40, 31), (40, 32), (40, 33), (40, 35), (40, 36), (40, 39), (40, 41), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 3), (41, 4), (41, 6), (41, 7), (41, 8), (41, 10), (41, 11), (41, 12), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 20), (41, 21), (41, 22), (41, 24), (41, 25), (41, 26), (41, 30), (41, 31), (41, 32), (41, 33), (41, 35), (41, 36), (41, 39), (41, 41), (41, 43), (41, 46), (41, 47), (41, 48), (41, 49), (42, 3), (42, 4), (42, 5), (42, 6), (42, 7), (42, 8), (42, 10), (42, 11), (42, 12), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 20), (42, 21), (42, 22), (42, 24), (42, 25), (42, 26), (42, 30), (42, 31), (42, 32), (42, 33), (42, 35), (42, 36), (42, 41), (42, 43), (42, 46), (42, 47), (42, 48), (42, 49), (43, 11), (43, 27), (44, 3), (44, 4), (44, 6), (44, 7), (44, 8), (44, 10), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 20), (44, 21), (44, 22), (44, 24), (44, 25), (44, 26), (44, 30), (44, 31), (44, 33), (44, 35), (44, 36), (44, 39), (44, 41), (44, 43), (44, 46), (44, 47), (44, 48), (44, 49), (46, 16), (46, 21), (47, 3), (47, 4), (47, 7), (47, 8), (47, 10), (47, 11), (47, 12), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 20), (47, 21), (47, 22), (47, 24), (47, 25), (47, 26), (47, 30), (47, 31), (47, 32), (47, 33), (47, 35), (47, 36), (47, 39), (47, 41), (47, 43), (47, 46), (47, 47), (47, 48), (47, 49), (49, 8), (49, 42)]
rows_res = [10, 12, 13, 21, 22, 24, 28, 31, 32, 34, 35, 38, 4, 43, 44, 46, 47, 49, 5, 6, 8, 9]
cols_res = [0, 1, 2, 37, 5]
dec_conq= 1

 Level 0, Matrix 4:
Size Rows: 16
Size Cols: 50

 Level 0 Matrix  5:
Size Rows: 38
Size Cols: 45

 Level 0  Matrix 4 Rows: [(3, 37), (14, 33), (16, 32), (17, 34), (18, 35), (19, 33), (23, 4), (25, 34), (27, 33), (29, 33), (30, 36), (37, 33), (39, 33), (40, 34), (41, 33), (42, 33)]
Level  0  Matrix 4 Cols: [(0, 0), (1, 5), (2, 0), (3, 15), (4, 15), (5, 2), (6, 15), (7, 14), (8, 14), (9, 1), (10, 15), (11, 15), (12, 14), (13, 15), (14, 15), (15, 14), (16, 1), (17, 15), (18, 14), (19, 16), (20, 15), (21, 15), (22, 15), (23, 3), (24, 14), (25, 14), (26, 15), (27, 1), (28, 1), (29, 2), (30, 15), (31, 14), (32, 16), (33, 15), (34, 2), (35, 15), (36, 15), (37, 0), (38, 1), (39, 14), (40, 1), (41, 14), (42, 2), (43, 15), (44, 1), (45, 1), (46, 15), (47, 15), (48, 14), (49, 15)]
Level  0  Matrix 4 Edges : [(3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 42), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 24), (14, 25), (14, 26), (14, 30), (14, 31), (14, 32), (14, 33), (14, 35), (14, 36), (14, 39), (14, 41), (14, 43), (14, 46), (14, 47), (14, 48), (14, 49), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 20), (16, 21), (16, 22), (16, 24), (16, 26), (16, 30), (16, 31), (16, 32), (16, 33), (16, 35), (16, 36), (16, 39), (16, 41), (16, 43), (16, 46), (16, 47), (16, 48), (16, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 27), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 42), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 1), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 16), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (19, 1), (19, 3), (19, 4), (19, 6), (19, 7), (19, 10), (19, 11), (19, 12), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 20), (19, 21), (19, 22), (19, 24), (19, 25), (19, 26), (19, 29), (19, 30), (19, 31), (19, 32), (19, 33), (19, 35), (19, 36), (19, 39), (19, 41), (19, 43), (19, 46), (19, 47), (19, 48), (19, 49), (23, 1), (23, 5), (23, 19), (23, 32), (25, 1), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (27, 3), (27, 4), (27, 6), (27, 7), (27, 8), (27, 10), (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 20), (27, 21), (27, 22), (27, 24), (27, 25), (27, 26), (27, 28), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 39), (27, 43), (27, 46), (27, 47), (27, 49), (29, 3), (29, 4), (29, 6), (29, 7), (29, 8), (29, 10), (29, 11), (29, 12), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 20), (29, 21), (29, 22), (29, 24), (29, 25), (29, 26), (29, 30), (29, 31), (29, 32), (29, 33), (29, 35), (29, 36), (29, 39), (29, 41), (29, 43), (29, 46), (29, 47), (29, 48), (29, 49), (30, 1), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (37, 3), (37, 4), (37, 6), (37, 7), (37, 8), (37, 10), (37, 11), (37, 12), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 20), (37, 21), (37, 22), (37, 24), (37, 25), (37, 26), (37, 30), (37, 32), (37, 33), (37, 35), (37, 36), (37, 39), (37, 40), (37, 41), (37, 43), (37, 46), (37, 47), (37, 48), (37, 49), (39, 3), (39, 4), (39, 6), (39, 8), (39, 10), (39, 11), (39, 12), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 20), (39, 21), (39, 22), (39, 24), (39, 25), (39, 26), (39, 30), (39, 31), (39, 32), (39, 33), (39, 35), (39, 36), (39, 38), (39, 39), (39, 41), (39, 43), (39, 46), (39, 47), (39, 48), (39, 49), (40, 3), (40, 4), (40, 6), (40, 7), (40, 8), (40, 9), (40, 10), (40, 11), (40, 12), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 20), (40, 21), (40, 22), (40, 23), (40, 25), (40, 26), (40, 30), (40, 31), (40, 32), (40, 33), (40, 35), (40, 36), (40, 39), (40, 41), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 3), (41, 4), (41, 6), (41, 7), (41, 8), (41, 10), (41, 11), (41, 12), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 20), (41, 21), (41, 22), (41, 24), (41, 25), (41, 26), (41, 30), (41, 31), (41, 32), (41, 33), (41, 35), (41, 36), (41, 39), (41, 41), (41, 43), (41, 46), (41, 47), (41, 48), (41, 49), (42, 3), (42, 4), (42, 5), (42, 6), (42, 7), (42, 8), (42, 10), (42, 11), (42, 12), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 20), (42, 21), (42, 22), (42, 24), (42, 25), (42, 26), (42, 30), (42, 31), (42, 32), (42, 33), (42, 35), (42, 36), (42, 41), (42, 43), (42, 46), (42, 47), (42, 48), (42, 49)]

 Level  0  Matrix 5 Rows: [(3, 37), (4, 3), (5, 4), (6, 31), (8, 2), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 34), (19, 32), (21, 4), (22, 31), (23, 2), (24, 32), (25, 33), (27, 33), (28, 3), (29, 33), (30, 35), (31, 4), (32, 33), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 32), (43, 2), (44, 31), (46, 2), (47, 32), (49, 2)]
Level 0  Matrix 5 Cols: [(3, 25), (4, 25), (6, 25), (7, 26), (8, 26), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 25), (15, 26), (16, 3), (17, 24), (18, 27), (19, 25), (20, 25), (21, 25), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 3), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 2), (39, 24), (40, 3), (41, 24), (42, 3), (43, 26), (44, 3), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)]
Level 0  Matrix 5 Edges : [(3, 3), (3, 4), (3, 6), (3, 7), (3, 8), (3, 10), (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 20), (3, 21), (3, 22), (3, 23), (3, 24), (3, 25), (3, 26), (3, 30), (3, 31), (3, 32), (3, 33), (3, 34), (3, 35), (3, 36), (3, 39), (3, 41), (3, 42), (3, 43), (3, 45), (3, 46), (3, 47), (3, 48), (3, 49), (4, 9), (4, 18), (4, 40), (5, 34), (5, 36), (5, 44), (5, 45), (6, 3), (6, 4), (6, 6), (6, 7), (6, 8), (6, 10), (6, 11), (6, 12), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 20), (6, 21), (6, 22), (6, 24), (6, 25), (6, 26), (6, 30), (6, 32), (6, 33), (6, 35), (6, 36), (6, 39), (6, 41), (6, 43), (6, 46), (6, 47), (6, 48), (6, 49), (8, 29), (8, 40), (9, 8), (9, 18), (9, 23), (9, 25), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 10), (10, 11), (10, 12), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 20), (10, 21), (10, 22), (10, 24), (10, 25), (10, 26), (10, 30), (10, 31), (10, 32), (10, 33), (10, 35), (10, 36), (10, 39), (10, 41), (10, 43), (10, 46), (10, 47), (10, 49), (12, 3), (12, 4), (12, 6), (12, 7), (12, 8), (12, 10), (12, 11), (12, 12), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 20), (12, 21), (12, 22), (12, 24), (12, 25), (12, 29), (12, 30), (12, 31), (12, 33), (12, 35), (12, 36), (12, 39), (12, 41), (12, 43), (12, 46), (12, 47), (12, 48), (12, 49), (13, 15), (13, 43), (13, 44), (13, 45), (14, 3), (14, 4), (14, 6), (14, 7), (14, 8), (14, 10), (14, 11), (14, 12), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 20), (14, 21), (14, 22), (14, 24), (14, 25), (14, 26), (14, 30), (14, 31), (14, 32), (14, 33), (14, 35), (14, 36), (14, 39), (14, 41), (14, 43), (14, 46), (14, 47), (14, 48), (14, 49), (16, 3), (16, 4), (16, 6), (16, 7), (16, 8), (16, 10), (16, 11), (16, 12), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 20), (16, 21), (16, 22), (16, 24), (16, 26), (16, 30), (16, 31), (16, 32), (16, 33), (16, 35), (16, 36), (16, 39), (16, 41), (16, 43), (16, 46), (16, 47), (16, 48), (16, 49), (17, 3), (17, 4), (17, 6), (17, 7), (17, 8), (17, 10), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 20), (17, 21), (17, 22), (17, 24), (17, 25), (17, 26), (17, 27), (17, 30), (17, 31), (17, 32), (17, 33), (17, 35), (17, 36), (17, 39), (17, 41), (17, 42), (17, 43), (17, 46), (17, 47), (17, 48), (17, 49), (18, 3), (18, 4), (18, 6), (18, 7), (18, 8), (18, 10), (18, 11), (18, 12), (18, 13), (18, 14), (18, 15), (18, 16), (18, 17), (18, 18), (18, 19), (18, 20), (18, 21), (18, 22), (18, 24), (18, 25), (18, 26), (18, 30), (18, 31), (18, 32), (18, 33), (18, 35), (18, 36), (18, 39), (18, 41), (18, 43), (18, 46), (18, 47), (18, 48), (18, 49), (19, 3), (19, 4), (19, 6), (19, 7), (19, 10), (19, 11), (19, 12), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 20), (19, 21), (19, 22), (19, 24), (19, 25), (19, 26), (19, 29), (19, 30), (19, 31), (19, 32), (19, 33), (19, 35), (19, 36), (19, 39), (19, 41), (19, 43), (19, 46), (19, 47), (19, 48), (19, 49), (21, 4), (21, 7), (21, 18), (21, 49), (22, 3), (22, 4), (22, 6), (22, 7), (22, 8), (22, 10), (22, 11), (22, 12), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 20), (22, 22), (22, 24), (22, 25), (22, 30), (22, 31), (22, 32), (22, 33), (22, 35), (22, 36), (22, 39), (22, 41), (22, 43), (22, 46), (22, 47), (22, 48), (22, 49), (23, 19), (23, 32), (24, 3), (24, 4), (24, 6), (24, 7), (24, 8), (24, 10), (24, 11), (24, 12), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 24), (24, 25), (24, 26), (24, 28), (24, 30), (24, 31), (24, 32), (24, 33), (24, 35), (24, 36), (24, 39), (24, 41), (24, 43), (24, 45), (24, 46), (24, 47), (24, 48), (24, 49), (25, 3), (25, 4), (25, 6), (25, 7), (25, 8), (25, 10), (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 20), (25, 21), (25, 22), (25, 24), (25, 25), (25, 26), (25, 30), (25, 31), (25, 32), (25, 33), (25, 35), (25, 36), (25, 39), (25, 41), (25, 43), (25, 46), (25, 47), (25, 48), (25, 49), (27, 3), (27, 4), (27, 6), (27, 7), (27, 8), (27, 10), (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 20), (27, 21), (27, 22), (27, 24), (27, 25), (27, 26), (27, 28), (27, 30), (27, 31), (27, 32), (27, 33), (27, 34), (27, 35), (27, 36), (27, 39), (27, 43), (27, 46), (27, 47), (27, 49), (28, 6), (28, 25), (28, 45), (29, 3), (29, 4), (29, 6), (29, 7), (29, 8), (29, 10), (29, 11), (29, 12), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 20), (29, 21), (29, 22), (29, 24), (29, 25), (29, 26), (29, 30), (29, 31), (29, 32), (29, 33), (29, 35), (29, 36), (29, 39), (29, 41), (29, 43), (29, 46), (29, 47), (29, 48), (29, 49), (30, 3), (30, 4), (30, 6), (30, 7), (30, 8), (30, 10), (30, 11), (30, 12), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 20), (30, 21), (30, 22), (30, 23), (30, 24), (30, 25), (30, 26), (30, 29), (30, 30), (30, 31), (30, 32), (30, 33), (30, 35), (30, 36), (30, 39), (30, 41), (30, 43), (30, 46), (30, 47), (30, 48), (30, 49), (31, 12), (31, 20), (31, 29), (31, 36), (32, 3), (32, 4), (32, 6), (32, 7), (32, 8), (32, 10), (32, 11), (32, 12), (32, 13), (32, 14), (32, 15), (32, 16), (32, 17), (32, 18), (32, 19), (32, 20), (32, 21), (32, 22), (32, 24), (32, 25), (32, 28), (32, 30), (32, 31), (32, 32), (32, 35), (32, 36), (32, 39), (32, 41), (32, 43), (32, 46), (32, 47), (32, 48), (32, 49), (34, 3), (34, 4), (34, 6), (34, 7), (34, 8), (34, 10), (34, 11), (34, 12), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 20), (34, 21), (34, 22), (34, 24), (34, 25), (34, 26), (34, 30), (34, 31), (34, 32), (34, 33), (34, 35), (34, 39), (34, 41), (34, 43), (34, 46), (34, 47), (34, 48), (34, 49), (35, 3), (35, 4), (35, 6), (35, 7), (35, 8), (35, 10), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 20), (35, 21), (35, 22), (35, 24), (35, 25), (35, 26), (35, 30), (35, 31), (35, 32), (35, 33), (35, 35), (35, 36), (35, 39), (35, 41), (35, 43), (35, 46), (35, 47), (35, 48), (35, 49), (37, 3), (37, 4), (37, 6), (37, 7), (37, 8), (37, 10), (37, 11), (37, 12), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 20), (37, 21), (37, 22), (37, 24), (37, 25), (37, 26), (37, 30), (37, 32), (37, 33), (37, 35), (37, 36), (37, 39), (37, 40), (37, 41), (37, 43), (37, 46), (37, 47), (37, 48), (37, 49), (38, 7), (38, 15), (38, 29), (38, 34), (38, 38), (39, 3), (39, 4), (39, 6), (39, 8), (39, 10), (39, 11), (39, 12), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 20), (39, 21), (39, 22), (39, 24), (39, 25), (39, 26), (39, 30), (39, 31), (39, 32), (39, 33), (39, 35), (39, 36), (39, 38), (39, 39), (39, 41), (39, 43), (39, 46), (39, 47), (39, 48), (39, 49), (40, 3), (40, 4), (40, 6), (40, 7), (40, 8), (40, 9), (40, 10), (40, 11), (40, 12), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 20), (40, 21), (40, 22), (40, 23), (40, 25), (40, 26), (40, 30), (40, 31), (40, 32), (40, 33), (40, 35), (40, 36), (40, 39), (40, 41), (40, 43), (40, 44), (40, 46), (40, 47), (40, 48), (40, 49), (41, 3), (41, 4), (41, 6), (41, 7), (41, 8), (41, 10), (41, 11), (41, 12), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 20), (41, 21), (41, 22), (41, 24), (41, 25), (41, 26), (41, 30), (41, 31), (41, 32), (41, 33), (41, 35), (41, 36), (41, 39), (41, 41), (41, 43), (41, 46), (41, 47), (41, 48), (41, 49), (42, 3), (42, 4), (42, 6), (42, 7), (42, 8), (42, 10), (42, 11), (42, 12), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 20), (42, 21), (42, 22), (42, 24), (42, 25), (42, 26), (42, 30), (42, 31), (42, 32), (42, 33), (42, 35), (42, 36), (42, 41), (42, 43), (42, 46), (42, 47), (42, 48), (42, 49), (43, 11), (43, 27), (44, 3), (44, 4), (44, 6), (44, 7), (44, 8), (44, 10), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 20), (44, 21), (44, 22), (44, 24), (44, 25), (44, 26), (44, 30), (44, 31), (44, 33), (44, 35), (44, 36), (44, 39), (44, 41), (44, 43), (44, 46), (44, 47), (44, 48), (44, 49), (46, 16), (46, 21), (47, 3), (47, 4), (47, 7), (47, 8), (47, 10), (47, 11), (47, 12), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 20), (47, 21), (47, 22), (47, 24), (47, 25), (47, 26), (47, 30), (47, 31), (47, 32), (47, 33), (47, 35), (47, 36), (47, 39), (47, 41), (47, 43), (47, 46), (47, 47), (47, 48), (47, 49), (49, 8), (49, 42)]

Task with matrix 4 with size (16,50) and density 0.6375 and number of ones 510  and number of zeros 290 has been added to the queue.

 Return from 4 with winning node = 4

calling decrease_and_conquer for node 5

Task with matrix 5 with size (38,45) and density 0.5029239766081871 and number of ones 860  and number of zeros 850 has been added to the queue.

return in decrease_and_conquer from 5 with winning node = 5

return in decrease_and_conquer from 2 with winning node = 5

 Return from 2 with winning node = 5

calling decrease_and_conquer for node 3

----------------------------------------------------------------------
***Stats Current Input for matrix 3 in  data/data3.csv at level 1 and with model:  max_e_r***
Size of current matrix :  50 * 20 = 1000 ; dec_conq: 1
number input zeros :  463 ; number input ones :  537
rho =  0.1 ; delta :  0.0
Input density : 0.537 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.537 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.537 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  26.023529411764706
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 26.023529411764706 KP time = 0.05266728991409764 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00527 - (Local CPU) 0.00527 - (Global CPU) 0.05793

 Solve status: Optimal Objective value: 26.023529411764706 nb_rows 40 nb_cols 20
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (40, 20) and density : 0.63625 and number of remaining ones : 509
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 24), (6, 22), (7, 23), (8, 24), (11, 23), (13, 25), (14, 24), (15, 23), (17, 25), (18, 22), (19, 23), (21, 23), (22, 22), (28, 37), (35, 24), (36, 24), (38, 38), (39, 24), (44, 36), (47, 23)]
nb_edges_0 = 291 rho= 0.1 # of rows = 40 # of columns= 20 total_degree_0= 291 RHS= 29.1
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 26.023529411764706 KP time = 0.05793412291677669 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00487 - (Local CPU) 0.00487 - (Global CPU) 0.06281

 Solve status: Optimal Objective value: 35.56666666666666 nb_rows 40 nb_cols 18
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (40, 18) and density : 0.6458333333333334 and number of remaining ones : 509
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.646 density  and density_threshold= 0.770


I am in the while loop with i= 2 density= 0.6458333333333334 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  5.1
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 5.1 KP time = 0.06280849792528898 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00518 - (Local CPU) 0.00518 - (Global CPU) 0.06799

 Solve status: Optimal Objective value: 5.1 nb_rows 38 nb_cols 18
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (38, 18) and density : 0.6710526315789473 and number of remaining ones : 459
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 24), (7, 23), (8, 24), (11, 23), (13, 25), (14, 24), (15, 23), (17, 25), (18, 22), (19, 23), (21, 23), (28, 35), (35, 24), (36, 24), (38, 36), (39, 24), (44, 34), (47, 23)]
nb_edges_0 = 225 rho= 0.1 # of rows = 38 # of columns= 18 total_degree_0= 225 RHS= 22.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 5.1 KP time = 0.06799045694060624 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00489 - (Local CPU) 0.00490 - (Global CPU) 0.07289

 Solve status: Optimal Objective value: 31.96666666666667 nb_rows 38 nb_cols 16
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (38, 16) and density : 0.680921052631579 and number of remaining ones : 459
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.681 density  and density_threshold= 0.770


I am in the while loop with i= 3 density= 0.680921052631579 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  4.476923076923077
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 4.476923076923077 KP time = 0.07288641599006951 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00499 - (Local CPU) 0.00499 - (Global CPU) 0.07788

 Solve status: Optimal Objective value: 4.476923076923077 nb_rows 36 nb_cols 16
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (36, 16) and density : 0.7083333333333334 and number of remaining ones : 408
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 24), (7, 23), (8, 24), (11, 23), (13, 25), (14, 24), (15, 23), (17, 25), (21, 23), (28, 33), (35, 24), (36, 24), (38, 34), (39, 24), (44, 32), (47, 23)]
nb_edges_0 = 168 rho= 0.1 # of rows = 36 # of columns= 16 total_degree_0= 168 RHS= 16.8
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 4.476923076923077 KP time = 0.07788058294681832 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00476 - (Local CPU) 0.00476 - (Global CPU) 0.08264

 Solve status: Optimal Objective value: 29.723076923076924 nb_rows 36 nb_cols 14
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (36, 14) and density : 0.7182539682539683 and number of remaining ones : 408
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.718 density  and density_threshold= 0.770


I am in the while loop with i= 4 density= 0.7182539682539683 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  3.8727272727272726
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 3.8727272727272726 KP time = 0.08264324895571917 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00502 - (Local CPU) 0.00502 - (Global CPU) 0.08767

 Solve status: Optimal Objective value: 3.8727272727272726 nb_rows 34 nb_cols 14
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 14) and density : 0.7478991596638656 and number of remaining ones : 356
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 24), (7, 23), (8, 24), (13, 25), (14, 24), (15, 23), (17, 25), (28, 31), (35, 24), (36, 24), (38, 32), (39, 24), (44, 30), (47, 23)]
nb_edges_0 = 120 rho= 0.1 # of rows = 34 # of columns= 14 total_degree_0= 120 RHS= 12.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 3.8727272727272726 KP time = 0.08766666596056893 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00477 - (Local CPU) 0.00477 - (Global CPU) 0.09243

 Solve status: Optimal Objective value: 25.09090909090909 nb_rows 34 nb_cols 12
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 12) and density : 0.7598039215686274 and number of remaining ones : 356
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.760 density  and density_threshold= 0.770


I am in the while loop with i= 5 density= 0.7598039215686274 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  3.266666666666667
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 3.266666666666667 KP time = 0.09243404096923769 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00493 - (Local CPU) 0.00493 - (Global CPU) 0.09736

 Solve status: Optimal Objective value: 3.266666666666667 nb_rows 32 nb_cols 12
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (32, 12) and density : 0.7916666666666666 and number of remaining ones : 304
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 24), (7, 23), (8, 24), (13, 25), (14, 24), (17, 24), (28, 30), (35, 24), (36, 24), (38, 30), (39, 24), (44, 28)]
nb_edges_0 = 80 rho= 0.1 # of rows = 32 # of columns= 12 total_degree_0= 80 RHS= 8.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 3.266666666666667 KP time = 0.09736395697109401 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00474 - (Local CPU) 0.00474 - (Global CPU) 0.10211

 Solve status: Optimal Objective value: 20.444444444444443 nb_rows 32 nb_cols 11
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (32, 11) and density : 0.7982954545454546 and number of remaining ones : 304
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 5 iterations
            Density : 0.798 > 0.77
            It took me : 0.102 time
            Found matrix of size : (32, 11) and density : 0.798
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 413.0
Model status: Optimal
Solution saved to Experiments/data3/results_h_1_M_3.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.00942 - (Local CPU) 0.00942 - (Global CPU) 0.00942

 Solve status: Optimal Objective value: 413.0 nb_rows 12 nb_cols 11
----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 12
Number of Remaining number Columns : 11
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 132 Density : 1.0 current obj value 413.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 12  and cols_res of lenght = 11
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 3
        with delta =  0.0
        Found matrix of size : (12, 11)
        and density : 1.0
        and # of ones : 132
        and Heuristic QBC time   : 0.00942
        and Global QBC  time  : 0.00942
        
 Remaining Rows  : [0, 15, 2, 21, 23, 28, 4, 43, 45, 46, 7, 8]
 Remaining  Cols  : [13, 14, 17, 28, 3, 35, 36, 38, 39, 44, 8]

----------------------------------------------------------------------
 
    End of computations for matrix 3 in  data/data3.csv at level 1 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (12,11), with  density : 1.0 and number of ones: 132
    Global Time (in sec): 0.112
    Total Time in QBC approaches: 0.009
    Time in greedy approach: 0.102,  size of matrix found by greedy : (32,11) 
    With density : 0.798 and # ones : 281 
    Time in heuristic only : 0.009 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 5
    Percentage of greedy approach run time in global run time : 91.55% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

rows = [(0, 0), (1, 4), (2, 2), (3, 17), (4, 1), (5, 2), (6, 16), (7, 1), (8, 0), (9, 3), (10, 17), (11, 4), (12, 17), (13, 2), (14, 17), (15, 0), (16, 17), (17, 17), (18, 17), (19, 15), (20, 4), (21, 2), (22, 16), (23, 1), (24, 16), (25, 17), (26, 1), (27, 18), (28, 1), (29, 17), (30, 17), (31, 1), (32, 18), (33, 2), (34, 16), (35, 17), (36, 3), (37, 17), (38, 3), (39, 17), (40, 17), (41, 17), (42, 16), (43, 1), (44, 17), (45, 1), (46, 1), (47, 16), (48, 3), (49, 1)]
cols = [(3, 26), (6, 28), (7, 26), (8, 26), (11, 27), (13, 25), (14, 26), (15, 26), (17, 25), (18, 28), (19, 27), (21, 27), (22, 28), (28, 5), (35, 26), (36, 26), (38, 3), (39, 26), (44, 5), (47, 27)]
edges_1 = [(1, 6), (1, 14), (1, 17), (1, 44), (2, 22), (2, 47), (3, 3), (3, 6), (3, 7), (3, 8), (3, 11), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 21), (3, 22), (3, 35), (3, 36), (3, 39), (3, 47), (4, 18), (5, 36), (5, 44), (6, 3), (6, 6), (6, 7), (6, 8), (6, 11), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 21), (6, 22), (6, 35), (6, 36), (6, 39), (6, 47), (7, 19), (9, 8), (9, 18), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 11), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 21), (10, 22), (10, 35), (10, 36), (10, 39), (10, 47), (11, 6), (11, 18), (11, 39), (11, 47), (12, 3), (12, 6), (12, 7), (12, 8), (12, 11), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 21), (12, 22), (12, 35), (12, 36), (12, 39), (12, 47), (13, 15), (13, 44), (14, 3), (14, 6), (14, 7), (14, 8), (14, 11), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 21), (14, 22), (14, 35), (14, 36), (14, 39), (14, 47), (16, 3), (16, 6), (16, 7), (16, 8), (16, 11), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 21), (16, 22), (16, 35), (16, 36), (16, 39), (16, 47), (17, 3), (17, 6), (17, 7), (17, 8), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 21), (17, 22), (17, 35), (17, 36), (17, 39), (17, 47), (18, 3), (18, 6), (18, 7), (18, 8), (18, 11), (18, 13), (18, 14), (18, 15), (18, 17), (18, 18), (18, 19), (18, 21), (18, 22), (18, 35), (18, 36), (18, 39), (18, 47), (19, 3), (19, 6), (19, 7), (19, 11), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 21), (19, 22), (19, 35), (19, 36), (19, 39), (19, 47), (20, 13), (20, 22), (20, 28), (20, 39), (21, 7), (21, 18), (22, 3), (22, 6), (22, 7), (22, 8), (22, 11), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 22), (22, 35), (22, 36), (22, 39), (22, 47), (23, 19), (24, 3), (24, 6), (24, 7), (24, 8), (24, 11), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 28), (24, 35), (24, 36), (24, 39), (24, 47), (25, 3), (25, 6), (25, 7), (25, 8), (25, 11), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 21), (25, 22), (25, 35), (25, 36), (25, 39), (25, 47), (26, 44), (27, 3), (27, 6), (27, 7), (27, 8), (27, 11), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 21), (27, 22), (27, 28), (27, 35), (27, 36), (27, 39), (27, 47), (28, 6), (29, 3), (29, 6), (29, 7), (29, 8), (29, 11), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 21), (29, 22), (29, 35), (29, 36), (29, 39), (29, 47), (30, 3), (30, 6), (30, 7), (30, 8), (30, 11), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 21), (30, 22), (30, 35), (30, 36), (30, 39), (30, 47), (31, 36), (32, 3), (32, 6), (32, 7), (32, 8), (32, 11), (32, 13), (32, 14), (32, 15), (32, 17), (32, 18), (32, 19), (32, 21), (32, 22), (32, 28), (32, 35), (32, 36), (32, 39), (32, 47), (33, 6), (33, 28), (34, 3), (34, 6), (34, 7), (34, 8), (34, 11), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 21), (34, 22), (34, 35), (34, 39), (34, 47), (35, 3), (35, 6), (35, 7), (35, 8), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 21), (35, 22), (35, 35), (35, 36), (35, 39), (35, 47), (36, 3), (36, 21), (36, 22), (37, 3), (37, 6), (37, 7), (37, 8), (37, 11), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 21), (37, 22), (37, 35), (37, 36), (37, 39), (37, 47), (38, 7), (38, 15), (38, 38), (39, 3), (39, 6), (39, 8), (39, 11), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 21), (39, 22), (39, 35), (39, 36), (39, 38), (39, 39), (39, 47), (40, 3), (40, 6), (40, 7), (40, 8), (40, 11), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 21), (40, 22), (40, 35), (40, 36), (40, 39), (40, 44), (40, 47), (41, 3), (41, 6), (41, 7), (41, 8), (41, 11), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 21), (41, 22), (41, 35), (41, 36), (41, 39), (41, 47), (42, 3), (42, 6), (42, 7), (42, 8), (42, 11), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 21), (42, 22), (42, 35), (42, 36), (42, 47), (43, 11), (44, 3), (44, 6), (44, 7), (44, 8), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 21), (44, 22), (44, 35), (44, 36), (44, 39), (44, 47), (45, 21), (46, 21), (47, 3), (47, 7), (47, 8), (47, 11), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 21), (47, 22), (47, 35), (47, 36), (47, 39), (47, 47), (48, 11), (48, 19), (48, 38), (49, 8)]
rows_res = [0, 15, 2, 21, 23, 28, 4, 43, 45, 46, 7, 8]
cols_res = [13, 14, 17, 28, 3, 35, 36, 38, 39, 44, 8]
dec_conq= 1

 Level 0, Matrix 6:
Size Rows: 38
Size Cols: 20

 Level 0 Matrix  7:
Size Rows: 50
Size Cols: 9

 Level 0  Matrix 6 Rows: [(1, 4), (3, 17), (5, 2), (6, 16), (9, 3), (10, 17), (11, 4), (12, 17), (13, 2), (14, 17), (16, 17), (17, 17), (18, 17), (19, 15), (20, 4), (22, 16), (24, 16), (25, 17), (26, 1), (27, 18), (29, 17), (30, 17), (31, 1), (32, 18), (33, 2), (34, 16), (35, 17), (36, 3), (37, 17), (38, 3), (39, 17), (40, 17), (41, 17), (42, 16), (44, 17), (47, 16), (48, 3), (49, 1)]
Level  0  Matrix 6 Cols: [(3, 26), (6, 27), (7, 25), (8, 26), (11, 26), (13, 25), (14, 26), (15, 26), (17, 25), (18, 26), (19, 25), (21, 25), (22, 27), (28, 5), (35, 26), (36, 26), (38, 3), (39, 26), (44, 5), (47, 26)]
Level  0  Matrix 6 Edges : [(1, 6), (1, 14), (1, 17), (1, 44), (3, 3), (3, 6), (3, 7), (3, 8), (3, 11), (3, 13), (3, 14), (3, 15), (3, 17), (3, 18), (3, 19), (3, 21), (3, 22), (3, 35), (3, 36), (3, 39), (3, 47), (5, 36), (5, 44), (6, 3), (6, 6), (6, 7), (6, 8), (6, 11), (6, 14), (6, 15), (6, 17), (6, 18), (6, 19), (6, 21), (6, 22), (6, 35), (6, 36), (6, 39), (6, 47), (9, 8), (9, 18), (9, 35), (10, 3), (10, 6), (10, 7), (10, 8), (10, 11), (10, 13), (10, 14), (10, 15), (10, 17), (10, 18), (10, 19), (10, 21), (10, 22), (10, 35), (10, 36), (10, 39), (10, 47), (11, 6), (11, 18), (11, 39), (11, 47), (12, 3), (12, 6), (12, 7), (12, 8), (12, 11), (12, 13), (12, 14), (12, 15), (12, 17), (12, 18), (12, 19), (12, 21), (12, 22), (12, 35), (12, 36), (12, 39), (12, 47), (13, 15), (13, 44), (14, 3), (14, 6), (14, 7), (14, 8), (14, 11), (14, 13), (14, 14), (14, 15), (14, 17), (14, 18), (14, 19), (14, 21), (14, 22), (14, 35), (14, 36), (14, 39), (14, 47), (16, 3), (16, 6), (16, 7), (16, 8), (16, 11), (16, 13), (16, 14), (16, 15), (16, 17), (16, 18), (16, 19), (16, 21), (16, 22), (16, 35), (16, 36), (16, 39), (16, 47), (17, 3), (17, 6), (17, 7), (17, 8), (17, 11), (17, 13), (17, 14), (17, 15), (17, 17), (17, 18), (17, 19), (17, 21), (17, 22), (17, 35), (17, 36), (17, 39), (17, 47), (18, 3), (18, 6), (18, 7), (18, 8), (18, 11), (18, 13), (18, 14), (18, 15), (18, 17), (18, 18), (18, 19), (18, 21), (18, 22), (18, 35), (18, 36), (18, 39), (18, 47), (19, 3), (19, 6), (19, 7), (19, 11), (19, 13), (19, 14), (19, 15), (19, 17), (19, 19), (19, 21), (19, 22), (19, 35), (19, 36), (19, 39), (19, 47), (20, 13), (20, 22), (20, 28), (20, 39), (22, 3), (22, 6), (22, 7), (22, 8), (22, 11), (22, 13), (22, 14), (22, 15), (22, 17), (22, 18), (22, 19), (22, 22), (22, 35), (22, 36), (22, 39), (22, 47), (24, 3), (24, 6), (24, 7), (24, 8), (24, 11), (24, 13), (24, 14), (24, 15), (24, 18), (24, 21), (24, 22), (24, 28), (24, 35), (24, 36), (24, 39), (24, 47), (25, 3), (25, 6), (25, 7), (25, 8), (25, 11), (25, 13), (25, 14), (25, 15), (25, 17), (25, 18), (25, 19), (25, 21), (25, 22), (25, 35), (25, 36), (25, 39), (25, 47), (26, 44), (27, 3), (27, 6), (27, 7), (27, 8), (27, 11), (27, 13), (27, 14), (27, 15), (27, 17), (27, 18), (27, 19), (27, 21), (27, 22), (27, 28), (27, 35), (27, 36), (27, 39), (27, 47), (29, 3), (29, 6), (29, 7), (29, 8), (29, 11), (29, 13), (29, 14), (29, 15), (29, 17), (29, 18), (29, 19), (29, 21), (29, 22), (29, 35), (29, 36), (29, 39), (29, 47), (30, 3), (30, 6), (30, 7), (30, 8), (30, 11), (30, 13), (30, 14), (30, 15), (30, 17), (30, 18), (30, 19), (30, 21), (30, 22), (30, 35), (30, 36), (30, 39), (30, 47), (31, 36), (32, 3), (32, 6), (32, 7), (32, 8), (32, 11), (32, 13), (32, 14), (32, 15), (32, 17), (32, 18), (32, 19), (32, 21), (32, 22), (32, 28), (32, 35), (32, 36), (32, 39), (32, 47), (33, 6), (33, 28), (34, 3), (34, 6), (34, 7), (34, 8), (34, 11), (34, 13), (34, 14), (34, 15), (34, 17), (34, 18), (34, 19), (34, 21), (34, 22), (34, 35), (34, 39), (34, 47), (35, 3), (35, 6), (35, 7), (35, 8), (35, 11), (35, 13), (35, 14), (35, 15), (35, 17), (35, 18), (35, 19), (35, 21), (35, 22), (35, 35), (35, 36), (35, 39), (35, 47), (36, 3), (36, 21), (36, 22), (37, 3), (37, 6), (37, 7), (37, 8), (37, 11), (37, 13), (37, 14), (37, 15), (37, 17), (37, 18), (37, 19), (37, 21), (37, 22), (37, 35), (37, 36), (37, 39), (37, 47), (38, 7), (38, 15), (38, 38), (39, 3), (39, 6), (39, 8), (39, 11), (39, 13), (39, 14), (39, 15), (39, 17), (39, 18), (39, 19), (39, 21), (39, 22), (39, 35), (39, 36), (39, 38), (39, 39), (39, 47), (40, 3), (40, 6), (40, 7), (40, 8), (40, 11), (40, 13), (40, 14), (40, 17), (40, 18), (40, 19), (40, 21), (40, 22), (40, 35), (40, 36), (40, 39), (40, 44), (40, 47), (41, 3), (41, 6), (41, 7), (41, 8), (41, 11), (41, 13), (41, 14), (41, 15), (41, 17), (41, 18), (41, 19), (41, 21), (41, 22), (41, 35), (41, 36), (41, 39), (41, 47), (42, 3), (42, 6), (42, 7), (42, 8), (42, 11), (42, 13), (42, 14), (42, 15), (42, 17), (42, 18), (42, 19), (42, 21), (42, 22), (42, 35), (42, 36), (42, 47), (44, 3), (44, 6), (44, 7), (44, 8), (44, 11), (44, 13), (44, 14), (44, 15), (44, 17), (44, 18), (44, 19), (44, 21), (44, 22), (44, 35), (44, 36), (44, 39), (44, 47), (47, 3), (47, 7), (47, 8), (47, 11), (47, 13), (47, 14), (47, 15), (47, 17), (47, 18), (47, 19), (47, 21), (47, 22), (47, 35), (47, 36), (47, 39), (47, 47), (48, 11), (48, 19), (48, 38), (49, 8)]

 Level  0  Matrix 7 Rows: [(0, 0), (1, 1), (2, 2), (3, 9), (4, 1), (5, 0), (6, 9), (7, 1), (8, 0), (9, 1), (10, 9), (11, 3), (12, 9), (13, 1), (14, 9), (15, 0), (16, 9), (17, 9), (18, 9), (19, 8), (20, 1), (21, 2), (22, 8), (23, 1), (24, 8), (25, 9), (26, 0), (27, 9), (28, 1), (29, 9), (30, 9), (31, 0), (32, 9), (33, 1), (34, 9), (35, 9), (36, 2), (37, 9), (38, 2), (39, 8), (40, 8), (41, 9), (42, 9), (43, 1), (44, 9), (45, 1), (46, 1), (47, 8), (48, 2), (49, 0)]
Level 0  Matrix 7 Cols: [(6, 28), (7, 26), (11, 27), (15, 26), (18, 28), (19, 27), (21, 27), (22, 28), (47, 27)]
Level 0  Matrix 7 Edges : [(1, 6), (2, 22), (2, 47), (3, 6), (3, 7), (3, 11), (3, 15), (3, 18), (3, 19), (3, 21), (3, 22), (3, 47), (4, 18), (6, 6), (6, 7), (6, 11), (6, 15), (6, 18), (6, 19), (6, 21), (6, 22), (6, 47), (7, 19), (9, 18), (10, 6), (10, 7), (10, 11), (10, 15), (10, 18), (10, 19), (10, 21), (10, 22), (10, 47), (11, 6), (11, 18), (11, 47), (12, 6), (12, 7), (12, 11), (12, 15), (12, 18), (12, 19), (12, 21), (12, 22), (12, 47), (13, 15), (14, 6), (14, 7), (14, 11), (14, 15), (14, 18), (14, 19), (14, 21), (14, 22), (14, 47), (16, 6), (16, 7), (16, 11), (16, 15), (16, 18), (16, 19), (16, 21), (16, 22), (16, 47), (17, 6), (17, 7), (17, 11), (17, 15), (17, 18), (17, 19), (17, 21), (17, 22), (17, 47), (18, 6), (18, 7), (18, 11), (18, 15), (18, 18), (18, 19), (18, 21), (18, 22), (18, 47), (19, 6), (19, 7), (19, 11), (19, 15), (19, 19), (19, 21), (19, 22), (19, 47), (20, 22), (21, 7), (21, 18), (22, 6), (22, 7), (22, 11), (22, 15), (22, 18), (22, 19), (22, 22), (22, 47), (23, 19), (24, 6), (24, 7), (24, 11), (24, 15), (24, 18), (24, 21), (24, 22), (24, 47), (25, 6), (25, 7), (25, 11), (25, 15), (25, 18), (25, 19), (25, 21), (25, 22), (25, 47), (27, 6), (27, 7), (27, 11), (27, 15), (27, 18), (27, 19), (27, 21), (27, 22), (27, 47), (28, 6), (29, 6), (29, 7), (29, 11), (29, 15), (29, 18), (29, 19), (29, 21), (29, 22), (29, 47), (30, 6), (30, 7), (30, 11), (30, 15), (30, 18), (30, 19), (30, 21), (30, 22), (30, 47), (32, 6), (32, 7), (32, 11), (32, 15), (32, 18), (32, 19), (32, 21), (32, 22), (32, 47), (33, 6), (34, 6), (34, 7), (34, 11), (34, 15), (34, 18), (34, 19), (34, 21), (34, 22), (34, 47), (35, 6), (35, 7), (35, 11), (35, 15), (35, 18), (35, 19), (35, 21), (35, 22), (35, 47), (36, 21), (36, 22), (37, 6), (37, 7), (37, 11), (37, 15), (37, 18), (37, 19), (37, 21), (37, 22), (37, 47), (38, 7), (38, 15), (39, 6), (39, 11), (39, 15), (39, 18), (39, 19), (39, 21), (39, 22), (39, 47), (40, 6), (40, 7), (40, 11), (40, 18), (40, 19), (40, 21), (40, 22), (40, 47), (41, 6), (41, 7), (41, 11), (41, 15), (41, 18), (41, 19), (41, 21), (41, 22), (41, 47), (42, 6), (42, 7), (42, 11), (42, 15), (42, 18), (42, 19), (42, 21), (42, 22), (42, 47), (43, 11), (44, 6), (44, 7), (44, 11), (44, 15), (44, 18), (44, 19), (44, 21), (44, 22), (44, 47), (45, 21), (46, 21), (47, 7), (47, 11), (47, 15), (47, 18), (47, 19), (47, 21), (47, 22), (47, 47), (48, 11), (48, 19)]

Task with matrix 6 with size (38,20) and density 0.5947368421052631 and number of ones 452  and number of zeros 308 has been added to the queue.

 Return from 6 with winning node = 6

calling decrease_and_conquer for node 7

Task with matrix 7 with size (50,9) and density 0.5422222222222223 and number of ones 244  and number of zeros 206 has been added to the queue.

return in decrease_and_conquer from 7 with winning node = 7

return in decrease_and_conquer from 3 with winning node = 6

return in decrease_and_conquer from 3 with winning node = 6

return in decrease_and_conquer from 1 with winning node = 5

----------------------------------------------------------------------

End of tasks generation stage. Last generated task from matrix 1 with winning node 5 and global time 0.0000000,
rows = [(3, 37), (4, 3), (5, 4), (6, 31), (8, 2), (9, 5), (10, 31), (12, 32), (13, 4), (14, 33), (16, 32), (17, 34), (18, 34), (19, 32), (21, 4), (22, 31), (23, 2), (24, 32), (25, 33), (27, 33), (28, 3), (29, 33), (30, 35), (31, 4), (32, 33), (34, 32), (35, 32), (37, 33), (38, 5), (39, 33), (40, 34), (41, 33), (42, 32), (43, 2), (44, 31), (46, 2), (47, 32), (49, 2)], 
cols = [(3, 25), (4, 25), (6, 25), (7, 26), (8, 26), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 25), (15, 26), (16, 3), (17, 24), (18, 27), (19, 25), (20, 25), (21, 25), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 3), (29, 6), (30, 25), (31, 23), (32, 24), (33, 24), (34, 4), (35, 26), (36, 26), (38, 2), (39, 24), (40, 3), (41, 24), (42, 3), (43, 26), (44, 3), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)], 
density = 0.5029239766081871, nb_ones = 860

----------------------------------------------------------------------

 Size of the queue: 4
 Matrix: 5, Size: 1710, Number Rows: 38,  Number Cols: 45,  Number Edges: 860
 Matrix: 4, Size: 800, Number Rows: 16,  Number Cols: 50,  Number Edges: 510
 Matrix: 6, Size: 760, Number Rows: 38,  Number Cols: 20,  Number Edges: 452
 Matrix: 7, Size: 450, Number Rows: 50,  Number Cols: 9,  Number Edges: 244

----------------------------------------------------------------------

----------------------------------------------------------------------


***QUEUE Processing of task number 5 with (size 1710) selected_model max_e_r dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 5 in  data/data3.csv at level 0 and with model:  max_e_r***
Size of current matrix :  38 * 45 = 1710 ; dec_conq: 0
number input zeros :  850 ; number input ones :  860
rho =  0.1 ; delta :  0.0
Input density : 0.503 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.503 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.5029239766081871 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  7.479069767441861
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 7.479069767441861 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00503 - (Local CPU) 0.00503 - (Global CPU) 0.00503

 Solve status: Optimal Objective value: 7.479069767441861 nb_rows 34 nb_cols 45
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 45) and density : 0.5568627450980392 and number of remaining ones : 852
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 2), (10, 25), (11, 26), (12, 23), (13, 24), (14, 25), (15, 26), (16, 2), (17, 24), (18, 27), (19, 24), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (27, 2), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 2), (39, 24), (40, 2), (41, 24), (42, 2), (43, 26), (44, 3), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)]
nb_edges_0 = 678 rho= 0.1 # of rows = 34 # of columns= 45 total_degree_0= 678 RHS= 67.8
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 7.479069767441861 KP time = 0.0050305420299991965 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00497 - (Local CPU) 0.00497 - (Global CPU) 0.01000

 Solve status: Optimal Objective value: 4.2375 nb_rows 34 nb_cols 42
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 42) and density : 0.592436974789916 and number of remaining ones : 852
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.592 density  and density_threshold= 0.770


I am in the while loop with i= 2 density= 0.592436974789916 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  1.86
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 1.86 KP time = 0.010004042007494718 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00502 - (Local CPU) 0.00502 - (Global CPU) 0.01502

 Solve status: Optimal Objective value: 1.86 nb_rows 32 nb_cols 42
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (32, 42) and density : 0.6272321428571429 and number of remaining ones : 843
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 25), (4, 25), (6, 25), (7, 26), (8, 25), (9, 1), (10, 25), (11, 25), (12, 23), (13, 24), (14, 25), (15, 26), (17, 24), (18, 26), (19, 24), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 26), (26, 22), (28, 3), (29, 5), (30, 25), (31, 23), (32, 23), (33, 24), (34, 4), (35, 26), (36, 26), (38, 2), (39, 24), (41, 24), (42, 2), (43, 26), (44, 3), (45, 5), (46, 25), (47, 25), (48, 23), (49, 26)]
nb_edges_0 = 501 rho= 0.1 # of rows = 32 # of columns= 42 total_degree_0= 501 RHS= 50.1
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 1.86 KP time = 0.015020416991319507 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00489 - (Local CPU) 0.00489 - (Global CPU) 0.01991

 Solve status: Optimal Objective value: 2.2733333333333334 nb_rows 32 nb_cols 40
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (32, 40) and density : 0.65625 and number of remaining ones : 843
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.656 density  and density_threshold= 0.770


I am in the while loop with i= 3 density= 0.65625 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  3.7777777777777777
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 3.7777777777777777 KP time = 0.019913207972422242 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00498 - (Local CPU) 0.00498 - (Global CPU) 0.02489

 Solve status: Optimal Objective value: 3.7777777777777777 nb_rows 30 nb_cols 40
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (30, 40) and density : 0.6941666666666667 and number of remaining ones : 833
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 25), (4, 25), (6, 24), (7, 25), (8, 25), (10, 25), (11, 25), (12, 23), (13, 24), (14, 25), (15, 25), (17, 24), (18, 26), (19, 24), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 4), (30, 25), (31, 23), (32, 23), (33, 24), (34, 3), (35, 26), (36, 26), (39, 24), (41, 24), (42, 2), (43, 26), (44, 3), (45, 4), (46, 25), (47, 25), (48, 23), (49, 26)]
nb_edges_0 = 367 rho= 0.1 # of rows = 30 # of columns= 40 total_degree_0= 367 RHS= 36.7
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 3.7777777777777777 KP time = 0.024891957989893854 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00491 - (Local CPU) 0.00491 - (Global CPU) 0.02980

 Solve status: Optimal Objective value: 2.966666666666667 nb_rows 30 nb_cols 38
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (30, 38) and density : 0.7263157894736842 and number of remaining ones : 833
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.726 density  and density_threshold= 0.770


I am in the while loop with i= 4 density= 0.7263157894736842 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  2.6742857142857144
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 2.6742857142857144 KP time = 0.029798666015267372 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00506 - (Local CPU) 0.00506 - (Global CPU) 0.03486

 Solve status: Optimal Objective value: 2.6742857142857144 nb_rows 29 nb_cols 38
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 38) and density : 0.7486388384754991 and number of remaining ones : 825
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 25), (4, 25), (6, 24), (7, 25), (8, 25), (10, 25), (11, 25), (12, 23), (13, 24), (14, 25), (15, 25), (17, 24), (18, 26), (19, 24), (20, 25), (21, 24), (22, 25), (23, 4), (24, 24), (25, 25), (26, 22), (28, 3), (29, 4), (30, 25), (31, 23), (32, 23), (33, 24), (35, 26), (36, 25), (39, 24), (41, 24), (43, 26), (44, 2), (45, 3), (46, 25), (47, 25), (48, 23), (49, 26)]
nb_edges_0 = 277 rho= 0.1 # of rows = 29 # of columns= 38 total_degree_0= 277 RHS= 27.700000000000003
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 2.6742857142857144 KP time = 0.034862749045714736 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00493 - (Local CPU) 0.00493 - (Global CPU) 0.03980

 Solve status: Optimal Objective value: 2.0807692307692305 nb_rows 29 nb_cols 36
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 36) and density : 0.7854406130268199 and number of remaining ones : 825
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 4 iterations
            Density : 0.785 > 0.77
            It took me : 0.040 time
            Found matrix of size : (29, 36) and density : 0.785
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 420.0
Model status: Optimal
Solution saved to Experiments/data3/results_0_M_5.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_r  Local Time:  - (real) 0.13190 - (Local CPU) 0.13190 - (Global CPU) 0.13190

 Solve status: Optimal Objective value: 420.0 nb_rows 20 nb_cols 21
----------------------------------------

----------------------------------------
Results from update_data after solving model = max_e_r  with delta =   0.0 and dec_conq=  0
Number of Remaining  Rows  : 20
Number of Remaining Columns : 21
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 420 Density : 1.0 current obj value 420.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 20  and cols_res of lenght = 21
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 5
        with delta =  0.0
        Found matrix of size : (20, 21)
        and density : 1.0
        and # of ones : 420
        and Heuristic QBC time   : 0.00000
        and Global QBC  time  : 0.13190
        
 Remaining Rows  : [(3, 21), (6, 21), (12, 21), (14, 21), (16, 21), (17, 21), (18, 21), (22, 21), (25, 21), (29, 21), (30, 21), (32, 21), (34, 21), (35, 21), (37, 21), (39, 21), (41, 21), (42, 21), (44, 21), (47, 21)]
 Remaining  Cols  : [(3, 20), (4, 20), (8, 20), (10, 20), (11, 20), (14, 20), (15, 20), (17, 20), (18, 20), (19, 20), (20, 20), (22, 20), (24, 20), (30, 20), (35, 20), (41, 20), (43, 20), (46, 20), (47, 20), (48, 20), (49, 20)]

----------------------------------------------------------------------
 
    End of computations for matrix 5 in  data/data3.csv at level 0 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (20,21), with  density : 1.0 and number of ones: 420
    Global Time (in sec): 0.172
    Total Time in QBC approaches: 0.132
    Time in greedy approach: 0.040,  size of matrix found by greedy : (29,36) 
    With density : 0.785 and # ones : 820 
    Time in heuristic only : 0.000 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 4
    Percentage of greedy approach run time in global run time : 23.18% 
    Percentage of heuristic run time in QBC run time : 0.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

Processed task number 5 with  (size 1710) -> obj = 420

***QUEUE Processing of task number 4 with (size 800) selected_model max_e_r dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 4 in  data/data3.csv at level 0 and with model:  max_e_r***
Size of current matrix :  16 * 50 = 800 ; dec_conq: 0
number input zeros :  290 ; number input ones :  510
rho =  0.1 ; delta :  0.0
Input density : 0.637 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.637 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.6375 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  223.9058823529412
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 223.9058823529412 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00778 - (Local CPU) 0.00778 - (Global CPU) 0.00778

 Solve status: Optimal Objective value: 223.9058823529412 nb_rows 8 nb_cols 50
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (8, 44) and density : 0.7840909090909091 and number of remaining ones : 276
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(1, 3), (3, 8), (4, 8), (5, 1), (6, 8), (7, 8), (8, 8), (9, 1), (10, 8), (11, 8), (12, 7), (13, 8), (14, 8), (15, 7), (16, 1), (17, 8), (18, 8), (19, 8), (20, 8), (21, 8), (22, 8), (23, 3), (24, 7), (25, 8), (26, 8), (27, 1), (29, 1), (30, 8), (31, 8), (32, 8), (33, 8), (34, 1), (35, 8), (36, 8), (39, 7), (41, 8), (42, 2), (43, 8), (44, 1), (45, 1), (46, 8), (47, 8), (48, 8), (49, 8)]
nb_edges_0 = 76 rho= 0.1 # of rows = 8 # of columns= 44 total_degree_0= 76 RHS= 7.6000000000000005
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 223.9058823529412 KP time = 0.0077806669869460166 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00527 - (Local CPU) 0.00527 - (Global CPU) 0.01305

 Solve status: Optimal Objective value: 1.0857142857142856 nb_rows 8 nb_cols 42
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (8, 42) and density : 0.8154761904761905 and number of remaining ones : 276
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.815 > 0.77
            It took me : 0.013 time
            Found matrix of size : (8, 42) and density : 0.815
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 232.0
Model status: Optimal
Solution saved to Experiments/data3/results_0_M_4.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_r  Local Time:  - (real) 0.01242 - (Local CPU) 0.01242 - (Global CPU) 0.01242

 Solve status: Optimal Objective value: 232.0 nb_rows 8 nb_cols 29
----------------------------------------

----------------------------------------
Results from update_data after solving model = max_e_r  with delta =   0.0 and dec_conq=  0
Number of Remaining  Rows  : 8
Number of Remaining Columns : 29
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 232 Density : 1.0 current obj value 232.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 8  and cols_res of lenght = 29
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 4
        with delta =  0.0
        Found matrix of size : (8, 29)
        and density : 1.0
        and # of ones : 232
        and Heuristic QBC time   : 0.00000
        and Global QBC  time  : 0.01242
        
 Remaining Rows  : [(3, 29), (17, 29), (18, 29), (25, 29), (30, 29), (40, 29), (41, 29), (42, 29)]
 Remaining  Cols  : [(3, 8), (4, 8), (6, 8), (7, 8), (8, 8), (10, 8), (11, 8), (13, 8), (14, 8), (17, 8), (18, 8), (19, 8), (20, 8), (21, 8), (22, 8), (25, 8), (26, 8), (30, 8), (31, 8), (32, 8), (33, 8), (35, 8), (36, 8), (41, 8), (43, 8), (46, 8), (47, 8), (48, 8), (49, 8)]

----------------------------------------------------------------------
 
    End of computations for matrix 4 in  data/data3.csv at level 0 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (8,29), with  density : 1.0 and number of ones: 232
    Global Time (in sec): 0.025
    Total Time in QBC approaches: 0.012
    Time in greedy approach: 0.013,  size of matrix found by greedy : (8,42) 
    With density : 0.815 and # ones : 274 
    Time in heuristic only : 0.000 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 51.24% 
    Percentage of heuristic run time in QBC run time : 0.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

Processed task number 4 with  (size 800) -> obj = 232

***QUEUE Processing of task number 6 with (size 760) selected_model max_e_r dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 6 in  data/data3.csv at level 0 and with model:  max_e_r***
Size of current matrix :  38 * 20 = 760 ; dec_conq: 0
number input zeros :  308 ; number input ones :  452
rho =  0.1 ; delta :  0.0
Input density : 0.595 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.595 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.5947368421052631 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  17.788235294117648
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 17.788235294117648 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00603 - (Local CPU) 0.00603 - (Global CPU) 0.00603

 Solve status: Optimal Objective value: 17.788235294117648 nb_rows 29 nb_cols 20
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 20) and density : 0.7482758620689656 and number of remaining ones : 434
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 26), (6, 26), (7, 24), (8, 24), (11, 25), (13, 25), (14, 26), (15, 24), (17, 25), (18, 25), (19, 24), (21, 25), (22, 27), (28, 4), (35, 25), (36, 24), (38, 1), (39, 26), (44, 2), (47, 26)]
nb_edges_0 = 146 rho= 0.1 # of rows = 29 # of columns= 20 total_degree_0= 146 RHS= 14.600000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 17.788235294117648 KP time = 0.006031041033565998 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00522 - (Local CPU) 0.00522 - (Global CPU) 0.01125

 Solve status: Optimal Objective value: 0.5214285714285715 nb_rows 29 nb_cols 19
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 19) and density : 0.7858439201451906 and number of remaining ones : 434
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.786 > 0.77
            It took me : 0.011 time
            Found matrix of size : (29, 19) and density : 0.786
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 272.0
Model status: Optimal
Solution saved to Experiments/data3/results_0_M_6.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_r  Local Time:  - (real) 0.03312 - (Local CPU) 0.03312 - (Global CPU) 0.03312

 Solve status: Optimal Objective value: 272.0 nb_rows 16 nb_cols 17
----------------------------------------

----------------------------------------
Results from update_data after solving model = max_e_r  with delta =   0.0 and dec_conq=  0
Number of Remaining  Rows  : 16
Number of Remaining Columns : 17
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 272 Density : 1.0 current obj value 272.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 16  and cols_res of lenght = 17
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 6
        with delta =  0.0
        Found matrix of size : (16, 17)
        and density : 1.0
        and # of ones : 272
        and Heuristic QBC time   : 0.00000
        and Global QBC  time  : 0.03312
        
 Remaining Rows  : [(3, 17), (10, 17), (12, 17), (14, 17), (16, 17), (17, 17), (18, 17), (25, 17), (27, 17), (29, 17), (30, 17), (32, 17), (35, 17), (37, 17), (41, 17), (44, 17)]
 Remaining  Cols  : [(3, 16), (6, 16), (7, 16), (8, 16), (11, 16), (13, 16), (14, 16), (15, 16), (17, 16), (18, 16), (19, 16), (21, 16), (22, 16), (35, 16), (36, 16), (39, 16), (47, 16)]

----------------------------------------------------------------------
 
    End of computations for matrix 6 in  data/data3.csv at level 0 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (16,17), with  density : 1.0 and number of ones: 272
    Global Time (in sec): 0.044
    Total Time in QBC approaches: 0.033
    Time in greedy approach: 0.011,  size of matrix found by greedy : (29,19) 
    With density : 0.786 and # ones : 433 
    Time in heuristic only : 0.000 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 25.36% 
    Percentage of heuristic run time in QBC run time : 0.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

Processed task number 6 with  (size 760) -> obj = 272

***QUEUE Processing of task number 7 with (size 450) selected_model max_e_r dec_conq 0 delta 0.0 threshold 0.77 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 7 in  data/data3.csv at level 0 and with model:  max_e_r***
Size of current matrix :  50 * 9 = 450 ; dec_conq: 0
number input zeros :  206 ; number input ones :  244
rho =  0.1 ; delta :  0.0
Input density : 0.542 ; density_threshold: 0.77000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.542 density  and density_threshold= 0.770


I am in the while loop with i= 1 density= 0.5422222222222223 and fixed_threshold= 0.77

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  12.514285714285718
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 12.514285714285718 KP time = 0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.00538 - (Local CPU) 0.00538 - (Global CPU) 0.00538

 Solve status: Optimal Objective value: 12.514285714285718 nb_rows 30 nb_cols 9
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (30, 9) and density : 0.8518518518518519 and number of remaining ones : 230
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(6, 25), (7, 26), (11, 26), (15, 25), (18, 26), (19, 25), (21, 24), (22, 26), (47, 27)]
nb_edges_0 = 40 rho= 0.1 # of rows = 30 # of columns= 9 total_degree_0= 40 RHS= 4.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 12.514285714285718 KP time = 0.005378166970331222 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.00498 - (Local CPU) 0.00498 - (Global CPU) 0.01036

 Solve status: Optimal Objective value: 16.0 nb_rows 30 nb_cols 8
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (30, 8) and density : 0.8583333333333333 and number of remaining ones : 230
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 1 iterations
            Density : 0.858 > 0.77
            It took me : 0.010 time
            Found matrix of size : (30, 8) and density : 0.858
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 160.0
Model status: Optimal
Solution saved to Experiments/data3/results_0_M_7.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_r  Local Time:  - (real) 0.00978 - (Local CPU) 0.00978 - (Global CPU) 0.00978

 Solve status: Optimal Objective value: 160.0 nb_rows 20 nb_cols 8
----------------------------------------

----------------------------------------
Results from update_data after solving model = max_e_r  with delta =   0.0 and dec_conq=  0
Number of Remaining  Rows  : 20
Number of Remaining Columns : 8
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 160 Density : 1.0 current obj value 160.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_r  with delta= 0.0 Found matrix with rows_res of lenght = 20  and cols_res of lenght = 8
----------------------------------------

        Exit from the exact approach: max_e_r for matrix 7
        with delta =  0.0
        Found matrix of size : (20, 8)
        and density : 1.0
        and # of ones : 160
        and Heuristic QBC time   : 0.00000
        and Global QBC  time  : 0.00978
        
 Remaining Rows  : [(3, 8), (6, 8), (10, 8), (12, 8), (14, 8), (16, 8), (17, 8), (18, 8), (22, 8), (25, 8), (27, 8), (29, 8), (30, 8), (32, 8), (34, 8), (35, 8), (37, 8), (41, 8), (42, 8), (44, 8)]
 Remaining  Cols  : [(6, 20), (7, 20), (11, 20), (15, 20), (18, 20), (19, 20), (22, 20), (47, 20)]

----------------------------------------------------------------------
 
    End of computations for matrix 7 in  data/data3.csv at level 0 and debug  2
    With  model: max_e_r and quasi-biclique error: 0.0 
    Size of Remaining matrix : (20,8), with  density : 1.0 and number of ones: 160
    Global Time (in sec): 0.020
    Total Time in QBC approaches: 0.010
    Time in greedy approach: 0.010,  size of matrix found by greedy : (30,8) 
    With density : 0.858 and # ones : 206 
    Time in heuristic only : 0.000 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 1
    Percentage of greedy approach run time in global run time : 51.45% 
    Percentage of heuristic run time in QBC run time : 0.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.77
    
----------------------------------------------------------------------

Processed task number 7 with  (size 450) -> obj = 160

***End of computations !!!

 Model building and solving global time: 0.6943 sec
 Tasks_generation  time: 0.3917 sec
 Process tasks pure solving time: 0.3026 sec
