----------------------------------------
 Input Data in txt files : data/random_bench/random_very_long.txt
Number Rows Data : 100
Number Cols Data : 100
Number Edges_1 : 8092
Number Edges_0 : 1908
----------------------------------------

----------------------------------------------------------------------
***Stats Current Input for matrix 1 in  data/random_bench/random_very_long.txt at level 3 and with model:  max_e_c***
Size of current matrix :  100 * 100 = 10000 ; dec_conq: 3
Prev_lower_bound :  None number input zeros :  8092 ; number input ones :  1908
rho =  0.1 ; delta :  0.0
Input density : 0.191 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.191 density  and density_threshold= 0.330


I am in the while loop with i= 1 density= 0.1908 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  23.745454545454546
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 23.745454545454546 KP time = 0.0 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.06165 - (Local CPU) 0.06165 - (Global CPU) 0.06165

 Solve status: Optimal Objective value: 23.745454545454546 nb_rows 97 nb_cols 100
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (97, 100) and density : 0.1931958762886598 and number of remaining ones : 1874
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 17), (2, 23), (3, 17), (4, 15), (5, 14), (6, 17), (7, 20), (8, 18), (9, 19), (10, 20), (11, 21), (12, 14), (13, 18), (14, 17), (15, 17), (16, 22), (17, 16), (18, 17), (19, 20), (20, 23), (21, 20), (22, 20), (23, 18), (24, 24), (25, 22), (26, 22), (27, 18), (28, 17), (29, 14), (30, 16), (31, 20), (32, 18), (33, 27), (34, 20), (35, 18), (36, 29), (37, 15), (38, 16), (39, 19), (40, 16), (41, 13), (42, 18), (43, 19), (44, 14), (45, 23), (46, 13), (47, 26), (48, 14), (49, 14), (50, 16), (51, 26), (52, 22), (53, 23), (54, 22), (55, 19), (56, 16), (57, 22), (58, 18), (59, 18), (60, 20), (61, 13), (62, 17), (63, 20), (64, 25), (65, 16), (66, 17), (67, 13), (68, 19), (69, 16), (70, 20), (71, 19), (72, 15), (73, 30), (74, 24), (75, 21), (76, 15), (77, 13), (78, 21), (79, 24), (80, 12), (81, 22), (82, 18), (83, 28), (84, 21), (85, 16), (86, 15), (87, 17), (88, 21), (89, 13), (90, 19), (91, 30), (92, 14), (93, 17), (94, 22), (95, 23), (96, 19), (97, 12), (98, 14), (99, 14)]
nb_edges_0 = 7826 rho= 0.1 # of rows = 97 # of columns= 100 total_degree_0= 7826 RHS= 782.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 23.745454545454546 KP time = 0.0616532500134781 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01643 - (Local CPU) 0.01643 - (Global CPU) 0.07808

 Solve status: Optimal Objective value: 120.31807228915663 nb_rows 97 nb_cols 90
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (97, 90) and density : 0.1997709049255441 and number of remaining ones : 1874
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.200 density  and density_threshold= 0.330


I am in the while loop with i= 2 density= 0.1997709049255441 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  108.59480519480519
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 108.59480519480519 KP time = 0.078082290943712 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01525 - (Local CPU) 0.01525 - (Global CPU) 0.09334

 Solve status: Optimal Objective value: 108.59480519480519 nb_rows 88 nb_cols 90
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (88, 90) and density : 0.20643939393939395 and number of remaining ones : 1635
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 16), (2, 21), (3, 17), (4, 14), (5, 14), (6, 17), (7, 19), (8, 18), (9, 18), (10, 20), (11, 19), (12, 12), (13, 16), (14, 17), (15, 15), (16, 22), (17, 13), (18, 16), (19, 19), (20, 20), (21, 19), (22, 18), (23, 18), (24, 24), (25, 19), (26, 20), (27, 18), (28, 17), (30, 16), (31, 18), (32, 16), (33, 26), (34, 17), (35, 17), (36, 26), (37, 14), (38, 13), (39, 19), (40, 15), (42, 16), (43, 19), (44, 13), (45, 23), (47, 24), (49, 14), (50, 15), (51, 23), (52, 21), (53, 22), (54, 21), (55, 18), (56, 16), (57, 20), (58, 17), (59, 16), (60, 20), (62, 16), (63, 20), (64, 23), (65, 15), (66, 17), (68, 19), (69, 14), (70, 18), (71, 19), (72, 14), (73, 29), (74, 22), (75, 19), (76, 13), (78, 19), (79, 22), (81, 19), (82, 16), (83, 25), (84, 20), (85, 16), (86, 13), (87, 16), (88, 19), (90, 19), (91, 28), (92, 13), (93, 15), (94, 19), (95, 23), (96, 18), (98, 13), (99, 14)]
nb_edges_0 = 6285 rho= 0.1 # of rows = 88 # of columns= 90 total_degree_0= 6285 RHS= 628.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 108.59480519480519 KP time = 0.09333566599525511 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01585 - (Local CPU) 0.01585 - (Global CPU) 0.10919

 Solve status: Optimal Objective value: 108.20270270270271 nb_rows 88 nb_cols 81
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (88, 81) and density : 0.21296296296296297 and number of remaining ones : 1635
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.213 density  and density_threshold= 0.330


I am in the while loop with i= 3 density= 0.21296296296296297 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  101.29411764705883
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 101.29411764705883 KP time = 0.10918737400788814 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01870 - (Local CPU) 0.01870 - (Global CPU) 0.12789

 Solve status: Optimal Objective value: 101.29411764705883 nb_rows 79 nb_cols 81
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (79, 81) and density : 0.21972183153617753 and number of remaining ones : 1406
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 18), (1, 15), (2, 19), (3, 14), (4, 13), (6, 16), (7, 16), (8, 18), (9, 17), (10, 20), (11, 17), (13, 14), (14, 16), (15, 14), (16, 19), (18, 15), (19, 18), (20, 20), (21, 18), (22, 15), (23, 16), (24, 24), (25, 18), (26, 19), (27, 16), (28, 15), (30, 16), (31, 17), (32, 15), (33, 23), (34, 17), (35, 13), (36, 24), (37, 13), (39, 16), (40, 13), (42, 15), (43, 19), (45, 22), (47, 21), (49, 14), (50, 14), (51, 21), (52, 20), (53, 20), (54, 20), (55, 17), (56, 16), (57, 17), (58, 16), (59, 13), (60, 18), (62, 15), (63, 18), (64, 22), (65, 14), (66, 16), (68, 17), (69, 13), (70, 17), (71, 19), (72, 14), (73, 29), (74, 18), (75, 17), (78, 17), (79, 19), (81, 17), (82, 15), (83, 23), (84, 19), (85, 14), (87, 15), (88, 18), (90, 19), (91, 27), (93, 12), (94, 18), (95, 23), (96, 17), (99, 14)]
nb_edges_0 = 4993 rho= 0.1 # of rows = 79 # of columns= 81 total_degree_0= 4993 RHS= 499.3
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 101.29411764705883 KP time = 0.1278859149897471 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01490 - (Local CPU) 0.01490 - (Global CPU) 0.14278

 Solve status: Optimal Objective value: 97.81846153846155 nb_rows 79 nb_cols 73
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (79, 73) and density : 0.2257672966880527 and number of remaining ones : 1406
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.226 density  and density_threshold= 0.330


I am in the while loop with i= 4 density= 0.2257672966880527 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  88.225
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 88.225 KP time = 0.14278466498944908 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01472 - (Local CPU) 0.01472 - (Global CPU) 0.15751

 Solve status: Optimal Objective value: 88.225 nb_rows 71 nb_cols 73
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (71, 73) and density : 0.2324908354234999 and number of remaining ones : 1205
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 17), (1, 14), (2, 16), (3, 14), (6, 14), (7, 16), (8, 17), (9, 16), (10, 19), (11, 16), (13, 14), (14, 13), (15, 13), (16, 18), (18, 14), (19, 16), (20, 20), (21, 16), (22, 13), (23, 15), (24, 24), (25, 16), (26, 17), (27, 14), (28, 14), (30, 15), (31, 16), (32, 15), (33, 20), (34, 16), (36, 23), (39, 15), (42, 13), (43, 16), (45, 20), (47, 18), (49, 13), (50, 11), (51, 19), (52, 18), (53, 19), (54, 18), (55, 16), (56, 16), (57, 16), (58, 13), (60, 18), (62, 13), (63, 15), (64, 20), (66, 14), (68, 14), (70, 17), (71, 18), (72, 12), (73, 28), (74, 17), (75, 17), (78, 17), (79, 18), (81, 16), (82, 15), (83, 22), (84, 19), (85, 13), (87, 13), (88, 18), (90, 17), (91, 26), (94, 17), (95, 21), (96, 15), (99, 13)]
nb_edges_0 = 3978 rho= 0.1 # of rows = 71 # of columns= 73 total_degree_0= 3978 RHS= 397.8
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 88.225 KP time = 0.15750595706049353 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01439 - (Local CPU) 0.01439 - (Global CPU) 0.17190

 Solve status: Optimal Objective value: 85.48965517241379 nb_rows 71 nb_cols 66
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (71, 66) and density : 0.23836961160904824 and number of remaining ones : 1205
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.238 density  and density_threshold= 0.330


I am in the while loop with i= 5 density= 0.23836961160904824 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  85.05094339622642
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 85.05094339622642 KP time = 0.17189620702993125 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01507 - (Local CPU) 0.01507 - (Global CPU) 0.18696

 Solve status: Optimal Objective value: 85.05094339622642 nb_rows 64 nb_cols 66
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (64, 66) and density : 0.24337121212121213 and number of remaining ones : 1028
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 15), (1, 14), (2, 15), (3, 13), (6, 13), (7, 14), (8, 17), (9, 14), (10, 17), (11, 13), (13, 14), (16, 14), (18, 14), (19, 15), (20, 19), (21, 14), (23, 14), (24, 20), (25, 15), (26, 15), (27, 12), (28, 13), (30, 13), (31, 14), (32, 13), (33, 19), (34, 16), (36, 21), (39, 15), (43, 16), (45, 19), (47, 18), (49, 13), (51, 17), (52, 17), (53, 17), (54, 18), (55, 15), (56, 15), (57, 13), (60, 17), (62, 12), (63, 15), (64, 18), (66, 11), (68, 13), (70, 16), (71, 17), (73, 27), (74, 16), (75, 16), (78, 17), (79, 17), (81, 15), (82, 14), (83, 20), (84, 16), (85, 12), (87, 11), (88, 18), (90, 15), (91, 24), (94, 14), (95, 19), (96, 13), (99, 12)]
nb_edges_0 = 3196 rho= 0.1 # of rows = 64 # of columns= 66 total_degree_0= 3196 RHS= 319.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 85.05094339622642 KP time = 0.18696424807421863 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01480 - (Local CPU) 0.01480 - (Global CPU) 0.20176

 Solve status: Optimal Objective value: 71.42745098039217 nb_rows 64 nb_cols 59
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (64, 59) and density : 0.2502648305084746 and number of remaining ones : 1028
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.250 density  and density_threshold= 0.330


I am in the while loop with i= 6 density= 0.2502648305084746 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  69.77021276595745
I solved model name = row_knapsack_problem for iteration i =  6 with obj value: 69.77021276595745 KP time = 0.20176287309732288 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01839 - (Local CPU) 0.01839 - (Global CPU) 0.22016

 Solve status: Optimal Objective value: 69.77021276595745 nb_rows 58 nb_cols 59
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (58, 59) and density : 0.25569842197545295 and number of remaining ones : 875
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 14), (1, 13), (2, 14), (3, 13), (6, 11), (7, 13), (8, 15), (9, 12), (10, 17), (11, 13), (13, 14), (16, 14), (18, 13), (19, 14), (20, 17), (21, 14), (23, 13), (24, 19), (25, 14), (26, 14), (28, 12), (30, 13), (31, 13), (32, 11), (33, 16), (34, 14), (36, 20), (39, 13), (43, 14), (45, 17), (47, 17), (49, 13), (51, 16), (52, 16), (53, 17), (54, 15), (55, 15), (56, 13), (60, 17), (63, 14), (64, 17), (68, 12), (70, 15), (71, 16), (73, 25), (74, 15), (75, 15), (78, 16), (79, 14), (81, 13), (82, 13), (83, 19), (84, 16), (88, 17), (90, 14), (91, 20), (94, 12), (95, 18), (96, 11)]
nb_edges_0 = 2547 rho= 0.1 # of rows = 58 # of columns= 59 total_degree_0= 2547 RHS= 254.70000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  6 with obj value: 69.77021276595745 KP time = 0.22015766508411616 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01476 - (Local CPU) 0.01476 - (Global CPU) 0.23492

 Solve status: Optimal Objective value: 62.66086956521739 nb_rows 58 nb_cols 53
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (58, 53) and density : 0.26219908913467793 and number of remaining ones : 875
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.262 density  and density_threshold= 0.330


I am in the while loop with i= 7 density= 0.26219908913467793 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  56.87619047619048
I solved model name = row_knapsack_problem for iteration i =  7 with obj value: 56.87619047619048 KP time = 0.23491658212151378 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01468 - (Local CPU) 0.01468 - (Global CPU) 0.24960

 Solve status: Optimal Objective value: 56.87619047619048 nb_rows 52 nb_cols 53
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (52, 53) and density : 0.2692307692307692 and number of remaining ones : 742
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (1, 11), (2, 13), (3, 12), (7, 11), (8, 14), (10, 14), (11, 11), (13, 13), (16, 14), (18, 10), (19, 12), (20, 16), (21, 9), (23, 13), (24, 18), (25, 13), (26, 14), (30, 13), (31, 13), (33, 15), (34, 13), (36, 19), (39, 13), (43, 13), (45, 15), (47, 16), (49, 11), (51, 15), (52, 14), (53, 16), (54, 13), (55, 14), (56, 12), (60, 15), (63, 14), (64, 16), (70, 15), (71, 15), (73, 24), (74, 15), (75, 14), (78, 13), (79, 12), (81, 12), (82, 11), (83, 18), (84, 14), (88, 17), (90, 14), (91, 19), (94, 11), (95, 18)]
nb_edges_0 = 2014 rho= 0.1 # of rows = 52 # of columns= 53 total_degree_0= 2014 RHS= 201.4
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  7 with obj value: 56.87619047619048 KP time = 0.2495983320986852 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01505 - (Local CPU) 0.01505 - (Global CPU) 0.26465

 Solve status: Optimal Objective value: 50.22926829268293 nb_rows 52 nb_cols 48
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (52, 48) and density : 0.2764423076923077 and number of remaining ones : 742
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.276 density  and density_threshold= 0.330


I am in the while loop with i= 8 density= 0.2764423076923077 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  47.2054054054054
I solved model name = row_knapsack_problem for iteration i =  8 with obj value: 47.2054054054054 KP time = 0.26465283206198364 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.02341 - (Local CPU) 0.02341 - (Global CPU) 0.28807

 Solve status: Optimal Objective value: 47.2054054054054 nb_rows 47 nb_cols 48
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (47, 48) and density : 0.28368794326241137 and number of remaining ones : 640
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 9), (1, 9), (2, 10), (3, 11), (8, 14), (10, 13), (13, 12), (16, 13), (19, 11), (20, 15), (23, 12), (24, 17), (25, 13), (26, 12), (30, 12), (31, 13), (33, 13), (34, 13), (36, 19), (39, 12), (43, 12), (45, 15), (47, 14), (51, 15), (52, 14), (53, 16), (54, 11), (55, 14), (56, 12), (60, 14), (63, 14), (64, 15), (70, 14), (71, 13), (73, 22), (74, 14), (75, 12), (78, 12), (79, 11), (81, 12), (82, 9), (83, 17), (84, 12), (88, 15), (90, 14), (91, 17), (94, 10), (95, 17)]
nb_edges_0 = 1616 rho= 0.1 # of rows = 47 # of columns= 48 total_degree_0= 1616 RHS= 161.60000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  8 with obj value: 47.2054054054054 KP time = 0.28806608205195516 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01869 - (Local CPU) 0.01869 - (Global CPU) 0.30676

 Solve status: Optimal Objective value: 39.86486486486486 nb_rows 47 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (47, 43) and density : 0.293419099455715 and number of remaining ones : 640
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.293 density  and density_threshold= 0.330


I am in the while loop with i= 9 density= 0.293419099455715 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  43.27272727272728
I solved model name = row_knapsack_problem for iteration i =  9 with obj value: 43.27272727272728 KP time = 0.3067592070437968 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01583 - (Local CPU) 0.01583 - (Global CPU) 0.32259

 Solve status: Optimal Objective value: 43.27272727272728 nb_rows 42 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (42, 43) and density : 0.30066445182724255 and number of remaining ones : 543
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 11), (8, 12), (10, 12), (13, 12), (16, 13), (19, 10), (20, 13), (23, 12), (24, 17), (25, 12), (26, 12), (30, 11), (31, 13), (33, 11), (34, 13), (36, 17), (39, 12), (43, 11), (45, 13), (47, 13), (51, 14), (52, 10), (53, 15), (54, 11), (55, 13), (56, 11), (60, 13), (63, 12), (64, 12), (70, 13), (71, 11), (73, 21), (74, 12), (75, 11), (78, 12), (79, 11), (81, 10), (83, 15), (84, 11), (88, 13), (90, 12), (91, 14), (95, 16)]
nb_edges_0 = 1263 rho= 0.1 # of rows = 42 # of columns= 43 total_degree_0= 1263 RHS= 126.30000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  9 with obj value: 43.27272727272728 KP time = 0.32258758204989135 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01504 - (Local CPU) 0.01504 - (Global CPU) 0.33762

 Solve status: Optimal Objective value: 40.751612903225805 nb_rows 42 nb_cols 39
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (42, 39) and density : 0.3064713064713065 and number of remaining ones : 543
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.306 density  and density_threshold= 0.330


I am in the while loop with i= 10 density= 0.3064713064713065 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  35.13793103448276
I solved model name = row_knapsack_problem for iteration i =  10 with obj value: 35.13793103448276 KP time = 0.33762383204884827 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01483 - (Local CPU) 0.01483 - (Global CPU) 0.35246

 Solve status: Optimal Objective value: 35.13793103448276 nb_rows 38 nb_cols 39
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (38, 39) and density : 0.31376518218623484 and number of remaining ones : 465
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(3, 9), (8, 11), (10, 12), (13, 12), (16, 12), (20, 13), (23, 11), (24, 15), (25, 12), (26, 10), (30, 10), (31, 12), (33, 9), (34, 13), (36, 16), (39, 11), (43, 9), (45, 13), (47, 12), (51, 14), (53, 13), (54, 11), (55, 13), (56, 11), (60, 12), (63, 11), (64, 11), (70, 11), (73, 18), (74, 11), (75, 11), (78, 10), (79, 10), (83, 15), (84, 10), (88, 12), (90, 10), (91, 14), (95, 15)]
nb_edges_0 = 1017 rho= 0.1 # of rows = 38 # of columns= 39 total_degree_0= 1017 RHS= 101.7
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  10 with obj value: 35.13793103448276 KP time = 0.35245737398508936 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01521 - (Local CPU) 0.01521 - (Global CPU) 0.36767

 Solve status: Optimal Objective value: 32.25 nb_rows 38 nb_cols 35
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (38, 35) and density : 0.3218045112781955 and number of remaining ones : 465
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.322 density  and density_threshold= 0.330


I am in the while loop with i= 11 density= 0.3218045112781955 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  29.876923076923077
I solved model name = row_knapsack_problem for iteration i =  11 with obj value: 29.876923076923077 KP time = 0.36767145700287074 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01506 - (Local CPU) 0.01506 - (Global CPU) 0.38273

 Solve status: Optimal Objective value: 29.876923076923077 nb_rows 34 nb_cols 35
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 35) and density : 0.3302521008403361 and number of remaining ones : 393
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(8, 9), (10, 11), (13, 10), (16, 11), (20, 13), (23, 11), (24, 13), (25, 10), (26, 9), (30, 8), (31, 12), (34, 13), (36, 14), (39, 11), (45, 13), (47, 10), (51, 14), (53, 11), (54, 10), (55, 13), (56, 11), (60, 9), (63, 9), (64, 11), (70, 9), (73, 16), (74, 10), (75, 11), (78, 9), (79, 10), (83, 14), (88, 12), (90, 8), (91, 13), (95, 15)]
nb_edges_0 = 797 rho= 0.1 # of rows = 34 # of columns= 35 total_degree_0= 797 RHS= 79.7
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  11 with obj value: 29.876923076923077 KP time = 0.3827294569928199 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01502 - (Local CPU) 0.01502 - (Global CPU) 0.39775

 Solve status: Optimal Objective value: 25.972 nb_rows 34 nb_cols 31
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 31) and density : 0.340607210626186 and number of remaining ones : 393
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 11 iterations
            Density : 0.341 > 0.33
            It took me : 0.398 time
            Found matrix of size : (34, 31) and density : 0.341
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 140.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_3_M_1.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.19579 - (Local CPU) 0.19579 - (Global CPU) 0.19579

 Solve status: Optimal Objective value: 140.0 nb_rows 10 nb_cols 2
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 10
Number of Remaining number Columns : 2
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 20 Density : 1.0 current obj value 140.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 10  and cols_res of lenght = 2
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 1
        with delta =  0.0
        Found matrix of size : (10, 2)
        and density : 1.0
        and # of ones : 20
        and Heuristic QBC time   : 0.19579
        and Global QBC  time  : 0.19579
        
 Remaining Rows  : [27, 57, 7, 76, 77, 79, 8, 83, 87, 95]
 Remaining  Cols  : [45, 73]

----------------------------------------------------------------------
 
    End of computations for matrix 1 in  data/random_bench/random_very_long.txt at level 3 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (10,2), with  density : 1.0 and number of ones: 20
    Global Time (in sec): 0.594
    Total Time in QBC approaches: 0.196
    Time in greedy approach: 0.398,  size of matrix found by greedy : (34,31) 
    With density : 0.341 and # ones : 359 
    Time in heuristic only : 0.196 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 11
    Percentage of greedy approach run time in global run time : 67.01% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

dec_conq= 3

 Level 2, Matrix 2:
Size Rows: 90
Size Cols: 100

 Level 2 Matrix  3:
Size Rows: 100
Size Cols: 98

----------------------------------------------------------------------
***Stats Current Input for matrix 2 in  data/random_bench/random_very_long.txt at level 2 and with model:  max_e_c***
Size of current matrix :  90 * 100 = 9000 ; dec_conq: 2
Prev_lower_bound :  None number input zeros :  7317 ; number input ones :  1683
rho =  0.1 ; delta :  0.0
Input density : 0.187 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.187 density  and density_threshold= 0.330


I am in the while loop with i= 1 density= 0.187 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  23.745454545454546
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 23.745454545454546 KP time = 0.3977541649946943 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01738 - (Local CPU) 0.01739 - (Global CPU) 0.41514

 Solve status: Optimal Objective value: 23.745454545454546 nb_rows 87 nb_cols 100
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (87, 100) and density : 0.18954022988505748 and number of remaining ones : 1649
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 17), (2, 22), (3, 15), (4, 14), (5, 11), (6, 16), (7, 20), (8, 16), (9, 17), (10, 16), (11, 19), (12, 14), (13, 15), (14, 15), (15, 14), (16, 20), (17, 15), (18, 16), (19, 19), (20, 19), (21, 20), (22, 17), (23, 17), (24, 20), (25, 18), (26, 19), (27, 18), (28, 16), (29, 11), (30, 11), (31, 17), (32, 16), (33, 25), (34, 17), (35, 18), (36, 25), (37, 14), (38, 15), (39, 13), (40, 14), (41, 11), (42, 17), (43, 17), (44, 14), (45, 13), (46, 12), (47, 25), (48, 13), (49, 13), (50, 14), (51, 24), (52, 22), (53, 19), (54, 20), (55, 17), (56, 10), (57, 20), (58, 17), (59, 17), (60, 19), (61, 11), (62, 15), (63, 17), (64, 21), (65, 16), (66, 13), (67, 10), (68, 16), (69, 15), (70, 18), (71, 14), (72, 12), (73, 20), (74, 22), (75, 17), (76, 13), (77, 10), (78, 18), (79, 22), (80, 11), (81, 19), (82, 16), (83, 27), (84, 18), (85, 16), (86, 13), (87, 17), (88, 15), (89, 11), (90, 18), (91, 26), (92, 13), (93, 15), (94, 20), (95, 18), (96, 16), (97, 11), (98, 12), (99, 13)]
nb_edges_0 = 7051 rho= 0.1 # of rows = 87 # of columns= 100 total_degree_0= 7051 RHS= 705.1
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 23.745454545454546 KP time = 0.41514124907553196 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01484 - (Local CPU) 0.01484 - (Global CPU) 0.42998

 Solve status: Optimal Objective value: 98.61973684210527 nb_rows 87 nb_cols 90
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (87, 90) and density : 0.19693486590038314 and number of remaining ones : 1649
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.197 density  and density_threshold= 0.330


I am in the while loop with i= 2 density= 0.19693486590038314 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  98.06842105263158
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 98.06842105263158 KP time = 0.42998349911067635 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01493 - (Local CPU) 0.01493 - (Global CPU) 0.44492

 Solve status: Optimal Objective value: 98.06842105263158 nb_rows 78 nb_cols 90
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (78, 90) and density : 0.20384615384615384 and number of remaining ones : 1431
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 18), (1, 16), (2, 21), (3, 14), (4, 13), (6, 16), (7, 16), (8, 16), (9, 17), (10, 16), (11, 17), (12, 12), (13, 12), (14, 14), (15, 13), (16, 19), (17, 14), (18, 15), (19, 19), (20, 17), (21, 18), (22, 14), (23, 17), (24, 20), (25, 17), (26, 19), (27, 17), (28, 16), (31, 15), (32, 14), (33, 23), (34, 15), (35, 17), (36, 22), (37, 13), (38, 13), (39, 12), (40, 12), (42, 14), (43, 17), (44, 14), (45, 13), (46, 11), (47, 23), (48, 13), (49, 13), (50, 13), (51, 22), (52, 22), (53, 16), (54, 18), (55, 16), (57, 17), (58, 16), (59, 13), (60, 18), (62, 15), (63, 17), (64, 20), (65, 16), (66, 12), (68, 16), (69, 13), (70, 17), (71, 14), (72, 11), (73, 19), (74, 20), (75, 16), (76, 10), (78, 17), (79, 20), (81, 15), (82, 15), (83, 25), (84, 16), (85, 16), (86, 12), (87, 16), (88, 13), (90, 18), (91, 24), (92, 12), (93, 12), (94, 17), (95, 18), (96, 16), (97, 11), (98, 11), (99, 13)]
nb_edges_0 = 5589 rho= 0.1 # of rows = 78 # of columns= 90 total_degree_0= 5589 RHS= 558.9
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 98.06842105263158 KP time = 0.4449169150320813 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01520 - (Local CPU) 0.01520 - (Global CPU) 0.46011

 Solve status: Optimal Objective value: 94.52727272727272 nb_rows 78 nb_cols 81
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (78, 81) and density : 0.21035137701804368 and number of remaining ones : 1431
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.210 density  and density_threshold= 0.330


I am in the while loop with i= 3 density= 0.21035137701804368 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  92.15820895522387
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 92.15820895522387 KP time = 0.46011391503270715 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01510 - (Local CPU) 0.01510 - (Global CPU) 0.47521

 Solve status: Optimal Objective value: 92.15820895522387 nb_rows 70 nb_cols 81
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (70, 81) and density : 0.2164021164021164 and number of remaining ones : 1227
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 18), (1, 16), (2, 20), (3, 13), (4, 11), (6, 14), (7, 16), (8, 14), (9, 15), (10, 16), (11, 15), (12, 10), (14, 13), (15, 11), (16, 18), (17, 12), (18, 14), (19, 17), (20, 16), (21, 18), (22, 13), (23, 16), (24, 20), (25, 15), (26, 17), (27, 15), (28, 15), (31, 13), (32, 13), (33, 22), (34, 14), (35, 13), (36, 20), (37, 13), (38, 12), (39, 10), (42, 14), (43, 17), (44, 13), (45, 12), (47, 18), (48, 12), (49, 13), (50, 13), (51, 19), (52, 21), (53, 16), (54, 17), (55, 14), (57, 16), (58, 14), (59, 12), (60, 17), (62, 13), (63, 15), (64, 19), (65, 14), (66, 11), (68, 15), (69, 12), (70, 16), (71, 14), (73, 18), (74, 16), (75, 15), (78, 15), (79, 17), (81, 15), (82, 13), (83, 24), (84, 16), (85, 14), (87, 14), (88, 13), (90, 18), (91, 23), (92, 11), (94, 16), (95, 18), (96, 13), (99, 13)]
nb_edges_0 = 4443 rho= 0.1 # of rows = 70 # of columns= 81 total_degree_0= 4443 RHS= 444.3
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 92.15820895522387 KP time = 0.4752132069552317 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01735 - (Local CPU) 0.01736 - (Global CPU) 0.49257

 Solve status: Optimal Objective value: 82.26896551724138 nb_rows 70 nb_cols 73
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (70, 73) and density : 0.2228962818003914 and number of remaining ones : 1227
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.223 density  and density_threshold= 0.330


I am in the while loop with i= 4 density= 0.2228962818003914 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  81.17166666666667
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 81.17166666666667 KP time = 0.49256849894300103 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01575 - (Local CPU) 0.01576 - (Global CPU) 0.50832

 Solve status: Optimal Objective value: 81.17166666666667 nb_rows 63 nb_cols 73
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (63, 73) and density : 0.22874537943031092 and number of remaining ones : 1052
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 16), (1, 13), (2, 18), (3, 12), (6, 12), (7, 16), (8, 14), (9, 14), (10, 16), (11, 14), (14, 13), (16, 17), (18, 11), (19, 16), (20, 14), (21, 17), (22, 11), (23, 14), (24, 20), (25, 15), (26, 17), (27, 12), (28, 13), (31, 12), (32, 13), (33, 19), (34, 14), (35, 12), (36, 20), (37, 11), (42, 13), (43, 17), (44, 10), (45, 10), (47, 17), (48, 12), (49, 13), (50, 11), (51, 17), (52, 18), (53, 16), (54, 15), (55, 14), (57, 15), (58, 12), (59, 11), (60, 17), (62, 11), (63, 13), (64, 17), (65, 14), (68, 13), (69, 10), (70, 15), (71, 14), (73, 17), (74, 15), (75, 14), (78, 13), (79, 15), (81, 12), (82, 13), (83, 23), (84, 16), (85, 12), (87, 13), (88, 13), (90, 18), (91, 21), (94, 14), (95, 17), (96, 13), (99, 12)]
nb_edges_0 = 3547 rho= 0.1 # of rows = 63 # of columns= 73 total_degree_0= 3547 RHS= 354.70000000000005
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 81.17166666666667 KP time = 0.5083237908547744 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01514 - (Local CPU) 0.01514 - (Global CPU) 0.52346

 Solve status: Optimal Objective value: 71.39807692307693 nb_rows 63 nb_cols 66
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (63, 66) and density : 0.2352092352092352 and number of remaining ones : 1052
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.235 density  and density_threshold= 0.330


I am in the while loop with i= 5 density= 0.2352092352092352 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  69.28301886792453
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 69.28301886792453 KP time = 0.5234627908794209 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01475 - (Local CPU) 0.01475 - (Global CPU) 0.53821

 Solve status: Optimal Objective value: 69.28301886792453 nb_rows 57 nb_cols 66
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (57, 66) and density : 0.24109516214779372 and number of remaining ones : 907
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 15), (1, 13), (2, 14), (3, 12), (6, 10), (7, 16), (8, 14), (9, 12), (10, 16), (11, 13), (14, 11), (16, 16), (19, 15), (20, 14), (21, 14), (23, 13), (24, 19), (25, 12), (26, 15), (27, 11), (28, 13), (31, 11), (32, 12), (33, 17), (34, 12), (35, 12), (36, 19), (37, 9), (42, 12), (43, 14), (47, 16), (48, 11), (49, 12), (50, 9), (51, 17), (52, 18), (53, 15), (54, 15), (55, 14), (57, 14), (58, 11), (60, 16), (63, 12), (64, 15), (65, 13), (68, 11), (70, 15), (71, 12), (73, 17), (74, 14), (75, 12), (78, 13), (79, 14), (81, 12), (82, 12), (83, 21), (84, 15), (85, 12), (87, 12), (88, 12), (90, 16), (91, 20), (94, 14), (95, 15), (96, 12), (99, 12)]
nb_edges_0 = 2855 rho= 0.1 # of rows = 57 # of columns= 66 total_degree_0= 2855 RHS= 285.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 69.28301886792453 KP time = 0.5382131658261642 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01486 - (Local CPU) 0.01485 - (Global CPU) 0.55307

 Solve status: Optimal Objective value: 62.07608695652174 nb_rows 57 nb_cols 59
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (57, 59) and density : 0.24829021706809395 and number of remaining ones : 907
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.248 density  and density_threshold= 0.330


I am in the while loop with i= 6 density= 0.24829021706809395 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  59.52340425531915
I solved model name = row_knapsack_problem for iteration i =  6 with obj value: 59.52340425531915 KP time = 0.5530680408701301 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01431 - (Local CPU) 0.01431 - (Global CPU) 0.56738

 Solve status: Optimal Objective value: 59.52340425531915 nb_rows 51 nb_cols 59
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (51, 59) and density : 0.2549019607843137 and number of remaining ones : 767
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 15), (1, 13), (2, 12), (3, 10), (7, 16), (8, 13), (9, 10), (10, 13), (11, 11), (16, 14), (19, 14), (20, 13), (21, 13), (23, 13), (24, 17), (25, 11), (26, 14), (27, 10), (28, 13), (31, 11), (32, 12), (33, 16), (34, 12), (35, 10), (36, 18), (42, 11), (43, 14), (47, 16), (49, 12), (51, 16), (52, 16), (53, 12), (54, 14), (55, 13), (57, 13), (60, 14), (63, 9), (64, 14), (65, 11), (70, 13), (71, 12), (73, 17), (74, 12), (75, 10), (78, 13), (79, 14), (81, 10), (82, 12), (83, 18), (84, 13), (85, 11), (87, 10), (88, 12), (90, 16), (91, 19), (94, 11), (95, 14), (96, 11), (99, 10)]
nb_edges_0 = 2242 rho= 0.1 # of rows = 51 # of columns= 59 total_degree_0= 2242 RHS= 224.20000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  6 with obj value: 59.52340425531915 KP time = 0.5673759569181129 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01445 - (Local CPU) 0.01445 - (Global CPU) 0.58183

 Solve status: Optimal Objective value: 53.4390243902439 nb_rows 51 nb_cols 53
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (51, 53) and density : 0.2619311875693674 and number of remaining ones : 767
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.262 density  and density_threshold= 0.330


I am in the while loop with i= 7 density= 0.2619311875693674 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  52.25
I solved model name = row_knapsack_problem for iteration i =  7 with obj value: 52.25 KP time = 0.5818278738297522 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01485 - (Local CPU) 0.01485 - (Global CPU) 0.59668

 Solve status: Optimal Objective value: 52.25 nb_rows 46 nb_cols 53
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (46, 53) and density : 0.26784249384741593 and number of remaining ones : 653
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 13), (1, 12), (2, 11), (3, 9), (7, 15), (8, 12), (10, 12), (11, 11), (16, 13), (19, 13), (20, 11), (21, 13), (23, 13), (24, 16), (25, 9), (26, 11), (27, 10), (28, 11), (31, 11), (32, 10), (33, 12), (34, 11), (36, 16), (42, 11), (43, 12), (47, 14), (49, 11), (51, 16), (52, 15), (53, 12), (54, 13), (55, 13), (57, 12), (60, 13), (64, 14), (65, 11), (70, 11), (71, 11), (73, 16), (74, 11), (78, 13), (79, 12), (82, 11), (83, 18), (84, 12), (85, 8), (88, 11), (90, 15), (91, 18), (94, 11), (95, 14), (96, 9), (99, 10)]
nb_edges_0 = 1785 rho= 0.1 # of rows = 46 # of columns= 53 total_degree_0= 1785 RHS= 178.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  7 with obj value: 52.25 KP time = 0.5966778737492859 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01515 - (Local CPU) 0.01515 - (Global CPU) 0.61182

 Solve status: Optimal Objective value: 43.19444444444444 nb_rows 46 nb_cols 48
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (46, 48) and density : 0.2753623188405797 and number of remaining ones : 653
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.275 density  and density_threshold= 0.330


I am in the while loop with i= 8 density= 0.2753623188405797 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  47.567567567567565
I solved model name = row_knapsack_problem for iteration i =  8 with obj value: 47.567567567567565 KP time = 0.6118229987332597 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01422 - (Local CPU) 0.01422 - (Global CPU) 0.62605

 Solve status: Optimal Objective value: 47.567567567567565 nb_rows 41 nb_cols 48
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (41, 48) and density : 0.2809959349593496 and number of remaining ones : 553
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (1, 12), (2, 11), (7, 14), (8, 12), (10, 10), (11, 11), (16, 11), (19, 11), (20, 10), (21, 11), (23, 13), (24, 13), (26, 9), (27, 9), (28, 9), (31, 9), (32, 9), (33, 12), (34, 11), (36, 15), (42, 9), (43, 12), (47, 13), (49, 10), (51, 14), (52, 12), (53, 12), (54, 10), (55, 11), (57, 11), (60, 12), (64, 12), (65, 10), (70, 11), (71, 11), (73, 13), (74, 11), (78, 12), (79, 11), (82, 10), (83, 17), (84, 10), (88, 11), (90, 14), (91, 16), (94, 11), (95, 13)]
nb_edges_0 = 1415 rho= 0.1 # of rows = 41 # of columns= 48 total_degree_0= 1415 RHS= 141.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  8 with obj value: 47.567567567567565 KP time = 0.6260454986477271 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01407 - (Local CPU) 0.01407 - (Global CPU) 0.64011

 Solve status: Optimal Objective value: 39.796875 nb_rows 41 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (41, 43) and density : 0.2881452070334657 and number of remaining ones : 553
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.288 density  and density_threshold= 0.330


I am in the while loop with i= 9 density= 0.2881452070334657 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  38.03030303030303
I solved model name = row_knapsack_problem for iteration i =  9 with obj value: 38.03030303030303 KP time = 0.6401120406808332 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01425 - (Local CPU) 0.01425 - (Global CPU) 0.65436

 Solve status: Optimal Objective value: 38.03030303030303 nb_rows 37 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (37, 43) and density : 0.2941546197360151 and number of remaining ones : 468
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (1, 12), (2, 11), (7, 13), (8, 10), (10, 9), (11, 11), (16, 10), (19, 11), (20, 9), (21, 11), (23, 12), (24, 13), (28, 9), (33, 11), (34, 10), (36, 13), (43, 11), (47, 11), (49, 9), (51, 14), (52, 9), (53, 12), (54, 10), (55, 10), (57, 10), (60, 11), (64, 11), (65, 10), (70, 10), (71, 10), (73, 12), (74, 10), (78, 11), (79, 11), (82, 8), (83, 15), (84, 10), (88, 8), (90, 13), (91, 14), (94, 10), (95, 12)]
nb_edges_0 = 1123 rho= 0.1 # of rows = 37 # of columns= 43 total_degree_0= 1123 RHS= 112.30000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  9 with obj value: 38.03030303030303 KP time = 0.6543629156658426 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01464 - (Local CPU) 0.01464 - (Global CPU) 0.66901

 Solve status: Optimal Objective value: 33.45357142857143 nb_rows 37 nb_cols 39
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (37, 39) and density : 0.30076230076230076 and number of remaining ones : 468
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.301 density  and density_threshold= 0.330


I am in the while loop with i= 10 density= 0.30076230076230076 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  30.758620689655174
I solved model name = row_knapsack_problem for iteration i =  10 with obj value: 30.758620689655174 KP time = 0.669006415642798 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01433 - (Local CPU) 0.01434 - (Global CPU) 0.68334

 Solve status: Optimal Objective value: 30.758620689655174 nb_rows 33 nb_cols 39
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 39) and density : 0.3084693084693085 and number of remaining ones : 397
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (1, 11), (2, 9), (7, 13), (8, 9), (11, 11), (16, 9), (19, 8), (21, 10), (23, 11), (24, 12), (28, 9), (33, 10), (34, 9), (36, 12), (43, 10), (47, 9), (49, 8), (51, 13), (52, 8), (53, 9), (54, 9), (55, 10), (57, 10), (60, 10), (64, 11), (65, 9), (70, 9), (71, 8), (73, 11), (74, 9), (78, 10), (79, 10), (83, 15), (84, 9), (90, 12), (91, 12), (94, 10), (95, 12)]
nb_edges_0 = 890 rho= 0.1 # of rows = 33 # of columns= 39 total_degree_0= 890 RHS= 89.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  10 with obj value: 30.758620689655174 KP time = 0.6833424996584654 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01454 - (Local CPU) 0.01454 - (Global CPU) 0.69788

 Solve status: Optimal Objective value: 28.48 nb_rows 33 nb_cols 35
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 35) and density : 0.31601731601731603 and number of remaining ones : 397
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.316 density  and density_threshold= 0.330


I am in the while loop with i= 11 density= 0.31601731601731603 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  27.346153846153847
I solved model name = row_knapsack_problem for iteration i =  11 with obj value: 27.346153846153847 KP time = 0.6978815415641293 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01442 - (Local CPU) 0.01443 - (Global CPU) 0.71231

 Solve status: Optimal Objective value: 27.346153846153847 nb_rows 29 nb_cols 35
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 35) and density : 0.32413793103448274 and number of remaining ones : 329
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (1, 11), (2, 8), (7, 12), (8, 9), (11, 10), (16, 8), (21, 8), (23, 10), (24, 12), (28, 7), (33, 9), (34, 7), (36, 10), (43, 10), (47, 8), (51, 12), (53, 9), (54, 8), (55, 8), (57, 9), (60, 10), (64, 10), (65, 9), (70, 9), (73, 10), (74, 7), (78, 8), (79, 10), (83, 14), (84, 7), (90, 10), (91, 11), (94, 7), (95, 11)]
nb_edges_0 = 686 rho= 0.1 # of rows = 29 # of columns= 35 total_degree_0= 686 RHS= 68.60000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  11 with obj value: 27.346153846153847 KP time = 0.7123068745713681 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01436 - (Local CPU) 0.01436 - (Global CPU) 0.72666

 Solve status: Optimal Objective value: 21.827272727272724 nb_rows 29 nb_cols 31
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 31) and density : 0.3348164627363737 and number of remaining ones : 329
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 11 iterations
            Density : 0.335 > 0.33
            It took me : 0.727 time
            Found matrix of size : (29, 31) and density : 0.335
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 125.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_2_M_2.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.11298 - (Local CPU) 0.11298 - (Global CPU) 0.11298

 Solve status: Optimal Objective value: 125.0 nb_rows 2 nb_cols 10
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 2
Number of Remaining number Columns : 10
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 20 Density : 1.0 current obj value 125.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 2  and cols_res of lenght = 10
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 2
        with delta =  0.0
        Found matrix of size : (2, 10)
        and density : 1.0
        and # of ones : 20
        and Heuristic QBC time   : 0.11298
        and Global QBC  time  : 0.11298
        
 Remaining Rows  : [4, 60]
 Remaining  Cols  : [2, 23, 34, 36, 51, 53, 54, 7, 79, 83]

----------------------------------------------------------------------
 
    End of computations for matrix 2 in  data/random_bench/random_very_long.txt at level 2 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (2,10), with  density : 1.0 and number of ones: 20
    Global Time (in sec): 0.840
    Total Time in QBC approaches: 0.113
    Time in greedy approach: 0.727,  size of matrix found by greedy : (29,31) 
    With density : 0.335 and # ones : 301 
    Time in heuristic only : 0.113 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 11
    Percentage of greedy approach run time in global run time : 86.54% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

dec_conq= 2

 Level 1, Matrix 4:
Size Rows: 88
Size Cols: 100

 Level 1 Matrix  5:
Size Rows: 90
Size Cols: 90

----------------------------------------------------------------------
***Stats Current Input for matrix 4 in  data/random_bench/random_very_long.txt at level 1 and with model:  max_e_c***
Size of current matrix :  88 * 100 = 8800 ; dec_conq: 1
Prev_lower_bound :  None number input zeros :  7156 ; number input ones :  1644
rho =  0.1 ; delta :  0.0
Input density : 0.187 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.187 density  and density_threshold= 0.330


I am in the while loop with i= 1 density= 0.18681818181818183 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  23.745454545454546
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 23.745454545454546 KP time = 0.7266649164957926 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01700 - (Local CPU) 0.01700 - (Global CPU) 0.74367

 Solve status: Optimal Objective value: 23.745454545454546 nb_rows 85 nb_cols 100
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (85, 100) and density : 0.18941176470588236 and number of remaining ones : 1610
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 17), (2, 20), (3, 15), (4, 14), (5, 10), (6, 15), (7, 18), (8, 16), (9, 18), (10, 16), (11, 19), (12, 14), (13, 15), (14, 15), (15, 13), (16, 20), (17, 15), (18, 15), (19, 19), (20, 18), (21, 20), (22, 18), (23, 15), (24, 20), (25, 18), (26, 20), (27, 18), (28, 16), (29, 11), (30, 11), (31, 16), (32, 15), (33, 25), (34, 14), (35, 17), (36, 24), (37, 14), (38, 16), (39, 14), (40, 14), (41, 11), (42, 16), (43, 16), (44, 13), (45, 13), (46, 13), (47, 25), (48, 13), (49, 13), (50, 14), (51, 22), (52, 22), (53, 17), (54, 18), (55, 16), (56, 10), (57, 19), (58, 16), (59, 17), (60, 19), (61, 11), (62, 14), (63, 16), (64, 21), (65, 16), (66, 13), (67, 10), (68, 16), (69, 15), (70, 19), (71, 13), (72, 12), (73, 19), (74, 21), (75, 17), (76, 13), (77, 10), (78, 18), (79, 20), (80, 11), (81, 18), (82, 16), (83, 24), (84, 17), (85, 17), (86, 13), (87, 17), (88, 15), (89, 11), (90, 18), (91, 25), (92, 13), (93, 15), (94, 19), (95, 17), (96, 15), (97, 10), (98, 12), (99, 13)]
nb_edges_0 = 6890 rho= 0.1 # of rows = 85 # of columns= 100 total_degree_0= 6890 RHS= 689.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 23.745454545454546 KP time = 0.7436676665674895 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01545 - (Local CPU) 0.01545 - (Global CPU) 0.75912

 Solve status: Optimal Objective value: 96.67567567567568 nb_rows 85 nb_cols 90
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (85, 90) and density : 0.19673202614379084 and number of remaining ones : 1610
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.197 density  and density_threshold= 0.330


I am in the while loop with i= 2 density= 0.19673202614379084 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  95.56493506493507
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 95.56493506493507 KP time = 0.7591178325237706 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01529 - (Local CPU) 0.01529 - (Global CPU) 0.77441

 Solve status: Optimal Objective value: 95.56493506493507 nb_rows 77 nb_cols 90
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (77, 90) and density : 0.20317460317460317 and number of remaining ones : 1408
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 18), (1, 17), (2, 19), (3, 14), (4, 13), (6, 15), (7, 15), (8, 16), (9, 17), (10, 16), (11, 17), (12, 13), (13, 12), (14, 14), (15, 13), (16, 19), (17, 14), (18, 14), (19, 19), (20, 16), (21, 18), (22, 14), (23, 15), (24, 20), (25, 16), (26, 18), (27, 17), (28, 16), (30, 11), (31, 16), (32, 14), (33, 24), (34, 13), (35, 15), (36, 21), (37, 13), (38, 13), (39, 12), (40, 12), (42, 14), (43, 16), (44, 13), (45, 13), (46, 11), (47, 24), (48, 13), (49, 13), (50, 13), (51, 20), (52, 21), (53, 16), (54, 17), (55, 15), (57, 17), (58, 16), (59, 13), (60, 18), (62, 13), (63, 16), (64, 20), (65, 16), (66, 12), (68, 16), (69, 13), (70, 16), (71, 13), (72, 12), (73, 18), (74, 19), (75, 16), (76, 11), (78, 17), (79, 18), (81, 15), (82, 15), (83, 24), (84, 16), (85, 16), (86, 11), (87, 17), (88, 13), (90, 18), (91, 25), (92, 13), (93, 13), (94, 17), (95, 17), (96, 15), (98, 12), (99, 13)]
nb_edges_0 = 5522 rho= 0.1 # of rows = 77 # of columns= 90 total_degree_0= 5522 RHS= 552.2
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 95.56493506493507 KP time = 0.774405290489085 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01524 - (Local CPU) 0.01524 - (Global CPU) 0.78965

 Solve status: Optimal Objective value: 97.20615384615385 nb_rows 77 nb_cols 81
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (77, 81) and density : 0.2090748757415424 and number of remaining ones : 1408
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.209 density  and density_threshold= 0.330


I am in the while loop with i= 3 density= 0.2090748757415424 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  90.98805970149255
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 90.98805970149255 KP time = 0.7896460815099999 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01534 - (Local CPU) 0.01534 - (Global CPU) 0.80499

 Solve status: Optimal Objective value: 90.98805970149255 nb_rows 69 nb_cols 81
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (69, 81) and density : 0.21506530685274647 and number of remaining ones : 1202
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 17), (1, 16), (2, 17), (3, 13), (4, 11), (6, 15), (7, 14), (8, 16), (9, 14), (10, 16), (11, 15), (12, 10), (14, 14), (15, 10), (16, 19), (17, 12), (18, 14), (19, 17), (20, 16), (21, 18), (22, 12), (23, 14), (24, 19), (25, 15), (26, 17), (27, 15), (28, 16), (31, 12), (32, 12), (33, 22), (34, 13), (35, 14), (36, 19), (37, 13), (38, 12), (39, 11), (42, 13), (43, 16), (44, 13), (45, 12), (47, 20), (48, 12), (49, 13), (50, 12), (51, 18), (52, 21), (53, 14), (54, 15), (55, 13), (57, 14), (58, 15), (59, 11), (60, 17), (62, 13), (63, 14), (64, 18), (65, 16), (68, 15), (69, 11), (70, 16), (71, 12), (73, 17), (74, 18), (75, 14), (78, 15), (79, 17), (81, 14), (82, 12), (83, 22), (84, 16), (85, 16), (87, 14), (88, 13), (90, 18), (91, 24), (92, 11), (93, 9), (94, 16), (95, 16), (96, 13), (99, 13)]
nb_edges_0 = 4387 rho= 0.1 # of rows = 69 # of columns= 81 total_degree_0= 4387 RHS= 438.70000000000005
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 90.98805970149255 KP time = 0.8049859565217048 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01523 - (Local CPU) 0.01523 - (Global CPU) 0.82022

 Solve status: Optimal Objective value: 78.44310344827586 nb_rows 69 nb_cols 73
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (69, 73) and density : 0.22195751439348818 and number of remaining ones : 1202
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.222 density  and density_threshold= 0.330


I am in the while loop with i= 4 density= 0.22195751439348818 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  81.26166666666666
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 81.26166666666666 KP time = 0.8202202905667946 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01542 - (Local CPU) 0.01542 - (Global CPU) 0.83565

 Solve status: Optimal Objective value: 81.26166666666666 nb_rows 62 nb_cols 73
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (62, 73) and density : 0.2275740167918692 and number of remaining ones : 1030
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 16), (1, 14), (2, 16), (3, 11), (6, 14), (7, 13), (8, 16), (9, 14), (10, 16), (11, 13), (14, 14), (16, 15), (17, 11), (18, 13), (19, 16), (20, 16), (21, 18), (22, 12), (23, 11), (24, 17), (25, 14), (26, 16), (27, 14), (28, 13), (31, 10), (32, 11), (33, 19), (34, 13), (35, 12), (36, 17), (37, 12), (38, 11), (42, 12), (43, 16), (44, 10), (45, 12), (47, 19), (48, 12), (49, 13), (50, 11), (51, 15), (52, 19), (53, 13), (54, 15), (55, 12), (57, 12), (58, 12), (60, 17), (62, 12), (63, 13), (64, 16), (65, 13), (68, 14), (70, 15), (71, 12), (73, 16), (74, 16), (75, 13), (78, 14), (79, 15), (81, 12), (82, 12), (83, 20), (84, 16), (85, 13), (87, 13), (88, 13), (90, 17), (91, 22), (94, 14), (95, 15), (96, 13), (99, 13)]
nb_edges_0 = 3496 rho= 0.1 # of rows = 62 # of columns= 73 total_degree_0= 3496 RHS= 349.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 81.26166666666666 KP time = 0.8356450814753771 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01548 - (Local CPU) 0.01548 - (Global CPU) 0.85113

 Solve status: Optimal Objective value: 72.97254901960784 nb_rows 62 nb_cols 66
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (62, 66) and density : 0.2333822091886608 and number of remaining ones : 1030
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.233 density  and density_threshold= 0.330


I am in the while loop with i= 5 density= 0.2333822091886608 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  69.47358490566037
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 69.47358490566037 KP time = 0.8511272064642981 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01499 - (Local CPU) 0.01499 - (Global CPU) 0.86612

 Solve status: Optimal Objective value: 69.47358490566037 nb_rows 56 nb_cols 66
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (56, 66) and density : 0.2389069264069264 and number of remaining ones : 883
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 14), (1, 12), (2, 14), (6, 11), (7, 12), (8, 15), (9, 10), (10, 15), (11, 12), (14, 13), (16, 14), (18, 12), (19, 14), (20, 15), (21, 16), (22, 11), (24, 15), (25, 14), (26, 15), (27, 13), (28, 13), (33, 17), (34, 12), (35, 10), (36, 17), (37, 10), (42, 11), (43, 14), (45, 10), (47, 18), (48, 12), (49, 13), (50, 11), (51, 15), (52, 18), (53, 12), (54, 13), (55, 12), (57, 11), (58, 12), (60, 16), (62, 11), (63, 12), (64, 15), (65, 13), (68, 12), (70, 15), (71, 11), (73, 13), (74, 15), (75, 13), (78, 12), (79, 15), (81, 12), (82, 10), (83, 19), (84, 16), (85, 12), (87, 12), (88, 12), (90, 16), (91, 21), (94, 13), (95, 13), (96, 13), (99, 13)]
nb_edges_0 = 2813 rho= 0.1 # of rows = 56 # of columns= 66 total_degree_0= 2813 RHS= 281.3
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 69.47358490566037 KP time = 0.8661166644887999 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01487 - (Local CPU) 0.01488 - (Global CPU) 0.88099

 Solve status: Optimal Objective value: 62.540000000000006 nb_rows 56 nb_cols 59
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (56, 59) and density : 0.24546004842615013 and number of remaining ones : 883
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.245 density  and density_threshold= 0.330


I am in the while loop with i= 6 density= 0.24546004842615013 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  57.374468085106386
I solved model name = row_knapsack_problem for iteration i =  6 with obj value: 57.374468085106386 KP time = 0.8809922895161435 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01447 - (Local CPU) 0.01447 - (Global CPU) 0.89547

 Solve status: Optimal Objective value: 57.374468085106386 nb_rows 50 nb_cols 59
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (50, 59) and density : 0.2522033898305085 and number of remaining ones : 744
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 14), (1, 11), (2, 13), (6, 10), (7, 12), (8, 15), (10, 14), (11, 12), (14, 12), (16, 13), (18, 11), (19, 12), (20, 13), (21, 15), (24, 14), (25, 12), (26, 15), (27, 10), (28, 12), (33, 16), (34, 12), (36, 13), (43, 12), (47, 15), (48, 12), (49, 12), (50, 10), (51, 13), (52, 15), (53, 12), (54, 12), (55, 12), (57, 11), (58, 10), (60, 16), (62, 9), (63, 11), (64, 15), (65, 12), (68, 11), (70, 15), (71, 10), (73, 12), (74, 15), (75, 13), (78, 12), (79, 14), (81, 9), (83, 18), (84, 14), (85, 10), (87, 9), (88, 10), (90, 14), (91, 18), (94, 13), (95, 13), (96, 12), (99, 12)]
nb_edges_0 = 2206 rho= 0.1 # of rows = 50 # of columns= 59 total_degree_0= 2206 RHS= 220.60000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  6 with obj value: 57.374468085106386 KP time = 0.895466789486818 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01464 - (Local CPU) 0.01464 - (Global CPU) 0.91011

 Solve status: Optimal Objective value: 51.4 nb_rows 50 nb_cols 53
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (50, 53) and density : 0.2592452830188679 and number of remaining ones : 744
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.259 density  and density_threshold= 0.330


I am in the while loop with i= 7 density= 0.2592452830188679 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  51.411904761904765
I solved model name = row_knapsack_problem for iteration i =  7 with obj value: 51.411904761904765 KP time = 0.9101076645310968 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01488 - (Local CPU) 0.01488 - (Global CPU) 0.92499

 Solve status: Optimal Objective value: 51.411904761904765 nb_rows 45 nb_cols 53
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (45, 53) and density : 0.2649895178197065 and number of remaining ones : 632
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (1, 11), (2, 11), (6, 8), (7, 11), (8, 12), (10, 14), (11, 11), (14, 10), (16, 13), (18, 11), (19, 12), (20, 12), (21, 13), (24, 14), (25, 11), (26, 14), (28, 12), (33, 14), (34, 11), (36, 12), (43, 11), (47, 14), (48, 11), (49, 12), (50, 10), (51, 13), (52, 15), (53, 10), (54, 12), (55, 12), (57, 10), (60, 13), (63, 11), (64, 13), (65, 11), (68, 11), (70, 14), (71, 9), (73, 11), (74, 13), (75, 11), (78, 11), (79, 13), (83, 16), (84, 12), (85, 10), (90, 13), (91, 15), (94, 12), (95, 13), (96, 10), (99, 11)]
nb_edges_0 = 1753 rho= 0.1 # of rows = 45 # of columns= 53 total_degree_0= 1753 RHS= 175.3
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  7 with obj value: 51.411904761904765 KP time = 0.9249874145025387 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01507 - (Local CPU) 0.01507 - (Global CPU) 0.94006

 Solve status: Optimal Objective value: 46.22857142857143 nb_rows 45 nb_cols 48
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (45, 48) and density : 0.2708333333333333 and number of remaining ones : 632
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.271 density  and density_threshold= 0.330


I am in the while loop with i= 8 density= 0.2708333333333333 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  44.229729729729726
I solved model name = row_knapsack_problem for iteration i =  8 with obj value: 44.229729729729726 KP time = 0.9400564974639565 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01435 - (Local CPU) 0.01435 - (Global CPU) 0.95441

 Solve status: Optimal Objective value: 44.229729729729726 nb_rows 40 nb_cols 48
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (40, 48) and density : 0.27708333333333335 and number of remaining ones : 532
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (1, 11), (2, 10), (7, 9), (8, 10), (10, 14), (11, 10), (14, 8), (16, 11), (18, 10), (19, 11), (20, 11), (21, 12), (24, 14), (25, 10), (26, 12), (28, 11), (33, 12), (34, 9), (36, 12), (43, 10), (47, 12), (48, 11), (49, 11), (51, 12), (52, 14), (53, 10), (54, 11), (55, 12), (57, 9), (60, 12), (63, 9), (64, 12), (65, 10), (68, 8), (70, 12), (73, 10), (74, 11), (75, 10), (78, 10), (79, 10), (83, 15), (84, 12), (90, 12), (91, 14), (94, 12), (95, 13), (99, 10)]
nb_edges_0 = 1388 rho= 0.1 # of rows = 40 # of columns= 48 total_degree_0= 1388 RHS= 138.8
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  8 with obj value: 44.229729729729726 KP time = 0.9544094144366682 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01437 - (Local CPU) 0.01437 - (Global CPU) 0.96878

 Solve status: Optimal Objective value: 37.71612903225807 nb_rows 40 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (40, 43) and density : 0.28430232558139534 and number of remaining ones : 532
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.284 density  and density_threshold= 0.330


I am in the while loop with i= 9 density= 0.28430232558139534 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  33.39393939393939
I solved model name = row_knapsack_problem for iteration i =  9 with obj value: 33.39393939393939 KP time = 0.9687831223709509 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01418 - (Local CPU) 0.01418 - (Global CPU) 0.98296

 Solve status: Optimal Objective value: 33.39393939393939 nb_rows 36 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (36, 43) and density : 0.29198966408268734 and number of remaining ones : 452
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (1, 11), (2, 9), (8, 10), (10, 12), (11, 9), (16, 9), (18, 10), (19, 9), (20, 11), (21, 12), (24, 12), (25, 10), (26, 10), (28, 10), (33, 12), (36, 12), (43, 10), (47, 12), (48, 9), (49, 10), (51, 12), (52, 13), (53, 8), (54, 10), (55, 11), (57, 8), (60, 11), (64, 11), (65, 9), (70, 10), (73, 10), (74, 9), (75, 10), (78, 9), (79, 10), (83, 13), (84, 12), (90, 12), (91, 14), (94, 11), (95, 11), (99, 8)]
nb_edges_0 = 1096 rho= 0.1 # of rows = 36 # of columns= 43 total_degree_0= 1096 RHS= 109.60000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  9 with obj value: 33.39393939393939 KP time = 0.9829642883269116 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01429 - (Local CPU) 0.01429 - (Global CPU) 0.99725

 Solve status: Optimal Objective value: 32.53333333333333 nb_rows 36 nb_cols 39
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (36, 39) and density : 0.2984330484330484 and number of remaining ones : 452
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.298 density  and density_threshold= 0.330


I am in the while loop with i= 10 density= 0.2984330484330484 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  29.55
I solved model name = row_knapsack_problem for iteration i =  10 with obj value: 29.55 KP time = 0.9972510793013498 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01436 - (Local CPU) 0.01437 - (Global CPU) 1.01162

 Solve status: Optimal Objective value: 29.55 nb_rows 32 nb_cols 39
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (32, 39) and density : 0.30689102564102566 and number of remaining ones : 383
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 10), (1, 11), (2, 7), (8, 9), (10, 9), (16, 9), (18, 8), (19, 7), (20, 10), (21, 11), (24, 12), (25, 9), (26, 10), (28, 10), (33, 12), (36, 11), (43, 10), (47, 11), (48, 9), (49, 8), (51, 12), (52, 10), (54, 9), (55, 10), (60, 10), (64, 10), (65, 8), (70, 9), (73, 9), (74, 9), (75, 10), (78, 9), (79, 9), (83, 12), (84, 11), (90, 11), (91, 12), (94, 10), (95, 10)]
nb_edges_0 = 865 rho= 0.1 # of rows = 32 # of columns= 39 total_degree_0= 865 RHS= 86.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  10 with obj value: 29.55 KP time = 1.011616371339187 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01418 - (Local CPU) 0.01418 - (Global CPU) 1.02580

 Solve status: Optimal Objective value: 26.166666666666668 nb_rows 32 nb_cols 35
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (32, 35) and density : 0.3151785714285714 and number of remaining ones : 383
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.315 density  and density_threshold= 0.330


I am in the while loop with i= 11 density= 0.3151785714285714 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  23.85769230769231
I solved model name = row_knapsack_problem for iteration i =  11 with obj value: 23.85769230769231 KP time = 1.0257950383238494 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01419 - (Local CPU) 0.01419 - (Global CPU) 1.03998

 Solve status: Optimal Objective value: 23.85769230769231 nb_rows 29 nb_cols 35
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 35) and density : 0.32315270935960594 and number of remaining ones : 328
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 10), (1, 11), (8, 8), (10, 8), (16, 9), (20, 10), (21, 11), (24, 11), (25, 9), (26, 10), (28, 10), (33, 11), (36, 10), (43, 8), (47, 9), (48, 9), (49, 7), (51, 12), (52, 10), (54, 8), (55, 9), (60, 9), (64, 9), (70, 8), (73, 8), (74, 8), (75, 9), (78, 8), (79, 9), (83, 11), (84, 9), (90, 11), (91, 11), (94, 9), (95, 9)]
nb_edges_0 = 687 rho= 0.1 # of rows = 29 # of columns= 35 total_degree_0= 687 RHS= 68.7
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  11 with obj value: 23.85769230769231 KP time = 1.03998466336634 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01409 - (Local CPU) 0.01409 - (Global CPU) 1.05407

 Solve status: Optimal Objective value: 24.79047619047619 nb_rows 29 nb_cols 31
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 31) and density : 0.3303670745272525 and number of remaining ones : 328
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 11 iterations
            Density : 0.330 > 0.33
            It took me : 1.054 time
            Found matrix of size : (29, 31) and density : 0.330
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 98.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_1_M_4.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.15046 - (Local CPU) 0.15046 - (Global CPU) 0.15046

 Solve status: Optimal Objective value: 98.0 nb_rows 7 nb_cols 2
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 7
Number of Remaining number Columns : 2
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 14 Density : 1.0 current obj value 98.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 7  and cols_res of lenght = 2
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 4
        with delta =  0.0
        Found matrix of size : (7, 2)
        and density : 1.0
        and # of ones : 14
        and Heuristic QBC time   : 0.15046
        and Global QBC  time  : 0.15046
        
 Remaining Rows  : [2, 22, 29, 58, 75, 96, 99]
 Remaining  Cols  : [24, 83]

----------------------------------------------------------------------
 
    End of computations for matrix 4 in  data/random_bench/random_very_long.txt at level 1 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (7,2), with  density : 1.0 and number of ones: 14
    Global Time (in sec): 1.205
    Total Time in QBC approaches: 0.150
    Time in greedy approach: 1.054,  size of matrix found by greedy : (29,31) 
    With density : 0.330 and # ones : 297 
    Time in heuristic only : 0.150 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 11
    Percentage of greedy approach run time in global run time : 87.51% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

dec_conq= 1

 Level 0, Matrix 8:
Size Rows: 81
Size Cols: 100

 Level 0 Matrix  9:
Size Rows: 88
Size Cols: 98

Task with matrix 8 with size (81,100) and density 0.8155555555555556 and number of ones 6606  and number of zeros 1494 has been added to the queue.

 Return from 8 with winning node = 8

calling decrease_and_conquer for node 9

Task with matrix 9 with size (88,98) and density 0.81458719851577 and number of ones 7025  and number of zeros 1599 has been added to the queue.

return in decrease_and_conquer from 9 with winning node = 9

return in decrease_and_conquer from 4 with winning node = 9

 Return from 4 with winning node = 9

calling decrease_and_conquer for node 5

----------------------------------------------------------------------
***Stats Current Input for matrix 5 in  data/random_bench/random_very_long.txt at level 1 and with model:  max_e_c***
Size of current matrix :  90 * 90 = 8100 ; dec_conq: 1
Prev_lower_bound :  None number input zeros :  6635 ; number input ones :  1465
rho =  0.1 ; delta :  0.0
Input density : 0.181 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.181 density  and density_threshold= 0.330


I am in the while loop with i= 1 density= 0.1808641975308642 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  18.977777777777778
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 18.977777777777778 KP time = 0.7266649164957926 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01798 - (Local CPU) 0.01799 - (Global CPU) 0.74465

 Solve status: Optimal Objective value: 18.977777777777778 nb_rows 87 nb_cols 90
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (87, 90) and density : 0.1839080459770115 and number of remaining ones : 1440
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 17), (3, 16), (4, 14), (5, 11), (6, 16), (8, 16), (9, 18), (10, 16), (11, 19), (12, 14), (13, 15), (14, 15), (15, 15), (16, 20), (17, 15), (18, 15), (19, 19), (20, 19), (21, 20), (22, 18), (24, 20), (25, 19), (26, 20), (27, 18), (28, 16), (29, 11), (30, 11), (31, 17), (32, 17), (33, 25), (35, 17), (37, 14), (38, 16), (39, 14), (40, 14), (41, 11), (42, 16), (43, 17), (44, 15), (45, 13), (46, 13), (47, 25), (48, 13), (49, 13), (50, 14), (52, 22), (55, 16), (56, 10), (57, 19), (58, 17), (59, 16), (60, 19), (61, 11), (62, 15), (63, 16), (64, 21), (65, 16), (66, 13), (67, 10), (68, 16), (69, 14), (70, 18), (71, 14), (72, 12), (73, 19), (74, 22), (75, 17), (76, 13), (77, 10), (78, 18), (80, 11), (81, 19), (82, 16), (84, 18), (85, 17), (86, 13), (87, 17), (88, 16), (89, 11), (90, 19), (91, 26), (92, 13), (93, 14), (94, 20), (95, 19), (96, 15), (97, 10), (98, 13), (99, 13)]
nb_edges_0 = 6390 rho= 0.1 # of rows = 87 # of columns= 90 total_degree_0= 6390 RHS= 639.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 18.977777777777778 KP time = 0.744650375447236 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01528 - (Local CPU) 0.01528 - (Global CPU) 0.75993

 Solve status: Optimal Objective value: 87.90789473684211 nb_rows 87 nb_cols 81
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (87, 81) and density : 0.19086135944373492 and number of remaining ones : 1440
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.191 density  and density_threshold= 0.330


I am in the while loop with i= 2 density= 0.19086135944373492 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  78.02816901408451
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 78.02816901408451 KP time = 0.7599348754156381 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01521 - (Local CPU) 0.01521 - (Global CPU) 0.77515

 Solve status: Optimal Objective value: 78.02816901408451 nb_rows 78 nb_cols 81
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (78, 81) and density : 0.19895536562203228 and number of remaining ones : 1257
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 15), (3, 14), (4, 14), (6, 15), (8, 16), (9, 18), (10, 16), (11, 17), (12, 13), (13, 13), (14, 14), (15, 13), (16, 20), (17, 14), (18, 14), (19, 19), (20, 17), (21, 19), (22, 16), (24, 20), (25, 17), (26, 19), (27, 17), (28, 16), (31, 14), (32, 14), (33, 24), (35, 17), (37, 13), (38, 15), (39, 14), (40, 12), (42, 13), (43, 16), (44, 13), (45, 13), (46, 13), (47, 24), (48, 13), (49, 13), (50, 14), (52, 22), (55, 15), (57, 15), (58, 16), (59, 14), (60, 19), (61, 11), (62, 14), (63, 16), (64, 21), (65, 16), (66, 12), (68, 16), (69, 14), (70, 18), (71, 13), (72, 11), (73, 18), (74, 20), (75, 16), (76, 10), (78, 16), (80, 11), (81, 16), (82, 14), (84, 17), (85, 16), (86, 12), (87, 16), (88, 15), (90, 18), (91, 23), (92, 12), (93, 13), (94, 16), (95, 16), (96, 15), (98, 11), (99, 13)]
nb_edges_0 = 5061 rho= 0.1 # of rows = 78 # of columns= 81 total_degree_0= 5061 RHS= 506.1
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 78.02816901408451 KP time = 0.775147958425805 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01517 - (Local CPU) 0.01517 - (Global CPU) 0.79032

 Solve status: Optimal Objective value: 84.92727272727274 nb_rows 78 nb_cols 73
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (78, 73) and density : 0.20495258166491043 and number of remaining ones : 1257
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.205 density  and density_threshold= 0.330


I am in the while loop with i= 3 density= 0.20495258166491043 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  79.14032258064516
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 79.14032258064516 KP time = 0.7903183334274217 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01467 - (Local CPU) 0.01467 - (Global CPU) 0.80499

 Solve status: Optimal Objective value: 79.14032258064516 nb_rows 70 nb_cols 73
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (70, 73) and density : 0.21135029354207435 and number of remaining ones : 1080
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 16), (1, 15), (3, 12), (4, 14), (6, 15), (8, 15), (9, 16), (10, 15), (11, 15), (12, 12), (13, 12), (14, 14), (15, 12), (16, 17), (17, 13), (18, 14), (19, 18), (20, 17), (21, 18), (22, 12), (24, 19), (25, 15), (26, 17), (27, 17), (28, 16), (31, 13), (32, 13), (33, 22), (35, 15), (37, 13), (38, 12), (39, 10), (42, 13), (43, 16), (44, 11), (45, 13), (46, 11), (47, 23), (48, 11), (49, 13), (50, 13), (52, 21), (55, 15), (57, 14), (58, 14), (59, 12), (60, 18), (62, 14), (63, 15), (64, 19), (65, 13), (68, 16), (69, 12), (70, 16), (71, 12), (73, 17), (74, 17), (75, 15), (78, 16), (81, 15), (82, 14), (84, 16), (85, 14), (86, 10), (87, 16), (88, 12), (90, 17), (91, 23), (93, 13), (94, 14), (95, 16), (96, 13), (99, 13)]
nb_edges_0 = 4030 rho= 0.1 # of rows = 70 # of columns= 73 total_degree_0= 4030 RHS= 403.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 79.14032258064516 KP time = 0.8049897914752364 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01508 - (Local CPU) 0.01508 - (Global CPU) 0.82007

 Solve status: Optimal Objective value: 74.93103448275862 nb_rows 70 nb_cols 66
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (70, 66) and density : 0.2170995670995671 and number of remaining ones : 1080
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.217 density  and density_threshold= 0.330


I am in the while loop with i= 4 density= 0.2170995670995671 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  68.74
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 68.74 KP time = 0.820073833456263 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01529 - (Local CPU) 0.01529 - (Global CPU) 0.83537

 Solve status: Optimal Objective value: 68.74 nb_rows 63 nb_cols 66
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (63, 66) and density : 0.22342472342472341 and number of remaining ones : 929
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 16), (1, 14), (3, 11), (4, 13), (6, 14), (8, 14), (9, 16), (10, 14), (11, 14), (12, 10), (14, 13), (15, 11), (16, 15), (17, 11), (18, 13), (19, 17), (20, 16), (21, 17), (22, 12), (24, 19), (25, 13), (26, 15), (27, 17), (28, 15), (31, 12), (32, 13), (33, 21), (35, 11), (37, 12), (42, 13), (43, 15), (45, 12), (47, 20), (49, 12), (50, 10), (52, 18), (55, 15), (57, 12), (58, 14), (59, 12), (60, 18), (62, 11), (63, 11), (64, 18), (65, 12), (68, 13), (69, 10), (70, 14), (71, 11), (73, 17), (74, 15), (75, 14), (78, 15), (81, 14), (82, 13), (84, 16), (85, 12), (87, 16), (88, 12), (90, 17), (91, 22), (93, 12), (94, 13), (95, 16), (96, 13), (99, 12)]
nb_edges_0 = 3229 rho= 0.1 # of rows = 63 # of columns= 66 total_degree_0= 3229 RHS= 322.90000000000003
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 68.74 KP time = 0.8353663753950968 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01542 - (Local CPU) 0.01542 - (Global CPU) 0.85079

 Solve status: Optimal Objective value: 64.67115384615384 nb_rows 63 nb_cols 59
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (63, 59) and density : 0.23002421307506055 and number of remaining ones : 929
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.230 density  and density_threshold= 0.330


I am in the while loop with i= 5 density= 0.23002421307506055 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  54.795918367346935
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 54.795918367346935 KP time = 0.8507858753437176 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01570 - (Local CPU) 0.01570 - (Global CPU) 0.86649

 Solve status: Optimal Objective value: 54.795918367346935 nb_rows 57 nb_cols 59
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (57, 59) and density : 0.23728813559322035 and number of remaining ones : 798
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 16), (1, 14), (4, 12), (6, 13), (8, 13), (9, 15), (10, 12), (11, 13), (14, 12), (15, 11), (16, 14), (17, 10), (18, 11), (19, 14), (20, 16), (21, 15), (22, 11), (24, 18), (25, 11), (26, 14), (27, 17), (28, 15), (31, 10), (32, 12), (33, 19), (37, 11), (42, 12), (43, 12), (45, 12), (47, 18), (49, 11), (52, 17), (55, 13), (57, 11), (58, 13), (59, 12), (60, 17), (62, 10), (64, 17), (65, 11), (68, 13), (70, 14), (73, 16), (74, 13), (75, 11), (78, 15), (81, 14), (82, 11), (84, 16), (85, 12), (87, 15), (88, 12), (90, 16), (91, 22), (93, 11), (94, 12), (95, 16), (96, 13), (99, 11)]
nb_edges_0 = 2565 rho= 0.1 # of rows = 57 # of columns= 59 total_degree_0= 2565 RHS= 256.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 54.795918367346935 KP time = 0.8664868334308267 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01505 - (Local CPU) 0.01505 - (Global CPU) 0.88154

 Solve status: Optimal Objective value: 57.619565217391305 nb_rows 57 nb_cols 53
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (57, 53) and density : 0.24329692154915591 and number of remaining ones : 798
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.243 density  and density_threshold= 0.330


I am in the while loop with i= 6 density= 0.24329692154915591 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  50.69767441860465
I solved model name = row_knapsack_problem for iteration i =  6 with obj value: 50.69767441860465 KP time = 0.8815417914884165 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01513 - (Local CPU) 0.01513 - (Global CPU) 0.89668

 Solve status: Optimal Objective value: 50.69767441860465 nb_rows 51 nb_cols 53
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (51, 53) and density : 0.2504624491305956 and number of remaining ones : 677
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 16), (1, 13), (4, 12), (6, 11), (8, 13), (9, 14), (10, 12), (11, 12), (14, 12), (16, 13), (19, 14), (20, 14), (21, 14), (24, 14), (25, 9), (26, 14), (27, 16), (28, 12), (32, 11), (33, 18), (37, 10), (42, 12), (43, 11), (45, 10), (47, 18), (49, 11), (52, 15), (55, 12), (57, 9), (58, 11), (59, 10), (60, 16), (64, 15), (65, 10), (68, 12), (70, 14), (73, 14), (74, 13), (75, 9), (78, 13), (81, 12), (82, 10), (84, 16), (85, 12), (87, 15), (88, 11), (90, 16), (91, 19), (93, 11), (94, 11), (95, 13), (96, 12), (99, 10)]
nb_edges_0 = 2026 rho= 0.1 # of rows = 51 # of columns= 53 total_degree_0= 2026 RHS= 202.60000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  6 with obj value: 50.69767441860465 KP time = 0.8966752914711833 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01525 - (Local CPU) 0.01525 - (Global CPU) 0.91192

 Solve status: Optimal Objective value: 45.68292682926829 nb_rows 51 nb_cols 48
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (51, 48) and density : 0.25735294117647056 and number of remaining ones : 677
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.257 density  and density_threshold= 0.330


I am in the while loop with i= 7 density= 0.25735294117647056 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  46.578947368421055
I solved model name = row_knapsack_problem for iteration i =  7 with obj value: 46.578947368421055 KP time = 0.9119220834691077 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01512 - (Local CPU) 0.01512 - (Global CPU) 0.92704

 Solve status: Optimal Objective value: 46.578947368421055 nb_rows 46 nb_cols 48
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (46, 48) and density : 0.26313405797101447 and number of remaining ones : 581
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 13), (1, 11), (4, 12), (6, 11), (8, 12), (9, 11), (10, 11), (11, 10), (14, 11), (16, 11), (19, 13), (20, 13), (21, 13), (24, 11), (26, 12), (27, 15), (28, 12), (32, 11), (33, 18), (42, 12), (43, 11), (45, 9), (47, 15), (49, 11), (52, 14), (55, 11), (58, 11), (59, 10), (60, 14), (64, 13), (68, 10), (70, 13), (73, 14), (74, 10), (78, 12), (81, 11), (82, 9), (84, 14), (85, 11), (87, 14), (88, 11), (90, 16), (91, 18), (93, 11), (94, 11), (95, 12), (96, 12), (99, 10)]
nb_edges_0 = 1627 rho= 0.1 # of rows = 46 # of columns= 48 total_degree_0= 1627 RHS= 162.70000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  7 with obj value: 46.578947368421055 KP time = 0.9270443334244192 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01483 - (Local CPU) 0.01483 - (Global CPU) 0.94187

 Solve status: Optimal Objective value: 42.638888888888886 nb_rows 46 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (46, 43) and density : 0.269464105156724 and number of remaining ones : 581
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.269 density  and density_threshold= 0.330


I am in the while loop with i= 8 density= 0.269464105156724 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  33.19117647058823
I solved model name = row_knapsack_problem for iteration i =  8 with obj value: 33.19117647058823 KP time = 0.9418730834731832 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01483 - (Local CPU) 0.01483 - (Global CPU) 0.95671

 Solve status: Optimal Objective value: 33.19117647058823 nb_rows 41 nb_cols 43
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (41, 43) and density : 0.27906976744186046 and number of remaining ones : 492
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (1, 10), (4, 11), (6, 8), (8, 11), (9, 9), (10, 11), (14, 9), (16, 11), (19, 11), (20, 13), (21, 12), (24, 11), (26, 10), (27, 13), (28, 11), (32, 9), (33, 17), (42, 12), (43, 10), (47, 13), (49, 11), (52, 14), (55, 10), (58, 11), (59, 10), (60, 14), (64, 12), (70, 13), (73, 12), (78, 10), (81, 11), (84, 14), (85, 11), (87, 14), (88, 10), (90, 14), (91, 18), (93, 8), (94, 11), (95, 10), (96, 10), (99, 10)]
nb_edges_0 = 1271 rho= 0.1 # of rows = 41 # of columns= 43 total_degree_0= 1271 RHS= 127.10000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  8 with obj value: 33.19117647058823 KP time = 0.9567059584660456 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01536 - (Local CPU) 0.01536 - (Global CPU) 0.97207

 Solve status: Optimal Objective value: 33.184375 nb_rows 41 nb_cols 39
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (41, 39) and density : 0.2864290181363352 and number of remaining ones : 492
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.286 density  and density_threshold= 0.330


I am in the while loop with i= 9 density= 0.2864290181363352 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  30.33
I solved model name = row_knapsack_problem for iteration i =  9 with obj value: 30.33 KP time = 0.972070375457406 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01507 - (Local CPU) 0.01507 - (Global CPU) 0.98714

 Solve status: Optimal Objective value: 30.33 nb_rows 37 nb_cols 39
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (37, 39) and density : 0.2945252945252945 and number of remaining ones : 425
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (1, 10), (4, 10), (8, 10), (9, 7), (10, 10), (16, 11), (19, 10), (20, 11), (21, 10), (24, 11), (26, 10), (27, 11), (28, 11), (33, 15), (42, 11), (43, 10), (47, 13), (49, 11), (52, 14), (55, 10), (58, 10), (59, 10), (60, 12), (64, 12), (70, 12), (73, 12), (78, 10), (81, 10), (84, 11), (85, 9), (87, 12), (88, 10), (90, 14), (91, 15), (94, 10), (95, 10), (96, 9), (99, 10)]
nb_edges_0 = 1018 rho= 0.1 # of rows = 37 # of columns= 39 total_degree_0= 1018 RHS= 101.80000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  9 with obj value: 30.33 KP time = 0.9871394585352391 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01459 - (Local CPU) 0.01459 - (Global CPU) 1.00173

 Solve status: Optimal Objective value: 30.85185185185185 nb_rows 37 nb_cols 35
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (37, 35) and density : 0.30115830115830117 and number of remaining ones : 425
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.301 density  and density_threshold= 0.330


I am in the while loop with i= 10 density= 0.30115830115830117 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  25.51851851851852
I solved model name = row_knapsack_problem for iteration i =  10 with obj value: 25.51851851851852 KP time = 1.0017299165483564 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01482 - (Local CPU) 0.01482 - (Global CPU) 1.01655

 Solve status: Optimal Objective value: 25.51851851851852 nb_rows 33 nb_cols 35
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 35) and density : 0.31082251082251083 and number of remaining ones : 359
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (4, 9), (8, 10), (10, 9), (16, 10), (19, 10), (20, 11), (21, 9), (24, 9), (26, 10), (27, 10), (28, 9), (33, 12), (42, 10), (43, 8), (47, 13), (49, 11), (52, 12), (55, 10), (58, 7), (59, 10), (60, 12), (64, 12), (70, 11), (73, 12), (78, 9), (81, 9), (84, 11), (87, 10), (88, 10), (90, 14), (91, 14), (94, 9), (95, 8), (99, 8)]
nb_edges_0 = 796 rho= 0.1 # of rows = 33 # of columns= 35 total_degree_0= 796 RHS= 79.60000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  10 with obj value: 25.51851851851852 KP time = 1.01654587558005 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01527 - (Local CPU) 0.01527 - (Global CPU) 1.03181

 Solve status: Optimal Objective value: 24.151999999999997 nb_rows 33 nb_cols 31
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 31) and density : 0.3206256109481916 and number of remaining ones : 359
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.321 density  and density_threshold= 0.330


I am in the while loop with i= 11 density= 0.3206256109481916 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  24.17391304347826
I solved model name = row_knapsack_problem for iteration i =  11 with obj value: 24.17391304347826 KP time = 1.0318140835734084 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01443 - (Local CPU) 0.01443 - (Global CPU) 1.04625

 Solve status: Optimal Objective value: 24.17391304347826 nb_rows 29 nb_cols 31
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 31) and density : 0.3292547274749722 and number of remaining ones : 296
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 10), (4, 8), (8, 10), (10, 8), (16, 10), (19, 8), (20, 11), (21, 9), (24, 8), (26, 10), (27, 8), (28, 9), (33, 10), (42, 10), (47, 11), (49, 10), (52, 12), (55, 9), (59, 8), (60, 10), (64, 10), (70, 9), (73, 10), (78, 8), (81, 8), (84, 8), (87, 9), (88, 10), (90, 14), (91, 13), (94, 8)]
nb_edges_0 = 603 rho= 0.1 # of rows = 29 # of columns= 31 total_degree_0= 603 RHS= 60.300000000000004
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  11 with obj value: 24.17391304347826 KP time = 1.0462468746118248 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01439 - (Local CPU) 0.01439 - (Global CPU) 1.06063

 Solve status: Optimal Objective value: 22.97142857142857 nb_rows 29 nb_cols 28
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (29, 28) and density : 0.33497536945812806 and number of remaining ones : 296
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 11 iterations
            Density : 0.335 > 0.33
            It took me : 1.061 time
            Found matrix of size : (29, 28) and density : 0.335
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 95.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_1_M_5.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.13222 - (Local CPU) 0.13222 - (Global CPU) 0.13222

 Solve status: Optimal Objective value: 95.0 nb_rows 7 nb_cols 2
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 7
Number of Remaining number Columns : 2
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 14 Density : 1.0 current obj value 95.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 7  and cols_res of lenght = 2
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 5
        with delta =  0.0
        Found matrix of size : (7, 2)
        and density : 1.0
        and # of ones : 14
        and Heuristic QBC time   : 0.13222
        and Global QBC  time  : 0.13222
        
 Remaining Rows  : [25, 28, 37, 52, 63, 75, 94]
 Remaining  Cols  : [20, 91]

----------------------------------------------------------------------
 
    End of computations for matrix 5 in  data/random_bench/random_very_long.txt at level 1 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (7,2), with  density : 1.0 and number of ones: 14
    Global Time (in sec): 1.193
    Total Time in QBC approaches: 0.132
    Time in greedy approach: 1.061,  size of matrix found by greedy : (29,28) 
    With density : 0.335 and # ones : 272 
    Time in heuristic only : 0.132 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 11
    Percentage of greedy approach run time in global run time : 88.92% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

dec_conq= 1

 Level 0, Matrix 10:
Size Rows: 83
Size Cols: 90

 Level 0 Matrix  11:
Size Rows: 90
Size Cols: 88

Task with matrix 10 with size (83,90) and density 0.8232931726907631 and number of ones 6150  and number of zeros 1320 has been added to the queue.

 Return from 10 with winning node = 10

calling decrease_and_conquer for node 11

Task with matrix 11 with size (90,88) and density 0.820959595959596 and number of ones 6502  and number of zeros 1418 has been added to the queue.

return in decrease_and_conquer from 11 with winning node = 11

return in decrease_and_conquer from 5 with winning node = 11

return in decrease_and_conquer from 5 with winning node = 11

return in decrease_and_conquer from 2 with winning node = 9

 Return from 2 with winning node = 9

calling decrease_and_conquer for node 3

----------------------------------------------------------------------
***Stats Current Input for matrix 3 in  data/random_bench/random_very_long.txt at level 2 and with model:  max_e_c***
Size of current matrix :  100 * 98 = 9800 ; dec_conq: 2
Prev_lower_bound :  None number input zeros :  7945 ; number input ones :  1855
rho =  0.1 ; delta :  0.0
Input density : 0.189 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.189 density  and density_threshold= 0.330


I am in the while loop with i= 1 density= 0.18928571428571428 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  24.34418604651163
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 24.34418604651163 KP time = 0.3977541649946943 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.03448 - (Local CPU) 0.03448 - (Global CPU) 0.43224

 Solve status: Optimal Objective value: 24.34418604651163 nb_rows 97 nb_cols 98
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (97, 98) and density : 0.1915632232274353 and number of remaining ones : 1821
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 17), (2, 23), (3, 18), (4, 14), (5, 14), (6, 17), (7, 20), (8, 18), (9, 20), (10, 20), (11, 21), (12, 13), (13, 18), (14, 17), (15, 17), (16, 22), (17, 16), (18, 17), (19, 20), (20, 23), (21, 20), (22, 21), (23, 18), (24, 24), (25, 22), (26, 23), (27, 18), (28, 17), (29, 14), (30, 16), (31, 20), (32, 18), (33, 26), (34, 20), (35, 18), (36, 30), (37, 15), (38, 16), (39, 20), (40, 16), (41, 13), (42, 18), (43, 19), (44, 14), (46, 13), (47, 25), (48, 14), (49, 14), (50, 15), (51, 26), (52, 22), (53, 23), (54, 22), (55, 19), (56, 16), (57, 22), (58, 18), (59, 18), (60, 20), (61, 13), (62, 17), (63, 20), (64, 24), (65, 16), (66, 17), (67, 13), (68, 19), (69, 15), (70, 21), (71, 19), (72, 15), (74, 25), (75, 20), (76, 15), (77, 13), (78, 21), (79, 24), (80, 12), (81, 21), (82, 18), (83, 28), (84, 21), (85, 17), (86, 15), (87, 17), (88, 22), (89, 13), (90, 19), (91, 30), (92, 14), (93, 16), (94, 22), (95, 23), (96, 19), (97, 12), (98, 14), (99, 14)]
nb_edges_0 = 7685 rho= 0.1 # of rows = 97 # of columns= 98 total_degree_0= 7685 RHS= 768.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 24.34418604651163 KP time = 0.43223637400660664 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01850 - (Local CPU) 0.01850 - (Global CPU) 0.45074

 Solve status: Optimal Objective value: 116.7710843373494 nb_rows 97 nb_cols 88
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (97, 88) and density : 0.19821930646672914 and number of remaining ones : 1821
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.198 density  and density_threshold= 0.330


I am in the while loop with i= 2 density= 0.19821930646672914 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  106.896
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 106.896 KP time = 0.4507400820730254 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.02127 - (Local CPU) 0.02127 - (Global CPU) 0.47201

 Solve status: Optimal Objective value: 106.896 nb_rows 88 nb_cols 88
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (88, 88) and density : 0.2046745867768595 and number of remaining ones : 1585
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 17), (2, 21), (3, 16), (5, 14), (6, 17), (7, 18), (8, 18), (9, 18), (10, 20), (11, 18), (13, 16), (14, 17), (15, 15), (16, 22), (17, 16), (18, 16), (19, 19), (20, 21), (21, 19), (22, 18), (23, 18), (24, 24), (25, 22), (26, 21), (27, 16), (28, 17), (29, 13), (30, 16), (31, 19), (32, 15), (33, 25), (34, 18), (35, 17), (36, 28), (37, 14), (38, 14), (39, 19), (40, 15), (42, 15), (43, 19), (44, 14), (47, 22), (48, 14), (49, 14), (50, 15), (51, 24), (52, 22), (53, 22), (54, 20), (55, 16), (56, 16), (57, 18), (58, 16), (59, 15), (60, 19), (62, 17), (63, 19), (64, 24), (65, 16), (66, 16), (68, 18), (69, 13), (70, 19), (71, 19), (72, 15), (74, 22), (75, 19), (76, 12), (78, 20), (79, 24), (81, 19), (82, 17), (83, 26), (84, 20), (85, 16), (86, 13), (87, 15), (88, 20), (90, 19), (91, 29), (92, 13), (93, 11), (94, 19), (95, 23), (96, 17), (98, 14), (99, 14)]
nb_edges_0 = 6159 rho= 0.1 # of rows = 88 # of columns= 88 total_degree_0= 6159 RHS= 615.9000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 106.896 KP time = 0.47200916602741927 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01647 - (Local CPU) 0.01647 - (Global CPU) 0.48848

 Solve status: Optimal Objective value: 105.81891891891891 nb_rows 88 nb_cols 79
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (88, 79) and density : 0.21116225546605294 and number of remaining ones : 1585
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.211 density  and density_threshold= 0.330


I am in the while loop with i= 3 density= 0.21116225546605294 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  97.24545454545454
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 97.24545454545454 KP time = 0.4884786660550162 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.02218 - (Local CPU) 0.02218 - (Global CPU) 0.51066

 Solve status: Optimal Objective value: 97.24545454545454 nb_rows 79 nb_cols 79
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (79, 79) and density : 0.21791379586604712 and number of remaining ones : 1360
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 14), (2, 20), (3, 16), (5, 14), (6, 15), (7, 17), (8, 18), (9, 16), (10, 20), (11, 17), (13, 15), (14, 15), (15, 13), (16, 20), (17, 13), (18, 15), (19, 18), (20, 19), (21, 18), (22, 15), (23, 16), (24, 24), (25, 18), (26, 19), (27, 13), (28, 16), (30, 15), (31, 16), (32, 15), (33, 23), (34, 17), (35, 15), (36, 25), (39, 18), (40, 13), (42, 14), (43, 17), (44, 12), (47, 20), (48, 13), (49, 13), (50, 14), (51, 23), (52, 20), (53, 21), (54, 19), (55, 16), (56, 15), (57, 18), (58, 14), (59, 14), (60, 19), (62, 15), (63, 17), (64, 24), (65, 16), (66, 15), (68, 16), (70, 18), (71, 18), (72, 14), (74, 20), (75, 19), (78, 18), (79, 19), (81, 17), (82, 15), (83, 24), (84, 20), (85, 15), (87, 13), (88, 20), (90, 18), (91, 27), (94, 19), (95, 21), (96, 17), (99, 13)]
nb_edges_0 = 4881 rho= 0.1 # of rows = 79 # of columns= 79 total_degree_0= 4881 RHS= 488.1
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 97.24545454545454 KP time = 0.5106561661232263 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.02676 - (Local CPU) 0.02676 - (Global CPU) 0.53741

 Solve status: Optimal Objective value: 94.9439393939394 nb_rows 79 nb_cols 71
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (79, 71) and density : 0.2241041183811731 and number of remaining ones : 1360
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.224 density  and density_threshold= 0.330


I am in the while loop with i= 4 density= 0.2241041183811731 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  92.64827586206897
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 92.64827586206897 KP time = 0.5374138741753995 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01952 - (Local CPU) 0.01952 - (Global CPU) 0.55694

 Solve status: Optimal Objective value: 92.64827586206897 nb_rows 71 nb_cols 71
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (71, 71) and density : 0.2295179527871454 and number of remaining ones : 1157
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 17), (1, 13), (2, 18), (3, 14), (5, 14), (6, 14), (7, 17), (8, 18), (9, 14), (10, 18), (11, 17), (13, 14), (14, 13), (16, 19), (18, 14), (19, 17), (20, 18), (21, 15), (22, 14), (23, 15), (24, 22), (25, 15), (26, 16), (28, 15), (30, 14), (31, 16), (32, 13), (33, 21), (34, 16), (35, 13), (36, 23), (39, 17), (42, 12), (43, 16), (47, 19), (50, 13), (51, 21), (52, 18), (53, 19), (54, 17), (55, 16), (56, 13), (57, 17), (58, 12), (59, 13), (60, 18), (62, 12), (63, 16), (64, 20), (65, 13), (66, 14), (68, 14), (70, 18), (71, 17), (72, 13), (74, 18), (75, 17), (78, 15), (79, 18), (81, 16), (82, 15), (83, 22), (84, 20), (85, 14), (87, 12), (88, 19), (90, 17), (91, 26), (94, 18), (95, 20), (96, 15)]
nb_edges_0 = 3884 rho= 0.1 # of rows = 71 # of columns= 71 total_degree_0= 3884 RHS= 388.40000000000003
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 92.64827586206897 KP time = 0.5569371662568301 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01940 - (Local CPU) 0.01940 - (Global CPU) 0.57634

 Solve status: Optimal Objective value: 82.15862068965517 nb_rows 71 nb_cols 64
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (71, 64) and density : 0.23547535211267606 and number of remaining ones : 1157
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.235 density  and density_threshold= 0.330


I am in the while loop with i= 5 density= 0.23547535211267606 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  77.25882352941176
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 77.25882352941176 KP time = 0.5763351242057979 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01636 - (Local CPU) 0.01636 - (Global CPU) 0.59269

 Solve status: Optimal Objective value: 77.25882352941176 nb_rows 64 nb_cols 64
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (64, 64) and density : 0.2412109375 and number of remaining ones : 988
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 15), (2, 17), (3, 11), (5, 12), (6, 13), (7, 15), (8, 15), (9, 14), (10, 16), (11, 17), (13, 12), (14, 12), (16, 17), (18, 14), (19, 16), (20, 17), (21, 14), (22, 12), (23, 14), (24, 20), (25, 14), (26, 15), (28, 15), (30, 12), (31, 13), (32, 13), (33, 17), (34, 15), (36, 22), (39, 15), (43, 14), (47, 17), (50, 13), (51, 20), (52, 18), (53, 16), (54, 16), (55, 16), (57, 16), (59, 12), (60, 17), (63, 14), (64, 19), (65, 12), (66, 13), (68, 14), (70, 18), (71, 16), (72, 12), (74, 17), (75, 17), (78, 15), (79, 18), (81, 15), (82, 14), (83, 22), (84, 16), (85, 12), (88, 16), (90, 15), (91, 23), (94, 17), (95, 19), (96, 15)]
nb_edges_0 = 3108 rho= 0.1 # of rows = 64 # of columns= 64 total_degree_0= 3108 RHS= 310.8
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 77.25882352941176 KP time = 0.5926921652862802 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01828 - (Local CPU) 0.01828 - (Global CPU) 0.61097

 Solve status: Optimal Objective value: 70.49230769230769 nb_rows 64 nb_cols 58
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (64, 58) and density : 0.24703663793103448 and number of remaining ones : 988
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.247 density  and density_threshold= 0.330


I am in the while loop with i= 6 density= 0.24703663793103448 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  70.3913043478261
I solved model name = row_knapsack_problem for iteration i =  6 with obj value: 70.3913043478261 KP time = 0.6109717492945492 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01597 - (Local CPU) 0.01597 - (Global CPU) 0.62694

 Solve status: Optimal Objective value: 70.3913043478261 nb_rows 57 nb_cols 58
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (57, 58) and density : 0.25257108287961283 and number of remaining ones : 835
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 13), (2, 14), (5, 12), (6, 12), (7, 14), (8, 14), (9, 13), (10, 14), (11, 15), (16, 14), (18, 12), (19, 15), (20, 15), (21, 14), (23, 14), (24, 17), (25, 14), (26, 14), (28, 13), (31, 13), (32, 12), (33, 15), (34, 14), (36, 20), (39, 13), (43, 12), (47, 15), (50, 11), (51, 18), (52, 17), (53, 15), (54, 15), (55, 16), (57, 16), (59, 11), (60, 15), (63, 12), (64, 17), (66, 12), (68, 12), (70, 15), (71, 16), (72, 10), (74, 15), (75, 16), (78, 15), (79, 17), (81, 13), (82, 13), (83, 20), (84, 16), (85, 12), (88, 15), (90, 14), (91, 21), (94, 14), (95, 16), (96, 13)]
nb_edges_0 = 2471 rho= 0.1 # of rows = 57 # of columns= 58 total_degree_0= 2471 RHS= 247.10000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  6 with obj value: 70.3913043478261 KP time = 0.6269420413300395 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01623 - (Local CPU) 0.01623 - (Global CPU) 0.64317

 Solve status: Optimal Objective value: 60.82666666666667 nb_rows 57 nb_cols 52
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (57, 52) and density : 0.25877192982456143 and number of remaining ones : 835
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.259 density  and density_threshold= 0.330


I am in the while loop with i= 7 density= 0.25877192982456143 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  55.139024390243904
I solved model name = row_knapsack_problem for iteration i =  7 with obj value: 55.139024390243904 KP time = 0.6431748742470518 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01559 - (Local CPU) 0.01559 - (Global CPU) 0.65876

 Solve status: Optimal Objective value: 55.139024390243904 nb_rows 51 nb_cols 52
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (51, 52) and density : 0.2654600301659125 and number of remaining ones : 704
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (2, 12), (5, 10), (6, 10), (7, 11), (8, 13), (9, 13), (10, 13), (11, 14), (16, 12), (19, 12), (20, 14), (21, 13), (23, 14), (24, 16), (25, 13), (26, 12), (28, 13), (31, 13), (32, 11), (33, 13), (34, 14), (36, 18), (39, 11), (43, 12), (47, 14), (51, 15), (52, 13), (53, 13), (54, 14), (55, 15), (57, 15), (60, 14), (64, 17), (66, 11), (70, 13), (71, 16), (74, 15), (75, 16), (78, 14), (79, 16), (81, 13), (82, 11), (83, 19), (84, 13), (85, 11), (88, 14), (90, 13), (91, 19), (94, 13), (95, 16), (96, 13)]
nb_edges_0 = 1948 rho= 0.1 # of rows = 51 # of columns= 52 total_degree_0= 1948 RHS= 194.8
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  7 with obj value: 55.139024390243904 KP time = 0.658763749175705 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01480 - (Local CPU) 0.01480 - (Global CPU) 0.67356

 Solve status: Optimal Objective value: 51.02 nb_rows 51 nb_cols 47
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (51, 47) and density : 0.2715894868585732 and number of remaining ones : 704
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.272 density  and density_threshold= 0.330


I am in the while loop with i= 8 density= 0.2715894868585732 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  48.12777777777778
I solved model name = row_knapsack_problem for iteration i =  8 with obj value: 48.12777777777778 KP time = 0.6735648741014302 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01490 - (Local CPU) 0.01490 - (Global CPU) 0.68846

 Solve status: Optimal Objective value: 48.12777777777778 nb_rows 46 nb_cols 47
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (46, 47) and density : 0.27752081406105455 and number of remaining ones : 600
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 10), (2, 10), (8, 13), (9, 11), (10, 11), (11, 12), (16, 12), (19, 10), (20, 13), (21, 12), (23, 12), (24, 15), (25, 12), (26, 12), (28, 13), (31, 12), (32, 10), (33, 13), (34, 12), (36, 17), (43, 12), (47, 14), (51, 15), (52, 12), (53, 11), (54, 12), (55, 15), (57, 12), (60, 12), (64, 16), (70, 13), (71, 15), (74, 15), (75, 16), (78, 12), (79, 15), (81, 12), (82, 9), (83, 18), (84, 13), (85, 11), (88, 10), (90, 13), (91, 16), (94, 12), (95, 14), (96, 13)]
nb_edges_0 = 1562 rho= 0.1 # of rows = 46 # of columns= 47 total_degree_0= 1562 RHS= 156.20000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  8 with obj value: 48.12777777777778 KP time = 0.6884634571615607 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01510 - (Local CPU) 0.01510 - (Global CPU) 0.70357

 Solve status: Optimal Objective value: 42.11111111111111 nb_rows 46 nb_cols 42
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (46, 42) and density : 0.2851966873706004 and number of remaining ones : 600
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.285 density  and density_threshold= 0.330


I am in the while loop with i= 9 density= 0.2851966873706004 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  40.53125
I solved model name = row_knapsack_problem for iteration i =  9 with obj value: 40.53125 KP time = 0.7035677491221577 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01528 - (Local CPU) 0.01528 - (Global CPU) 0.71885

 Solve status: Optimal Objective value: 40.53125 nb_rows 41 nb_cols 42
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (41, 42) and density : 0.29210220673635306 and number of remaining ones : 503
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(8, 13), (9, 9), (10, 11), (11, 12), (16, 10), (20, 13), (21, 11), (23, 10), (24, 15), (25, 11), (26, 10), (28, 13), (31, 11), (32, 8), (33, 12), (34, 12), (36, 14), (43, 12), (47, 11), (51, 14), (52, 9), (53, 9), (54, 12), (55, 14), (57, 11), (60, 11), (64, 15), (70, 13), (71, 15), (74, 12), (75, 14), (78, 11), (79, 13), (81, 11), (83, 16), (84, 12), (85, 10), (90, 11), (91, 14), (94, 11), (95, 14), (96, 13)]
nb_edges_0 = 1219 rho= 0.1 # of rows = 41 # of columns= 42 total_degree_0= 1219 RHS= 121.9
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  9 with obj value: 40.53125 KP time = 0.7188481661723927 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01470 - (Local CPU) 0.01470 - (Global CPU) 0.73355

 Solve status: Optimal Objective value: 33.003125 nb_rows 41 nb_cols 38
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (41, 38) and density : 0.30038510911424904 and number of remaining ones : 503
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.300 density  and density_threshold= 0.330


I am in the while loop with i= 10 density= 0.30038510911424904 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  33.5
I solved model name = row_knapsack_problem for iteration i =  10 with obj value: 33.5 KP time = 0.7335468751844019 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01483 - (Local CPU) 0.01483 - (Global CPU) 0.74838

 Solve status: Optimal Objective value: 33.5 nb_rows 37 nb_cols 38
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (37, 38) and density : 0.30725462304409673 and number of remaining ones : 432
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(8, 12), (10, 10), (11, 9), (16, 10), (20, 12), (21, 11), (23, 9), (24, 14), (25, 11), (26, 10), (28, 13), (31, 10), (33, 10), (34, 11), (36, 13), (43, 12), (47, 11), (51, 14), (54, 10), (55, 14), (57, 9), (60, 11), (64, 14), (70, 11), (71, 12), (74, 12), (75, 13), (78, 10), (79, 12), (81, 11), (83, 15), (84, 11), (85, 9), (90, 10), (91, 12), (94, 10), (95, 13), (96, 11)]
nb_edges_0 = 974 rho= 0.1 # of rows = 37 # of columns= 38 total_degree_0= 974 RHS= 97.4
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  10 with obj value: 33.5 KP time = 0.7483760002069175 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01468 - (Local CPU) 0.01468 - (Global CPU) 0.76306

 Solve status: Optimal Objective value: 31.307142857142857 nb_rows 37 nb_cols 34
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (37, 34) and density : 0.314785373608903 and number of remaining ones : 432
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.315 density  and density_threshold= 0.330


I am in the while loop with i= 11 density= 0.314785373608903 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  28.312
I solved model name = row_knapsack_problem for iteration i =  11 with obj value: 28.312 KP time = 0.7630570422625169 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01475 - (Local CPU) 0.01475 - (Global CPU) 0.77781

 Solve status: Optimal Objective value: 28.312 nb_rows 33 nb_cols 34
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 34) and density : 0.3226381461675579 and number of remaining ones : 362
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(8, 10), (10, 8), (16, 10), (20, 11), (21, 11), (24, 12), (25, 11), (26, 9), (28, 13), (31, 9), (33, 10), (34, 10), (36, 11), (43, 10), (47, 10), (51, 13), (54, 8), (55, 14), (60, 10), (64, 13), (70, 9), (71, 9), (74, 12), (75, 12), (78, 9), (79, 11), (81, 11), (83, 12), (84, 10), (90, 10), (91, 11), (94, 10), (95, 12), (96, 11)]
nb_edges_0 = 760 rho= 0.1 # of rows = 33 # of columns= 34 total_degree_0= 760 RHS= 76.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  11 with obj value: 28.312 KP time = 0.7778079172130674 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01476 - (Local CPU) 0.01476 - (Global CPU) 0.79257

 Solve status: Optimal Objective value: 25.75 nb_rows 33 nb_cols 30
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 30) and density : 0.33131313131313134 and number of remaining ones : 362
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 11 iterations
            Density : 0.331 > 0.33
            It took me : 0.793 time
            Found matrix of size : (33, 30) and density : 0.331
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 110.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_2_M_3.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.16425 - (Local CPU) 0.16425 - (Global CPU) 0.16425

 Solve status: Optimal Objective value: 110.0 nb_rows 8 nb_cols 2
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 8
Number of Remaining number Columns : 2
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 16 Density : 1.0 current obj value 110.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 8  and cols_res of lenght = 2
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 3
        with delta =  0.0
        Found matrix of size : (8, 2)
        and density : 1.0
        and # of ones : 16
        and Heuristic QBC time   : 0.16425
        and Global QBC  time  : 0.16425
        
 Remaining Rows  : [10, 3, 30, 58, 76, 88, 90, 96]
 Remaining  Cols  : [28, 55]

----------------------------------------------------------------------
 
    End of computations for matrix 3 in  data/random_bench/random_very_long.txt at level 2 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (8,2), with  density : 1.0 and number of ones: 16
    Global Time (in sec): 0.957
    Total Time in QBC approaches: 0.164
    Time in greedy approach: 0.793,  size of matrix found by greedy : (33,30) 
    With density : 0.331 and # ones : 328 
    Time in heuristic only : 0.164 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 11
    Percentage of greedy approach run time in global run time : 82.83% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

dec_conq= 2

 Level 1, Matrix 6:
Size Rows: 92
Size Cols: 98

 Level 1 Matrix  7:
Size Rows: 100
Size Cols: 96

----------------------------------------------------------------------
***Stats Current Input for matrix 6 in  data/random_bench/random_very_long.txt at level 1 and with model:  max_e_c***
Size of current matrix :  92 * 98 = 9016 ; dec_conq: 1
Prev_lower_bound :  None number input zeros :  7336 ; number input ones :  1680
rho =  0.1 ; delta :  0.0
Input density : 0.186 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.186 density  and density_threshold= 0.330


I am in the while loop with i= 1 density= 0.18633540372670807 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  24.34418604651163
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 24.34418604651163 KP time = 0.7925727092660964 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01749 - (Local CPU) 0.01750 - (Global CPU) 0.81007

 Solve status: Optimal Objective value: 24.34418604651163 nb_rows 89 nb_cols 98
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (89, 98) and density : 0.1887181839027746 and number of remaining ones : 1646
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 18), (1, 15), (2, 22), (3, 16), (4, 12), (5, 11), (6, 17), (7, 18), (8, 17), (9, 20), (10, 17), (11, 20), (12, 13), (13, 14), (14, 17), (15, 15), (16, 19), (17, 15), (18, 16), (19, 17), (20, 20), (21, 18), (22, 19), (23, 15), (24, 19), (25, 19), (26, 19), (27, 16), (28, 9), (29, 12), (30, 15), (31, 17), (32, 17), (33, 27), (34, 17), (35, 17), (36, 27), (37, 15), (38, 15), (39, 17), (40, 13), (41, 12), (42, 16), (43, 18), (44, 14), (46, 14), (47, 23), (48, 13), (49, 11), (50, 16), (51, 21), (52, 22), (53, 20), (54, 21), (55, 10), (56, 15), (57, 20), (58, 17), (59, 16), (60, 19), (61, 13), (62, 17), (63, 19), (64, 21), (65, 14), (66, 14), (67, 11), (68, 18), (69, 15), (70, 20), (71, 19), (72, 13), (74, 24), (75, 18), (76, 14), (77, 13), (78, 18), (79, 22), (80, 11), (81, 18), (82, 16), (83, 24), (84, 21), (85, 14), (86, 11), (87, 16), (88, 20), (89, 12), (90, 15), (91, 30), (92, 14), (93, 16), (94, 19), (95, 21), (96, 17), (97, 10), (98, 14), (99, 14)]
nb_edges_0 = 7076 rho= 0.1 # of rows = 89 # of columns= 98 total_degree_0= 7076 RHS= 707.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 24.34418604651163 KP time = 0.8100685422541574 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01572 - (Local CPU) 0.01572 - (Global CPU) 0.82579

 Solve status: Optimal Objective value: 96.40519480519481 nb_rows 89 nb_cols 88
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (89, 88) and density : 0.1963738508682329 and number of remaining ones : 1646
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.196 density  and density_threshold= 0.330


I am in the while loop with i= 2 density= 0.1963738508682329 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  102.056
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 102.056 KP time = 0.8257929591927677 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01529 - (Local CPU) 0.01529 - (Global CPU) 0.84109

 Solve status: Optimal Objective value: 102.056 nb_rows 80 nb_cols 88
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (80, 88) and density : 0.20269886363636364 and number of remaining ones : 1427
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 17), (1, 15), (2, 19), (3, 15), (4, 11), (6, 17), (7, 15), (8, 17), (9, 19), (10, 17), (11, 19), (12, 12), (13, 13), (14, 16), (15, 14), (16, 17), (17, 15), (18, 16), (19, 17), (20, 19), (21, 15), (22, 15), (23, 15), (24, 19), (25, 17), (26, 18), (27, 14), (30, 15), (31, 17), (32, 14), (33, 26), (34, 14), (35, 15), (36, 24), (37, 14), (38, 12), (39, 15), (40, 11), (42, 15), (43, 17), (44, 14), (46, 11), (47, 21), (48, 13), (50, 14), (51, 20), (52, 22), (53, 19), (54, 20), (56, 15), (57, 18), (58, 16), (59, 12), (60, 18), (61, 13), (62, 17), (63, 18), (64, 20), (65, 14), (66, 13), (68, 16), (69, 12), (70, 18), (71, 18), (72, 13), (74, 20), (75, 17), (76, 12), (77, 13), (78, 17), (79, 21), (81, 14), (82, 15), (83, 22), (84, 19), (85, 13), (87, 16), (88, 17), (89, 11), (90, 15), (91, 29), (92, 14), (93, 13), (94, 17), (95, 21), (96, 16), (98, 14), (99, 14)]
nb_edges_0 = 5613 rho= 0.1 # of rows = 80 # of columns= 88 total_degree_0= 5613 RHS= 561.3000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 102.056 KP time = 0.8410850001964718 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01500 - (Local CPU) 0.01500 - (Global CPU) 0.85608

 Solve status: Optimal Objective value: 94.34705882352941 nb_rows 80 nb_cols 79
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (80, 79) and density : 0.2093354430379747 and number of remaining ones : 1427
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.209 density  and density_threshold= 0.330


I am in the while loop with i= 3 density= 0.2093354430379747 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  84.06212121212121
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 84.06212121212121 KP time = 0.8560829581692815 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01484 - (Local CPU) 0.01484 - (Global CPU) 0.87092

 Solve status: Optimal Objective value: 84.06212121212121 nb_rows 72 nb_cols 79
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (72, 79) and density : 0.21642053445850915 and number of remaining ones : 1231
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 16), (1, 14), (2, 19), (3, 13), (6, 15), (7, 14), (8, 17), (9, 15), (10, 16), (11, 17), (13, 12), (14, 15), (15, 11), (16, 16), (17, 14), (18, 16), (19, 15), (20, 19), (21, 14), (22, 13), (23, 14), (24, 18), (25, 16), (26, 16), (27, 13), (30, 15), (31, 15), (32, 13), (33, 23), (34, 14), (35, 14), (36, 23), (37, 12), (39, 15), (42, 13), (43, 16), (44, 12), (47, 17), (48, 12), (50, 14), (51, 19), (52, 22), (53, 18), (54, 18), (56, 15), (57, 16), (58, 15), (60, 16), (61, 13), (62, 16), (63, 16), (64, 18), (65, 14), (66, 12), (68, 15), (70, 18), (71, 18), (72, 13), (74, 19), (75, 15), (77, 12), (78, 15), (79, 20), (81, 13), (82, 15), (83, 19), (84, 19), (85, 13), (87, 13), (88, 17), (90, 14), (91, 28), (92, 12), (93, 10), (94, 16), (95, 20), (96, 15), (98, 14), (99, 14)]
nb_edges_0 = 4457 rho= 0.1 # of rows = 72 # of columns= 79 total_degree_0= 4457 RHS= 445.70000000000005
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 84.06212121212121 KP time = 0.8709186661290005 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01491 - (Local CPU) 0.01491 - (Global CPU) 0.88583

 Solve status: Optimal Objective value: 85.53999999999999 nb_rows 72 nb_cols 71
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (72, 71) and density : 0.22261345852895148 and number of remaining ones : 1231
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.223 density  and density_threshold= 0.330


I am in the while loop with i= 4 density= 0.22261345852895148 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  85.39999999999999
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 85.39999999999999 KP time = 0.8858295411337167 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01472 - (Local CPU) 0.01472 - (Global CPU) 0.90055

 Solve status: Optimal Objective value: 85.39999999999999 nb_rows 65 nb_cols 71
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (65, 71) and density : 0.2275189599133261 and number of remaining ones : 1050
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 15), (1, 12), (2, 15), (3, 13), (6, 14), (7, 13), (8, 17), (9, 14), (10, 15), (11, 16), (14, 14), (16, 16), (17, 12), (18, 16), (19, 13), (20, 18), (21, 13), (22, 11), (23, 13), (24, 18), (25, 13), (26, 13), (27, 13), (30, 15), (31, 14), (32, 13), (33, 22), (34, 13), (35, 12), (36, 21), (39, 14), (42, 12), (43, 15), (44, 11), (47, 16), (50, 12), (51, 18), (52, 20), (53, 16), (54, 16), (56, 15), (57, 14), (58, 14), (60, 16), (61, 12), (62, 13), (63, 14), (64, 16), (65, 12), (68, 14), (70, 17), (71, 18), (72, 11), (74, 18), (75, 14), (78, 13), (79, 18), (81, 12), (82, 12), (83, 17), (84, 19), (85, 13), (87, 12), (88, 15), (90, 13), (91, 27), (94, 15), (95, 19), (96, 14), (98, 13), (99, 13)]
nb_edges_0 = 3565 rho= 0.1 # of rows = 65 # of columns= 71 total_degree_0= 3565 RHS= 356.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 85.39999999999999 KP time = 0.9005481661297381 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01478 - (Local CPU) 0.01478 - (Global CPU) 0.91533

 Solve status: Optimal Objective value: 77.0377358490566 nb_rows 65 nb_cols 64
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (65, 64) and density : 0.2329326923076923 and number of remaining ones : 1050
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.233 density  and density_threshold= 0.330


I am in the while loop with i= 5 density= 0.2329326923076923 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  72.40769230769232
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 72.40769230769232 KP time = 0.9153286661021411 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01459 - (Local CPU) 0.01459 - (Global CPU) 0.92992

 Solve status: Optimal Objective value: 72.40769230769232 nb_rows 58 nb_cols 64
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (58, 64) and density : 0.23868534482758622 and number of remaining ones : 886
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 13), (1, 10), (2, 13), (3, 9), (6, 13), (7, 13), (8, 16), (9, 13), (10, 15), (11, 15), (14, 12), (16, 14), (18, 14), (19, 12), (20, 16), (21, 12), (23, 11), (24, 16), (25, 13), (26, 12), (27, 11), (30, 11), (31, 11), (32, 13), (33, 17), (34, 13), (36, 20), (39, 13), (43, 13), (47, 15), (50, 12), (51, 16), (52, 18), (53, 14), (54, 16), (56, 13), (57, 14), (58, 12), (60, 16), (62, 12), (63, 14), (64, 15), (65, 10), (68, 13), (70, 16), (71, 17), (74, 16), (75, 13), (78, 12), (79, 16), (81, 12), (82, 11), (83, 17), (84, 18), (85, 11), (87, 11), (88, 13), (90, 13), (91, 26), (94, 15), (95, 17), (96, 13), (98, 12), (99, 13)]
nb_edges_0 = 2826 rho= 0.1 # of rows = 58 # of columns= 64 total_degree_0= 2826 RHS= 282.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 72.40769230769232 KP time = 0.9299179160734639 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01448 - (Local CPU) 0.01448 - (Global CPU) 0.94440

 Solve status: Optimal Objective value: 61.20425531914894 nb_rows 58 nb_cols 58
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (58, 58) and density : 0.24494649227110582 and number of remaining ones : 886
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.245 density  and density_threshold= 0.330


I am in the while loop with i= 6 density= 0.24494649227110582 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  56.173913043478265
I solved model name = row_knapsack_problem for iteration i =  6 with obj value: 56.173913043478265 KP time = 0.9443971241125837 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01450 - (Local CPU) 0.01450 - (Global CPU) 0.95890

 Solve status: Optimal Objective value: 56.173913043478265 nb_rows 52 nb_cols 58
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (52, 58) and density : 0.2519893899204244 and number of remaining ones : 760
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (2, 10), (6, 12), (7, 13), (8, 16), (9, 12), (10, 14), (11, 15), (14, 9), (16, 13), (18, 13), (19, 9), (20, 15), (21, 11), (23, 11), (24, 14), (25, 12), (26, 12), (30, 10), (31, 11), (32, 11), (33, 15), (34, 13), (36, 18), (39, 12), (43, 12), (47, 14), (50, 11), (51, 13), (52, 15), (53, 12), (54, 16), (56, 12), (57, 13), (58, 12), (60, 14), (62, 12), (63, 13), (64, 15), (68, 12), (70, 14), (71, 16), (74, 15), (75, 13), (78, 12), (79, 15), (81, 9), (82, 10), (83, 17), (84, 15), (88, 12), (90, 12), (91, 23), (94, 15), (95, 17), (96, 12), (98, 11), (99, 13)]
nb_edges_0 = 2256 rho= 0.1 # of rows = 52 # of columns= 58 total_degree_0= 2256 RHS= 225.60000000000002
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  6 with obj value: 56.173913043478265 KP time = 0.9589003321016207 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01464 - (Local CPU) 0.01464 - (Global CPU) 0.97354

 Solve status: Optimal Objective value: 50.0 nb_rows 52 nb_cols 52
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (52, 52) and density : 0.2599852071005917 and number of remaining ones : 760
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.260 density  and density_threshold= 0.330


I am in the while loop with i= 7 density= 0.2599852071005917 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  51.14878048780488
I solved model name = row_knapsack_problem for iteration i =  7 with obj value: 51.14878048780488 KP time = 0.9735390821006149 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01501 - (Local CPU) 0.01501 - (Global CPU) 0.98855

 Solve status: Optimal Objective value: 51.14878048780488 nb_rows 47 nb_cols 52
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (47, 52) and density : 0.26595744680851063 and number of remaining ones : 650
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (6, 10), (7, 13), (8, 16), (9, 11), (10, 13), (11, 14), (16, 13), (18, 11), (20, 14), (21, 10), (23, 10), (24, 12), (25, 11), (26, 10), (31, 10), (32, 8), (33, 15), (34, 12), (36, 18), (39, 11), (43, 12), (47, 14), (50, 10), (51, 11), (52, 15), (53, 10), (54, 14), (56, 10), (57, 11), (58, 11), (60, 14), (62, 11), (63, 13), (64, 13), (68, 12), (70, 14), (71, 14), (74, 15), (75, 11), (78, 11), (79, 12), (83, 16), (84, 15), (88, 12), (90, 12), (91, 22), (94, 14), (95, 14), (96, 11), (98, 10), (99, 12)]
nb_edges_0 = 1794 rho= 0.1 # of rows = 47 # of columns= 52 total_degree_0= 1794 RHS= 179.4
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  7 with obj value: 51.14878048780488 KP time = 0.9885528321610764 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01493 - (Local CPU) 0.01493 - (Global CPU) 1.00348

 Solve status: Optimal Objective value: 45.94594594594595 nb_rows 47 nb_cols 47
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (47, 47) and density : 0.27252150294250793 and number of remaining ones : 650
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.273 density  and density_threshold= 0.330


I am in the while loop with i= 8 density= 0.27252150294250793 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  46.49166666666666
I solved model name = row_knapsack_problem for iteration i =  8 with obj value: 46.49166666666666 KP time = 1.003483957145363 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01512 - (Local CPU) 0.01512 - (Global CPU) 1.01861

 Solve status: Optimal Objective value: 46.49166666666666 nb_rows 42 nb_cols 47
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (42, 47) and density : 0.27811550151975684 and number of remaining ones : 549
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (7, 12), (8, 15), (9, 10), (10, 12), (11, 13), (16, 12), (18, 10), (20, 12), (23, 10), (24, 11), (25, 8), (26, 10), (33, 13), (34, 10), (36, 18), (39, 10), (43, 11), (47, 11), (51, 11), (52, 14), (53, 9), (54, 11), (56, 9), (57, 11), (58, 11), (60, 12), (62, 8), (63, 12), (64, 12), (68, 10), (70, 13), (71, 14), (74, 14), (75, 11), (78, 11), (79, 11), (83, 15), (84, 14), (88, 12), (90, 11), (91, 17), (94, 13), (95, 13), (96, 9), (98, 10), (99, 11)]
nb_edges_0 = 1425 rho= 0.1 # of rows = 42 # of columns= 47 total_degree_0= 1425 RHS= 142.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  8 with obj value: 46.49166666666666 KP time = 1.0186082480940968 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01486 - (Local CPU) 0.01486 - (Global CPU) 1.03347

 Solve status: Optimal Objective value: 36.31818181818182 nb_rows 42 nb_cols 42
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (42, 42) and density : 0.2868480725623583 and number of remaining ones : 549
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.287 density  and density_threshold= 0.330


I am in the while loop with i= 9 density= 0.2868480725623583 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  36.6875
I solved model name = row_knapsack_problem for iteration i =  9 with obj value: 36.6875 KP time = 1.0334658310748637 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01456 - (Local CPU) 0.01456 - (Global CPU) 1.04803

 Solve status: Optimal Objective value: 36.6875 nb_rows 38 nb_cols 42
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (38, 42) and density : 0.2932330827067669 and number of remaining ones : 468
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (7, 12), (8, 15), (9, 9), (10, 11), (11, 12), (16, 12), (18, 8), (20, 12), (23, 9), (24, 9), (26, 10), (33, 12), (34, 9), (36, 17), (39, 8), (43, 11), (47, 11), (51, 10), (52, 12), (54, 9), (57, 10), (58, 11), (60, 11), (63, 11), (64, 11), (68, 9), (70, 13), (71, 13), (74, 13), (75, 10), (78, 9), (79, 10), (83, 13), (84, 14), (88, 10), (90, 11), (91, 14), (94, 12), (95, 12), (98, 10), (99, 11)]
nb_edges_0 = 1128 rho= 0.1 # of rows = 38 # of columns= 42 total_degree_0= 1128 RHS= 112.80000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  9 with obj value: 36.6875 KP time = 1.048029288998805 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01483 - (Local CPU) 0.01483 - (Global CPU) 1.06286

 Solve status: Optimal Objective value: 32.38620689655173 nb_rows 38 nb_cols 38
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (38, 38) and density : 0.30055401662049863 and number of remaining ones : 468
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.301 density  and density_threshold= 0.330


I am in the while loop with i= 10 density= 0.30055401662049863 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  30.642857142857142
I solved model name = row_knapsack_problem for iteration i =  10 with obj value: 30.642857142857142 KP time = 1.0628628720296547 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01457 - (Local CPU) 0.01457 - (Global CPU) 1.07744

 Solve status: Optimal Objective value: 30.642857142857142 nb_rows 34 nb_cols 38
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 38) and density : 0.3080495356037152 and number of remaining ones : 398
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 10), (7, 11), (8, 15), (9, 8), (10, 10), (11, 10), (16, 11), (20, 11), (23, 8), (26, 9), (33, 12), (34, 9), (36, 14), (43, 10), (47, 9), (51, 9), (52, 12), (54, 9), (57, 10), (58, 10), (60, 10), (63, 11), (64, 10), (68, 8), (70, 12), (71, 13), (74, 12), (75, 10), (79, 9), (83, 12), (84, 13), (88, 10), (90, 9), (91, 13), (94, 10), (95, 10), (98, 8), (99, 11)]
nb_edges_0 = 894 rho= 0.1 # of rows = 34 # of columns= 38 total_degree_0= 894 RHS= 89.4
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  10 with obj value: 30.642857142857142 KP time = 1.077435455052182 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01593 - (Local CPU) 0.01593 - (Global CPU) 1.09336

 Solve status: Optimal Objective value: 27.50769230769231 nb_rows 34 nb_cols 34
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (34, 34) and density : 0.3166089965397924 and number of remaining ones : 398
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.317 density  and density_threshold= 0.330


I am in the while loop with i= 11 density= 0.3166089965397924 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  27.08
I solved model name = row_knapsack_problem for iteration i =  11 with obj value: 27.08 KP time = 1.0933646630728617 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01479 - (Local CPU) 0.01479 - (Global CPU) 1.10816

 Solve status: Optimal Objective value: 27.08 nb_rows 30 nb_cols 34
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (30, 34) and density : 0.32450980392156864 and number of remaining ones : 331
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 10), (7, 11), (8, 13), (10, 8), (11, 9), (16, 9), (20, 10), (26, 8), (33, 11), (34, 9), (36, 12), (43, 10), (47, 6), (51, 9), (52, 11), (54, 9), (57, 10), (58, 9), (60, 9), (63, 9), (64, 10), (70, 10), (71, 12), (74, 11), (75, 10), (79, 9), (83, 10), (84, 12), (88, 8), (90, 8), (91, 11), (94, 9), (95, 9), (99, 10)]
nb_edges_0 = 689 rho= 0.1 # of rows = 30 # of columns= 34 total_degree_0= 689 RHS= 68.9
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  11 with obj value: 27.08 KP time = 1.10815508000087 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01422 - (Local CPU) 0.01422 - (Global CPU) 1.12237

 Solve status: Optimal Objective value: 22.327272727272728 nb_rows 30 nb_cols 30
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (30, 30) and density : 0.33444444444444443 and number of remaining ones : 331
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 11 iterations
            Density : 0.334 > 0.33
            It took me : 1.122 time
            Found matrix of size : (30, 30) and density : 0.334
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 101.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_1_M_6.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.14105 - (Local CPU) 0.14105 - (Global CPU) 0.14105

 Solve status: Optimal Objective value: 101.0 nb_rows 2 nb_cols 7
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 2
Number of Remaining number Columns : 7
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 14 Density : 1.0 current obj value 101.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 2  and cols_res of lenght = 7
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 6
        with delta =  0.0
        Found matrix of size : (2, 7)
        and density : 1.0
        and # of ones : 14
        and Heuristic QBC time   : 0.14105
        and Global QBC  time  : 0.14105
        
 Remaining Rows  : [25, 83]
 Remaining  Cols  : [20, 33, 43, 64, 71, 8, 91]

----------------------------------------------------------------------
 
    End of computations for matrix 6 in  data/random_bench/random_very_long.txt at level 1 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (2,7), with  density : 1.0 and number of ones: 14
    Global Time (in sec): 1.263
    Total Time in QBC approaches: 0.141
    Time in greedy approach: 1.122,  size of matrix found by greedy : (30,30) 
    With density : 0.334 and # ones : 301 
    Time in heuristic only : 0.141 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 11
    Percentage of greedy approach run time in global run time : 88.84% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

dec_conq= 1

 Level 0, Matrix 12:
Size Rows: 90
Size Cols: 98

 Level 0 Matrix  13:
Size Rows: 92
Size Cols: 91

Task with matrix 12 with size (90,98) and density 0.813718820861678 and number of ones 7177  and number of zeros 1643 has been added to the queue.

 Return from 12 with winning node = 12

calling decrease_and_conquer for node 13

Task with matrix 13 with size (92,91) and density 0.8178451982799809 and number of ones 6847  and number of zeros 1525 has been added to the queue.

return in decrease_and_conquer from 13 with winning node = 13

return in decrease_and_conquer from 6 with winning node = 12

 Return from 6 with winning node = 12

calling decrease_and_conquer for node 7

----------------------------------------------------------------------
***Stats Current Input for matrix 7 in  data/random_bench/random_very_long.txt at level 1 and with model:  max_e_c***
Size of current matrix :  100 * 96 = 9600 ; dec_conq: 1
Prev_lower_bound :  None number input zeros :  7781 ; number input ones :  1819
rho =  0.1 ; delta :  0.0
Input density : 0.189 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------


calling greedy approaches for zero deletion, density= 0.189 density  and density_threshold= 0.330


I am in the while loop with i= 1 density= 0.18947916666666667 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  24.691764705882356
I solved model name = row_knapsack_problem for iteration i =  1 with obj value: 24.691764705882356 KP time = 0.7925727092660964 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01751 - (Local CPU) 0.01751 - (Global CPU) 0.81008

 Solve status: Optimal Objective value: 24.691764705882356 nb_rows 97 nb_cols 96
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (97, 96) and density : 0.19179553264604812 and number of remaining ones : 1786
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 17), (2, 23), (3, 18), (4, 15), (5, 14), (6, 17), (7, 20), (8, 18), (9, 20), (10, 20), (11, 20), (12, 14), (13, 17), (14, 17), (15, 17), (16, 22), (17, 16), (18, 16), (19, 20), (20, 22), (21, 20), (22, 21), (23, 18), (24, 24), (25, 22), (26, 23), (27, 18), (29, 13), (30, 16), (31, 20), (32, 18), (33, 27), (34, 20), (35, 18), (36, 30), (37, 15), (38, 17), (39, 20), (40, 16), (41, 13), (42, 17), (43, 19), (44, 14), (46, 14), (47, 26), (48, 14), (49, 14), (50, 16), (51, 25), (52, 22), (53, 23), (54, 22), (56, 16), (57, 22), (58, 18), (59, 18), (60, 20), (61, 13), (62, 17), (63, 20), (64, 25), (65, 16), (66, 17), (67, 12), (68, 19), (69, 16), (70, 21), (71, 19), (72, 15), (74, 25), (75, 21), (76, 15), (77, 13), (78, 21), (79, 24), (80, 12), (81, 22), (82, 18), (83, 28), (84, 21), (85, 17), (86, 14), (87, 17), (88, 22), (89, 12), (90, 19), (91, 30), (92, 14), (93, 17), (94, 21), (95, 23), (96, 19), (97, 12), (98, 14), (99, 14)]
nb_edges_0 = 7526 rho= 0.1 # of rows = 97 # of columns= 96 total_degree_0= 7526 RHS= 752.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  1 with obj value: 24.691764705882356 KP time = 0.8100829592440277 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01543 - (Local CPU) 0.01544 - (Global CPU) 0.82552

 Solve status: Optimal Objective value: 112.92048192771085 nb_rows 97 nb_cols 87
----------------------------------------
----------------------------------------

        Updated data after iteration: 1 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (97, 87) and density : 0.19812774025358454 and number of remaining ones : 1786
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.198 density  and density_threshold= 0.330


I am in the while loop with i= 2 density= 0.19812774025358454 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  110.65
I solved model name = row_knapsack_problem for iteration i =  2 with obj value: 110.65 KP time = 0.8255188752664253 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01529 - (Local CPU) 0.01529 - (Global CPU) 0.84081

 Solve status: Optimal Objective value: 110.65 nb_rows 87 nb_cols 87
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (87, 87) and density : 0.20465054828907386 and number of remaining ones : 1549
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 19), (1, 17), (2, 20), (3, 16), (4, 13), (5, 14), (6, 17), (7, 18), (8, 18), (9, 19), (10, 20), (11, 19), (13, 15), (14, 17), (15, 15), (16, 21), (17, 15), (18, 16), (19, 19), (20, 20), (21, 18), (22, 19), (23, 18), (24, 24), (25, 20), (26, 21), (27, 16), (30, 16), (31, 19), (32, 15), (33, 25), (34, 17), (35, 16), (36, 28), (37, 14), (38, 14), (39, 19), (40, 15), (42, 15), (43, 18), (44, 14), (46, 10), (47, 22), (48, 14), (49, 13), (50, 14), (51, 24), (52, 21), (53, 22), (54, 20), (56, 16), (57, 19), (58, 16), (59, 15), (60, 20), (62, 16), (63, 19), (64, 24), (65, 16), (66, 16), (68, 17), (69, 13), (70, 18), (71, 18), (72, 15), (74, 22), (75, 20), (76, 13), (78, 19), (79, 23), (81, 19), (82, 16), (83, 25), (84, 20), (85, 16), (86, 13), (87, 16), (88, 20), (90, 19), (91, 29), (92, 13), (93, 12), (94, 19), (95, 23), (96, 17), (98, 14), (99, 14)]
nb_edges_0 = 6020 rho= 0.1 # of rows = 87 # of columns= 87 total_degree_0= 6020 RHS= 602.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  2 with obj value: 110.65 KP time = 0.840810667257756 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01492 - (Local CPU) 0.01492 - (Global CPU) 0.85573

 Solve status: Optimal Objective value: 101.15068493150685 nb_rows 87 nb_cols 78
----------------------------------------
----------------------------------------

        Updated data after iteration: 2 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (87, 78) and density : 0.21146478043029768 and number of remaining ones : 1549
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.211 density  and density_threshold= 0.330


I am in the while loop with i= 3 density= 0.21146478043029768 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  96.22
I solved model name = row_knapsack_problem for iteration i =  3 with obj value: 96.22 KP time = 0.8557312922785059 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01508 - (Local CPU) 0.01508 - (Global CPU) 0.87081

 Solve status: Optimal Objective value: 96.22 nb_rows 78 nb_cols 78
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (78, 78) and density : 0.2181130834976989 and number of remaining ones : 1327
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 18), (1, 14), (2, 20), (3, 15), (5, 14), (6, 15), (7, 17), (8, 18), (9, 15), (10, 19), (11, 17), (13, 15), (14, 15), (15, 13), (16, 20), (17, 13), (18, 16), (19, 18), (20, 20), (21, 17), (22, 16), (23, 16), (24, 23), (25, 18), (26, 19), (27, 14), (30, 15), (31, 16), (32, 14), (33, 22), (34, 17), (35, 15), (36, 25), (38, 11), (39, 19), (40, 12), (42, 13), (43, 17), (44, 12), (47, 20), (48, 13), (50, 14), (51, 23), (52, 20), (53, 21), (54, 19), (56, 16), (57, 18), (58, 15), (59, 13), (60, 18), (62, 15), (63, 17), (64, 22), (65, 16), (66, 15), (68, 16), (70, 18), (71, 18), (72, 14), (74, 20), (75, 18), (78, 16), (79, 20), (81, 17), (82, 15), (83, 23), (84, 20), (85, 15), (87, 12), (88, 20), (90, 18), (91, 26), (94, 18), (95, 21), (96, 17), (98, 13), (99, 14)]
nb_edges_0 = 4757 rho= 0.1 # of rows = 78 # of columns= 78 total_degree_0= 4757 RHS= 475.70000000000005
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  3 with obj value: 96.22 KP time = 0.8708125842968002 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01700 - (Local CPU) 0.01700 - (Global CPU) 0.88782

 Solve status: Optimal Objective value: 89.14 nb_rows 78 nb_cols 70
----------------------------------------
----------------------------------------

        Updated data after iteration: 3 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (78, 70) and density : 0.22490842490842491 and number of remaining ones : 1327
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.225 density  and density_threshold= 0.330


I am in the while loop with i= 4 density= 0.22490842490842491 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  94.06315789473683
I solved model name = row_knapsack_problem for iteration i =  4 with obj value: 94.06315789473683 KP time = 0.8878157092258334 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01548 - (Local CPU) 0.01548 - (Global CPU) 0.90330

 Solve status: Optimal Objective value: 94.06315789473683 nb_rows 70 nb_cols 70
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (70, 70) and density : 0.22979591836734695 and number of remaining ones : 1126
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 17), (1, 14), (2, 17), (3, 13), (5, 11), (6, 14), (7, 16), (8, 18), (9, 14), (10, 19), (11, 17), (13, 14), (14, 15), (16, 17), (18, 14), (19, 16), (20, 19), (21, 15), (22, 13), (23, 15), (24, 21), (25, 14), (26, 17), (27, 13), (30, 15), (31, 15), (32, 13), (33, 20), (34, 16), (35, 13), (36, 22), (39, 15), (42, 12), (43, 15), (47, 19), (48, 12), (50, 12), (51, 21), (52, 18), (53, 20), (54, 18), (56, 15), (57, 16), (58, 12), (60, 17), (62, 13), (63, 17), (64, 20), (65, 13), (66, 14), (68, 15), (70, 17), (71, 17), (72, 13), (74, 18), (75, 17), (78, 16), (79, 18), (81, 14), (82, 15), (83, 22), (84, 19), (85, 12), (88, 18), (90, 16), (91, 26), (94, 18), (95, 21), (96, 15), (99, 13)]
nb_edges_0 = 3774 rho= 0.1 # of rows = 70 # of columns= 70 total_degree_0= 3774 RHS= 377.40000000000003
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  4 with obj value: 94.06315789473683 KP time = 0.90329795924481 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01493 - (Local CPU) 0.01493 - (Global CPU) 0.91822

 Solve status: Optimal Objective value: 77.47719298245613 nb_rows 70 nb_cols 63
----------------------------------------
----------------------------------------

        Updated data after iteration: 4 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (70, 63) and density : 0.236281179138322 and number of remaining ones : 1126
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.236 density  and density_threshold= 0.330


I am in the while loop with i= 5 density= 0.236281179138322 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  82.528
I solved model name = row_knapsack_problem for iteration i =  5 with obj value: 82.528 KP time = 0.9182242093374953 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01464 - (Local CPU) 0.01464 - (Global CPU) 0.93286

 Solve status: Optimal Objective value: 82.528 nb_rows 63 nb_cols 63
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (63, 63) and density : 0.24061476442428822 and number of remaining ones : 955
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 16), (1, 11), (2, 15), (3, 11), (6, 14), (7, 16), (8, 17), (9, 14), (10, 16), (11, 17), (13, 13), (14, 13), (16, 17), (18, 14), (19, 15), (20, 18), (21, 15), (23, 15), (24, 20), (25, 13), (26, 14), (27, 12), (30, 14), (31, 14), (32, 12), (33, 17), (34, 16), (35, 11), (36, 20), (39, 14), (43, 15), (47, 17), (51, 17), (52, 16), (53, 18), (54, 16), (56, 13), (57, 14), (60, 17), (62, 10), (63, 14), (64, 19), (65, 11), (66, 12), (68, 14), (70, 17), (71, 17), (72, 13), (74, 18), (75, 16), (78, 15), (79, 17), (81, 11), (82, 13), (83, 21), (84, 15), (88, 16), (90, 14), (91, 23), (94, 16), (95, 19), (96, 15), (99, 12)]
nb_edges_0 = 3014 rho= 0.1 # of rows = 63 # of columns= 63 total_degree_0= 3014 RHS= 301.40000000000003
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  5 with obj value: 82.528 KP time = 0.9328636253485456 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01446 - (Local CPU) 0.01446 - (Global CPU) 0.94732

 Solve status: Optimal Objective value: 62.54615384615384 nb_rows 63 nb_cols 57
----------------------------------------
----------------------------------------

        Updated data after iteration: 5 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (63, 57) and density : 0.2478418267891952 and number of remaining ones : 955
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.248 density  and density_threshold= 0.330


I am in the while loop with i= 6 density= 0.2478418267891952 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  70.76
I solved model name = row_knapsack_problem for iteration i =  6 with obj value: 70.76 KP time = 0.9473247503628954 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01452 - (Local CPU) 0.01452 - (Global CPU) 0.96184

 Solve status: Optimal Objective value: 70.76 nb_rows 57 nb_cols 57
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (57, 57) and density : 0.2520775623268698 and number of remaining ones : 819
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 15), (2, 13), (6, 9), (7, 15), (8, 14), (9, 13), (10, 14), (11, 15), (13, 13), (14, 10), (16, 17), (18, 12), (19, 13), (20, 17), (21, 13), (23, 15), (24, 20), (25, 12), (26, 13), (27, 12), (30, 13), (31, 13), (32, 11), (33, 16), (34, 14), (36, 19), (39, 13), (43, 14), (47, 14), (51, 16), (52, 15), (53, 17), (54, 14), (56, 12), (57, 14), (60, 16), (63, 13), (64, 18), (66, 12), (68, 13), (70, 16), (71, 17), (72, 12), (74, 16), (75, 14), (78, 15), (79, 15), (82, 11), (83, 20), (84, 13), (88, 15), (90, 14), (91, 21), (94, 14), (95, 19), (96, 14), (99, 11)]
nb_edges_0 = 2430 rho= 0.1 # of rows = 57 # of columns= 57 total_degree_0= 2430 RHS= 243.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  6 with obj value: 70.76 KP time = 0.9618412923300639 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01477 - (Local CPU) 0.01477 - (Global CPU) 0.97661

 Solve status: Optimal Objective value: 54.66666666666667 nb_rows 57 nb_cols 51
----------------------------------------
----------------------------------------

        Updated data after iteration: 6 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (57, 51) and density : 0.25971792225662194 and number of remaining ones : 819
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.260 density  and density_threshold= 0.330


I am in the while loop with i= 7 density= 0.25971792225662194 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  56.629999999999995
I solved model name = row_knapsack_problem for iteration i =  7 with obj value: 56.629999999999995 KP time = 0.976609208388254 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01543 - (Local CPU) 0.01543 - (Global CPU) 0.99204

 Solve status: Optimal Objective value: 56.629999999999995 nb_rows 51 nb_cols 51
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (51, 51) and density : 0.26566705113417916 and number of remaining ones : 691
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 14), (2, 10), (7, 13), (8, 14), (9, 10), (10, 14), (11, 12), (13, 12), (16, 16), (19, 11), (20, 16), (21, 11), (23, 14), (24, 18), (25, 11), (26, 12), (27, 11), (30, 11), (31, 12), (33, 13), (34, 14), (36, 19), (39, 13), (43, 12), (47, 14), (51, 14), (52, 14), (53, 15), (54, 13), (56, 10), (57, 12), (60, 16), (63, 13), (64, 17), (66, 11), (68, 12), (70, 16), (71, 13), (72, 11), (74, 16), (75, 14), (78, 12), (79, 14), (83, 19), (84, 12), (88, 14), (90, 14), (91, 20), (94, 13), (95, 17), (96, 12)]
nb_edges_0 = 1910 rho= 0.1 # of rows = 51 # of columns= 51 total_degree_0= 1910 RHS= 191.0
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  7 with obj value: 56.629999999999995 KP time = 0.9920412504579872 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01498 - (Local CPU) 0.01498 - (Global CPU) 1.00702

 Solve status: Optimal Objective value: 48.7 nb_rows 51 nb_cols 46
----------------------------------------
----------------------------------------

        Updated data after iteration: 7 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (51, 46) and density : 0.27237851662404094 and number of remaining ones : 691
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.272 density  and density_threshold= 0.330


I am in the while loop with i= 8 density= 0.27237851662404094 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  46.138888888888886
I solved model name = row_knapsack_problem for iteration i =  8 with obj value: 46.138888888888886 KP time = 1.0070187924429774 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01460 - (Local CPU) 0.01460 - (Global CPU) 1.02162

 Solve status: Optimal Objective value: 46.138888888888886 nb_rows 46 nb_cols 46
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (46, 46) and density : 0.27882797731569 and number of remaining ones : 590
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 13), (7, 13), (8, 14), (10, 14), (11, 11), (13, 11), (16, 15), (19, 9), (20, 15), (21, 10), (23, 13), (24, 16), (25, 10), (26, 12), (27, 10), (30, 9), (31, 11), (33, 10), (34, 13), (36, 19), (39, 13), (43, 12), (47, 14), (51, 14), (52, 13), (53, 12), (54, 12), (57, 11), (60, 14), (63, 11), (64, 15), (68, 11), (70, 14), (71, 12), (74, 14), (75, 12), (78, 12), (79, 12), (83, 18), (84, 11), (88, 14), (90, 14), (91, 18), (94, 12), (95, 16), (96, 11)]
nb_edges_0 = 1526 rho= 0.1 # of rows = 46 # of columns= 46 total_degree_0= 1526 RHS= 152.6
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  8 with obj value: 46.138888888888886 KP time = 1.0216212514787912 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01409 - (Local CPU) 0.01409 - (Global CPU) 1.03571

 Solve status: Optimal Objective value: 39.83333333333333 nb_rows 46 nb_cols 41
----------------------------------------
----------------------------------------

        Updated data after iteration: 8 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (46, 41) and density : 0.2873806998939555 and number of remaining ones : 590
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.287 density  and density_threshold= 0.330


I am in the while loop with i= 9 density= 0.2873806998939555 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  38.064516129032256
I solved model name = row_knapsack_problem for iteration i =  9 with obj value: 38.064516129032256 KP time = 1.035706793423742 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01452 - (Local CPU) 0.01453 - (Global CPU) 1.05023

 Solve status: Optimal Objective value: 38.064516129032256 nb_rows 41 nb_cols 41
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (41, 41) and density : 0.2950624628197501 and number of remaining ones : 496
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 12), (7, 13), (8, 13), (10, 12), (11, 10), (13, 10), (16, 15), (20, 14), (23, 12), (24, 13), (26, 11), (27, 10), (31, 11), (34, 10), (36, 16), (39, 11), (43, 10), (47, 12), (51, 13), (52, 13), (53, 11), (54, 12), (57, 11), (60, 13), (63, 11), (64, 12), (68, 11), (70, 13), (71, 10), (74, 13), (75, 11), (78, 11), (79, 12), (83, 18), (84, 10), (88, 12), (90, 13), (91, 16), (94, 10), (95, 15), (96, 10)]
nb_edges_0 = 1185 rho= 0.1 # of rows = 41 # of columns= 41 total_degree_0= 1185 RHS= 118.5
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  9 with obj value: 38.064516129032256 KP time = 1.0502323774853721 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01506 - (Local CPU) 0.01506 - (Global CPU) 1.06530

 Solve status: Optimal Objective value: 38.225806451612904 nb_rows 41 nb_cols 37
----------------------------------------
----------------------------------------

        Updated data after iteration: 9 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (41, 37) and density : 0.3005932762030323 and number of remaining ones : 496
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.301 density  and density_threshold= 0.330


I am in the while loop with i= 10 density= 0.3005932762030323 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  31.460714285714282
I solved model name = row_knapsack_problem for iteration i =  10 with obj value: 31.460714285714282 KP time = 1.065297043416649 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01610 - (Local CPU) 0.01611 - (Global CPU) 1.08140

 Solve status: Optimal Objective value: 31.460714285714282 nb_rows 37 nb_cols 37
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (37, 37) and density : 0.30825420014609206 and number of remaining ones : 422
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 11), (7, 12), (8, 13), (10, 11), (16, 12), (20, 13), (23, 12), (24, 10), (26, 11), (27, 9), (31, 11), (34, 10), (36, 15), (39, 11), (47, 11), (51, 12), (52, 13), (53, 9), (54, 11), (57, 11), (60, 11), (63, 11), (64, 11), (68, 10), (70, 12), (71, 10), (74, 13), (75, 11), (78, 11), (79, 12), (83, 15), (88, 12), (90, 12), (91, 14), (94, 8), (95, 13), (96, 8)]
nb_edges_0 = 947 rho= 0.1 # of rows = 37 # of columns= 37 total_degree_0= 947 RHS= 94.7
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  10 with obj value: 31.460714285714282 KP time = 1.081402751384303 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01550 - (Local CPU) 0.01550 - (Global CPU) 1.09690

 Solve status: Optimal Objective value: 27.79642857142857 nb_rows 37 nb_cols 33
----------------------------------------
----------------------------------------

        Updated data after iteration: 10 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (37, 33) and density : 0.3177723177723178 and number of remaining ones : 422
        

----------------------------------------
----------------------------------------


calling greedy approaches for zero deletion, density= 0.318 density  and density_threshold= 0.330


I am in the while loop with i= 11 density= 0.3177723177723178 and fixed_threshold= 0.33

Model status: Optimal
Solver Status after model with status :row_knapsack_problem, 1
Computed Objective Value :  29.862499999999997
I solved model name = row_knapsack_problem for iteration i =  11 with obj value: 29.862499999999997 KP time = 1.0968982103513554 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : row_knapsack_problem  Local Time:  - (real) 0.01470 - (Local CPU) 0.01470 - (Global CPU) 1.11160

 Solve status: Optimal Objective value: 29.862499999999997 nb_rows 33 nb_cols 33
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  row_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 33) and density : 0.3241505968778696 and number of remaining ones : 353
        
----------------------------------------

----------------------------------------
I will solve column KP_QBc with Input data : ***************

 input cols_data = [(0, 9), (7, 10), (8, 12), (10, 10), (16, 11), (20, 12), (23, 10), (24, 10), (26, 9), (31, 11), (34, 10), (36, 12), (39, 9), (47, 10), (51, 12), (52, 12), (54, 11), (57, 9), (60, 11), (63, 11), (64, 10), (68, 9), (70, 12), (71, 10), (74, 11), (75, 11), (78, 10), (79, 11), (83, 15), (88, 11), (90, 8), (91, 12), (95, 12)]
nb_edges_0 = 736 rho= 0.1 # of rows = 33 # of columns= 33 total_degree_0= 736 RHS= 73.60000000000001
----------------------------------------
Model status: Optimal
I solved model name = column_knapsack_problem for iteration i =  11 with obj value: 29.862499999999997 KP time = 1.1115962523035705 debug : 2

----------------------------------------------------------------------
Stats
 Model solved : column_knapsack_problem  Local Time:  - (real) 0.01445 - (Local CPU) 0.01445 - (Global CPU) 1.12605

 Solve status: Optimal Objective value: 26.224999999999998 nb_rows 33 nb_cols 29
----------------------------------------
----------------------------------------

        Updated data after iteration: 11 . We solved KP model :  column_knapsack_problem with delta =  0.0 
        Found matrix of size : (33, 29) and density : 0.3322884012539185 and number of remaining ones : 353
        

----------------------------------------
----------------------------------------

----------------------------------------

            End of greedy approaches. Exit while loop. I did: 11 iterations
            Density : 0.332 > 0.33
            It took me : 1.126 time
            Found matrix of size : (33, 29) and density : 0.332
            
----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 113.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_1_M_7.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 0.15542 - (Local CPU) 0.15542 - (Global CPU) 0.15542

 Solve status: Optimal Objective value: 113.0 nb_rows 2 nb_cols 8
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 2
Number of Remaining number Columns : 8
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 16 Density : 1.0 current obj value 113.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 2  and cols_res of lenght = 8
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 7
        with delta =  0.0
        Found matrix of size : (2, 8)
        and density : 1.0
        and # of ones : 16
        and Heuristic QBC time   : 0.15542
        and Global QBC  time  : 0.15542
        
 Remaining Rows  : [4, 60]
 Remaining  Cols  : [23, 34, 36, 51, 54, 7, 79, 83]

----------------------------------------------------------------------
 
    End of computations for matrix 7 in  data/random_bench/random_very_long.txt at level 1 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (2,8), with  density : 1.0 and number of ones: 16
    Global Time (in sec): 1.281
    Total Time in QBC approaches: 0.155
    Time in greedy approach: 1.126,  size of matrix found by greedy : (33,29) 
    With density : 0.332 and # ones : 318 
    Time in heuristic only : 0.155 
    Time in warm start only : 0.000
    Number of iterations in greedy approach: 11
    Percentage of greedy approach run time in global run time : 87.87% 
    Percentage of heuristic run time in QBC run time : 100.00%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

dec_conq= 1

 Level 0, Matrix 14:
Size Rows: 98
Size Cols: 96

 Level 0 Matrix  15:
Size Rows: 100
Size Cols: 88

Task with matrix 14 with size (98,96) and density 0.8105867346938775 and number of ones 7626  and number of zeros 1782 has been added to the queue.

 Return from 14 with winning node = 14

calling decrease_and_conquer for node 15

Task with matrix 15 with size (100,88) and density 0.815 and number of ones 7172  and number of zeros 1628 has been added to the queue.

return in decrease_and_conquer from 15 with winning node = 15

return in decrease_and_conquer from 7 with winning node = 14

return in decrease_and_conquer from 7 with winning node = 14

return in decrease_and_conquer from 3 with winning node = 14

return in decrease_and_conquer from 3 with winning node = 14

return in decrease_and_conquer from 1 with winning node = 14

----------------------------------------------------------------------

End of tasks generation stage. Last generated task from matrix 1 with winning node 14
Tasks_generation time: 7.9327 sec
----------------------------------------------------------------------
 Size of the queue: 8
 Matrix: 14, Size: 7626, Number Rows: 98,  Number Cols: 96,  Number Edges: 7626, obj -inf
 Matrix: 15, Size: 7172, Number Rows: 100,  Number Cols: 88,  Number Edges: 7172, obj -inf
 Matrix: 12, Size: 7177, Number Rows: 90,  Number Cols: 98,  Number Edges: 7177, obj -inf
 Matrix: 9, Size: 7025, Number Rows: 88,  Number Cols: 98,  Number Edges: 7025, obj -inf
 Matrix: 8, Size: 6606, Number Rows: 81,  Number Cols: 100,  Number Edges: 6606, obj -inf
 Matrix: 10, Size: 6150, Number Rows: 83,  Number Cols: 90,  Number Edges: 6150, obj -inf
 Matrix: 13, Size: 6847, Number Rows: 92,  Number Cols: 91,  Number Edges: 6847, obj -inf
 Matrix: 11, Size: 6502, Number Rows: 90,  Number Cols: 88,  Number Edges: 6502, obj -inf

----------------------------------------------------------------------


***QUEUE We currently process task number 14 with (edges 7626) selected_model max_e_c dec_conq 0 delta 0.0 threshold 0.33 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 14 in  data/random_bench/random_very_long.txt at level 0 and with model:  max_e_c***
Size of current matrix :  98 * 96 = 9408 ; dec_conq: 0
Prev_lower_bound :  -inf number input zeros :  1782 ; number input ones :  7626
rho =  0.1 ; delta :  0.0
Input density : 0.811 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------

----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 6400.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_0_M_14.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 38.55729 - (Local CPU) 38.55722 - (Global CPU) 38.55722

 Solve status: Optimal Objective value: 6400.0 nb_rows 2 nb_cols 78
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 2
Number of Remaining number Columns : 78
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 156 Density : 1.0 current obj value 6400.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 2  and cols_res of lenght = 78
 A lower_bound = 156 has been found by max_e_h 
 Start computing max_er with lower_bound =  156. 
 !!!!!!!!!!!!!!!!!! I got a lower bound  156
----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed Objective Value: 420.0
----------------------------------------------------------------------
Model status: Optimal

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 7397.65303 - (Local CPU) 1413.52314 - (Global CPU) 1452.08036

 Solve status: Optimal Objective value: 420.0 nb_rows 15 nb_cols 28
----------------------------------------
*****Model in warm start is feasible. The solution has been improved !!!*** 
model status = 1, LPstatus Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_wstart_0_M_14.csv


-- Debugging Step: checking extracted solution after solving model**** -- max_e_wr
len_rows_res= 15
row_res= [11, 13, 14, 15, 3, 34, 35, 36, 40, 42, 49, 61, 65, 74, 91]
len_cols_res= 28
cols_res= [0, 13, 15, 16, 24, 29, 30, 31, 37, 43, 56, 58, 60, 61, 67, 71, 72, 77, 8, 80, 84, 87, 89, 90, 92, 97, 98, 99]
nb row_names_res, = 15
row_names_res = [11, 13, 14, 15, 3, 34, 35, 36, 40, 42, 49, 61, 65, 74, 91]
col_names_res = [0, 13, 15, 16, 24, 29, 30, 31, 37, 43, 56, 58, 60, 61, 67, 71, 72, 77, 8, 80, 84, 87, 89, 90, 92, 97, 98, 99]
 nb col_names_res, = 28

----------------------------------------

----------------------------------------
 results from updating data after solving model = max_e_wr  delta =   0.0
Number of Remaining  Rows  : 15
Number of Remaining number Columns : 28
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 420 Density : 1.0
----------------------------------------

----------------------------------------

Exit from the exact  approach  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 15  and cols_res of lenght = 28 and density = 1.0
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 14
        with delta =  0.0
        Found matrix of size : (15, 28)
        and density : 1.0
        and # of ones : 420
        and Heuristic QBC time   : 38.55722
        and Global QBC  time  : 1452.08036
        
 Remaining Rows  : [(3, 28), (11, 28), (13, 28), (14, 28), (15, 28), (34, 28), (35, 28), (36, 28), (40, 28), (42, 28), (49, 28), (61, 28), (65, 28), (74, 28), (91, 28)]
 Remaining  Cols  : [(0, 15), (8, 15), (13, 15), (15, 15), (16, 15), (24, 15), (29, 15), (30, 15), (31, 15), (37, 15), (43, 15), (56, 15), (58, 15), (60, 15), (61, 15), (67, 15), (71, 15), (72, 15), (77, 15), (80, 15), (84, 15), (87, 15), (89, 15), (90, 15), (92, 15), (97, 15), (98, 15), (99, 15)]

----------------------------------------------------------------------
 
    End of computations for matrix 14 in  data/random_bench/random_very_long.txt at level 0 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (15,28), with  density : 1.0 and number of ones: 420
    Global Time (in sec): 1452.080
    Total Time in QBC approaches: 1452.080
    Time in greedy approach: 0.000,  size of matrix found by greedy : (0,0) 
    With density : 0.000 and # ones : 0 
    Time in heuristic only : 38.557 
    Time in warm start only : 1413.523
    Number of iterations in greedy approach: 0
    Percentage of greedy approach run time in global run time : 0.00% 
    Percentage of heuristic run time in QBC run time : 2.66%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

I solved TASK NUMBER 14 with (edges: 7626) and obj: 420  with solving TIME : 7437.2074 sec
Task 14 with obj 420) is the current record.

***QUEUE We currently process task number 12 with (edges 7177) selected_model max_e_c dec_conq 0 delta 0.0 threshold 0.33 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 12 in  data/random_bench/random_very_long.txt at level 0 and with model:  max_e_c***
Size of current matrix :  90 * 98 = 8820 ; dec_conq: 0
Prev_lower_bound :  420 number input zeros :  1643 ; number input ones :  7177
rho =  0.1 ; delta :  0.0
Input density : 0.814 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------

----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 6077.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_0_M_12.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 1400.54473 - (Local CPU) 28.08361 - (Global CPU) 28.08361

 Solve status: Optimal Objective value: 6077.0 nb_rows 2 nb_cols 80
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 2
Number of Remaining number Columns : 80
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 160 Density : 1.0 current obj value 6077.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 2  and cols_res of lenght = 80
 A lower_bound = 420 has been previously found and given as input. 
 Start computing max_er with lower_bound =  420. 
 !!!!!!!!!!!!!!!!!! I got a lower bound  420
----------------------------------------------------------------------
Model status: Not Solved
----------------------------------------------------------------------
Model status: Not Solved

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 7200.29340 - (Local CPU) 2624.84514 - (Global CPU) 2652.92874

 Solve status: Not Solved Objective value: 7177.0 nb_rows 2 nb_cols 80
----------------------------------------
*****Model in warm start is infeasible.!!! The given lower bound cannot be improved. Return the below data*** 
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 12
        with delta =  0.0
        Found matrix of size : (2, 80)
        and density : 1.0
        and # of ones : 420
        and Heuristic QBC time   : 28.08361
        and Global QBC  time  : 2652.92874
        
 Remaining Rows  : [(15, 80), (42, 80)]
 Remaining  Cols  : [(0, 2), (1, 2), (3, 2), (4, 2), (5, 2), (8, 2), (9, 2), (10, 2), (11, 2), (12, 2), (13, 2), (14, 2), (15, 2), (16, 2), (17, 2), (18, 2), (19, 2), (22, 2), (24, 2), (25, 2), (26, 2), (27, 2), (28, 2), (29, 2), (30, 2), (31, 2), (32, 2), (33, 2), (35, 2), (36, 2), (37, 2), (38, 2), (39, 2), (41, 2), (43, 2), (44, 2), (46, 2), (47, 2), (48, 2), (49, 2), (50, 2), (52, 2), (53, 2), (55, 2), (56, 2), (58, 2), (60, 2), (61, 2), (62, 2), (63, 2), (64, 2), (65, 2), (66, 2), (67, 2), (68, 2), (71, 2), (72, 2), (74, 2), (75, 2), (76, 2), (77, 2), (78, 2), (79, 2), (80, 2), (81, 2), (82, 2), (83, 2), (84, 2), (85, 2), (86, 2), (87, 2), (88, 2), (89, 2), (90, 2), (92, 2), (94, 2), (96, 2), (97, 2), (98, 2), (99, 2)]

----------------------------------------------------------------------
 
    End of computations for matrix 12 in  data/random_bench/random_very_long.txt at level 0 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (2,80), with  density : 1.0 and number of ones: 420
    Global Time (in sec): 2652.929
    Total Time in QBC approaches: 2652.929
    Time in greedy approach: 0.000,  size of matrix found by greedy : (0,0) 
    With density : 0.000 and # ones : 0 
    Time in heuristic only : 28.084 
    Time in warm start only : 2624.845
    Number of iterations in greedy approach: 0
    Percentage of greedy approach run time in global run time : 0.00% 
    Percentage of heuristic run time in QBC run time : 1.06%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    
----------------------------------------------------------------------

I solved TASK NUMBER 12 with (edges: 7177) and obj: 160  with solving TIME : 8601.7370 sec
Task 12 with obj  160 has been fathomed by the best task 14 with obj  : 420.

***QUEUE We currently process task number 15 with (edges 7172) selected_model max_e_c dec_conq 0 delta 0.0 threshold 0.33 rho 0.1 QBC_time 0.0 ***


----------------------------------------------------------------------
***Stats Current Input for matrix 15 in  data/random_bench/random_very_long.txt at level 0 and with model:  max_e_c***
Size of current matrix :  100 * 88 = 8800 ; dec_conq: 0
Prev_lower_bound :  420 number input zeros :  1628 ; number input ones :  7172
rho =  0.1 ; delta :  0.0
Input density : 0.815 ; density_threshold: 0.33000
----------------------------------------------------------------------
End Current  Stats
----------------------------------------------------------------------

----------------------------------------

 Calling exact approaches for QB clique discovery with delta = 0.0
----------------------------------------

----------------------------------------

I am in warm_exact before calling max_e_h $$$$$$$$$$$$$$$$$$

----------------------------------------------------------------------
Model status: Optimal
----------------------------------------------------------------------
Computed by max_e_h Objective Value : 6306.0
Model status: Optimal
Solution saved to Experiments/random_bench/random_very_long.txt/results_h_0_M_15.csv

----------------------------------------------------------------------
Stats
 Model solved : max_e_h  Local Time:  - (real) 14.40506 - (Local CPU) 14.40506 - (Global CPU) 14.40506

 Solve status: Optimal Objective value: 6306.0 nb_rows 2 nb_cols 75
----------------------------------------

----------------------------------------
Results from updating data after solving model = max_e_h  delta =   0.0
Number of Remaining number  Rows  : 2
Number of Remaining number Columns : 75
Remaining  number Edges_0 P: 0 Remaining  number Edges_1 : 150 Density : 1.0 current obj value 6306.0
----------------------------------------

----------------------------------------

Exit from the heuristic (or exact  approach)  max_e_c  with delta= 0.0 Found matrix with rows_res of lenght = 2  and cols_res of lenght = 75
 A lower_bound = 420 has been previously found and given as input. 
 Start computing max_er with lower_bound =  420. 
 !!!!!!!!!!!!!!!!!! I got a lower bound  420
----------------------------------------------------------------------
Model status: Not Solved
----------------------------------------------------------------------
Model status: Not Solved

----------------------------------------------------------------------
Stats
 Model solved : max_e_wr  Local Time:  - (real) 7648.89388 - (Local CPU) 1603.05628 - (Global CPU) 1617.46135

 Solve status: Not Solved Objective value: 7172.0 nb_rows 2 nb_cols 75
----------------------------------------
*****Model in warm start is infeasible.!!! The given lower bound cannot be improved. Return the below data*** 
----------------------------------------

        Exit from the exact approach: max_e_c for matrix 15
        with delta =  0.0
        Found matrix of size : (2, 75)
        and density : 1.0
        and # of ones : 420
        and Heuristic QBC time   : 14.40506
        and Global QBC  time  : 1617.46135
        
 Remaining Rows  : [(15, 75), (42, 75)]
 Remaining  Cols  : [(0, 2), (1, 2), (3, 2), (4, 2), (5, 2), (8, 2), (9, 2), (10, 2), (11, 2), (12, 2), (13, 2), (14, 2), (15, 2), (16, 2), (17, 2), (18, 2), (19, 2), (22, 2), (24, 2), (25, 2), (26, 2), (27, 2), (29, 2), (30, 2), (31, 2), (32, 2), (33, 2), (35, 2), (37, 2), (38, 2), (39, 2), (41, 2), (43, 2), (44, 2), (46, 2), (47, 2), (48, 2), (49, 2), (50, 2), (52, 2), (53, 2), (56, 2), (58, 2), (60, 2), (61, 2), (62, 2), (63, 2), (64, 2), (65, 2), (66, 2), (67, 2), (68, 2), (71, 2), (72, 2), (74, 2), (75, 2), (76, 2), (77, 2), (78, 2), (80, 2), (81, 2), (82, 2), (84, 2), (85, 2), (86, 2), (87, 2), (88, 2), (89, 2), (90, 2), (92, 2), (94, 2), (96, 2), (97, 2), (98, 2), (99, 2)]

----------------------------------------------------------------------
 
    End of computations for matrix 15 in  data/random_bench/random_very_long.txt at level 0 and debug  2
    With  model: max_e_c and quasi-biclique error: 0.0 
    Size of Remaining matrix : (2,75), with  density : 1.0 and number of ones: 420
    Global Time (in sec): 1617.461
    Total Time in QBC approaches: 1617.461
    Time in greedy approach: 0.000,  size of matrix found by greedy : (0,0) 
    With density : 0.000 and # ones : 0 
    Time in heuristic only : 14.405 
    Time in warm start only : 1603.056
    Number of iterations in greedy approach: 0
    Percentage of greedy approach run time in global run time : 0.00% 
    Percentage of heuristic run time in QBC run time : 0.89%
    With zero deletion rate (rho): 0.1 and threshold: 0.33
    